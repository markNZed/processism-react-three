{"version":3,"file":"static/js/487.479f974b.chunk.js","mappings":";sWAIA,SAASA,IACP,IAAIC,EAAUC,OAAOC,OAAO,MAG5B,SAASC,EAAeC,EAAKC,GAC3B,IAAIC,EAAKF,EAAIE,GACTC,EAAOH,EAAIG,KACXC,EAAeJ,EAAII,kBAAoC,IAAjBA,IAA0BA,EAAe,IACnF,IAAIC,EAAOL,EAAIK,UAAoB,IAATA,IAAkBA,EAAO,WAAW,GAC9D,IAAIC,EAAmBN,EAAIM,iBAG3B,QAHuE,IAArBA,IAA8BA,EAAmB,OAG/FV,EAAQM,GAEZ,IAEEE,EAAeA,EAAaG,KAAI,SAAUC,GAOxC,OANIA,GAAOA,EAAIC,iBACbV,EAAeS,GAAK,SAAUE,GAC5B,GAAIA,aAAqBC,MAAS,MAAMD,CAC1C,IACAF,EAAMZ,EAAQY,EAAIN,IAAIU,OAEjBJ,CACT,IAGAH,EAAOQ,EAAW,IAAMV,EAAO,SAAWE,GACtCC,IACFA,EAAmBO,EAAW,IAAMV,EAAO,qBAAuBG,IAIpE,IAAIM,EAAQ,KACQ,oBAATP,EACTO,EAAQP,EAAKS,WAAM,EAAQV,GAE3BW,QAAQC,MAAM,mDAEhBpB,EAAQM,GAAM,CACZA,GAAIA,EACJU,MAAOA,EACPN,iBAAkBA,GAEpBL,EAASW,EACX,CAAE,MAAMK,GACAA,GAAOA,EAAIC,OACfH,QAAQC,MAAMC,GAEhBhB,EAASgB,EACX,CACF,CAmCA,SAASJ,EAAUV,EAAMgB,GACvB,IAAIC,OAAS,EACbC,KAAKC,aAAe,SAAUC,GAAK,OAAOH,EAASG,CAAG,EACtD,IAAIC,EAAMC,IAAIC,gBACZ,IAAIC,KACF,CAAE,OAAUxB,EAAKyB,QAAQ,MAAO,IAAO,0BAA4BT,EAAM,OACzE,CAACU,KAAM,4BAGX,IACEC,cAAcN,EAChB,CAAE,MAAMP,GACNF,QAAQC,MAAMC,EAChB,CAGA,OAFAQ,IAAIM,gBAAgBP,UACbH,KAAKC,aACLF,CACT,CAGAC,KAAKW,iBAAiB,WAAW,SAAUC,GACzC,IAAIjC,EAAMiC,EAAEC,KACRC,EAAYnC,EAAImC,UAChBC,EAASpC,EAAIoC,OACbF,EAAOlC,EAAIkC,KACf,IAEiB,mBAAXE,GACFrC,EAAemC,GAAM,SAAUd,GACzBA,aAAkBT,MACpB0B,YAAY,CACVF,UAAWA,EACXG,SAAS,EACTtB,MAAOI,EAAOmB,UAGhBF,YAAY,CACVF,UAAWA,EACXG,SAAS,EACTlB,OAAQ,CAACoB,WAA8B,oBAAXpB,IAGlC,IAGa,eAAXgB,GA7ER,SAAoBpC,EAAKC,GACvB,IAAIwC,EAEAvC,EAAKF,EAAIE,GACTwC,EAAO1C,EAAI0C,KACV9C,EAAQM,IAAoC,oBAAtBN,EAAQM,GAAIU,OACrCX,EAAS,IAAIU,MAAO,iBAAmBT,EAAK,wDAE9C,IACE,IAAIkB,GAAUqB,EAAQ7C,EAAQM,IAAKU,MAAME,MAAM2B,EAAOC,GAClDtB,GAAiC,oBAAhBA,EAAOuB,KAC1BvB,EAAOuB,KAAKC,GAAc,SAAUC,GAAO,OAAO5C,EAAS4C,aAAelC,MAAQkC,EAAM,IAAIlC,MAAM,GAAKkC,GAAO,IAE9GD,EAAaxB,EAEjB,CAAE,MAAMH,GACNhB,EAASgB,EACX,CACA,SAAS2B,EAAaxB,GACpB,IACE,IAAI0B,EAAKlD,EAAQM,GAAII,kBAAoBV,EAAQM,GAAII,iBAAiBc,GACjE0B,GAAOC,MAAMC,QAAQF,IAAQA,EAAGG,SACnCH,OAAKI,GAEPjD,EAASmB,EAAQ0B,EACnB,CAAE,MAAM7B,GACNF,QAAQC,MAAMC,GACdhB,EAASgB,EACX,CACF,CACF,CAgDMkC,CAAWjB,GAAM,SAAUd,EAAQgC,GAC7BhC,aAAkBT,MACpB0B,YAAY,CACVF,UAAWA,EACXG,SAAS,EACTtB,MAAOI,EAAOmB,UAGhBF,YAAY,CACVF,UAAWA,EACXG,SAAS,EACTlB,OAAQA,GACPgC,QAAiBF,EAExB,GAEJ,CAAE,MAAMjC,GACNoB,YAAY,CACVF,UAAWA,EACXG,SAAS,EACTtB,MAAOC,EAAIoC,OAEf,CACF,GACF,CA0CA,IAAIC,EAAkB,WACpB,IAAIC,GAAY,EAIhB,GAAsB,qBAAXC,QAAqD,qBAApBA,OAAOC,SACjD,IAGe,IAAIC,OACfjC,IAAIC,gBAAgB,IAAIC,KAAK,CAAC,IAAK,CAAEE,KAAM,6BAEtC8B,YACPJ,GAAY,CACd,CAAE,MAAOtC,GAELF,QAAQ6C,IACL,sGAAyG3C,EAAIsB,QAAW,IAG/H,CAKF,OADAe,EAAkB,WAAc,OAAOC,CAAW,EAC3CA,CACT,EAEIM,EAAkB,EAClBC,EAAa,EACbC,GAAqB,EACrBC,EAAUnE,OAAOC,OAAO,MACxBmE,EAAoBpE,OAAOC,OAAO,MAClCoE,EAAerE,OAAOC,OAAO,MAgBjC,SAASqE,EAAmBC,GAC1B,KAAMA,GAAmC,oBAAjBA,EAAQ/D,QAAyB0D,EACvD,MAAM,IAAIpD,MAAM,oCAElB,IAAIP,EAAegE,EAAQhE,aACvBC,EAAO+D,EAAQ/D,KACfC,EAAmB8D,EAAQ9D,iBAC3B+D,EAAWD,EAAQC,SAEvB,IAAKf,IACH,OA9FJ,SAAgCc,GAC9B,IAAIE,EAAa,WAEf,IADA,IAAI5B,EAAO,GAAI6B,EAAMC,UAAUvB,OACvBsB,KAAQ7B,EAAM6B,GAAQC,UAAWD,GAEzC,OAAOD,EAAWG,iBAAiB9B,MAAK,SAAU+B,GAChD,GAA0B,oBAAfA,EACT,OAAOA,EAAW5D,WAAM,EAAQ4B,GAEhC,MAAM,IAAI/B,MAAM,kFAEpB,GACF,EAoBA,OAnBA2D,EAAWG,eAAiB,WAE1B,IAAIrE,EAAegE,EAAQhE,aACvBC,EAAO+D,EAAQ/D,KAGnBD,EAAe2C,MAAMC,QAAQ5C,GAAgBA,EAAaG,KAAI,SAAUC,GAAO,OAAOA,GAAOA,EAAIiE,eAAiBjE,EAAIiE,iBAAmBjE,CAAK,IAC1I,GAGJ,IAAImE,EAAcC,QAAQC,IAAIzE,GAAcuC,MAAK,SAAUmC,GACzD,OAAOzE,EAAKS,MAAM,KAAMgE,EAC1B,IAKA,OAFAR,EAAWG,eAAiB,WAAc,OAAOE,CAAa,EAEvDA,CACT,EACOL,CACT,CA6DWS,CAAuBX,GAGhB,MAAZC,IACFA,EAAW,YAEb,IAAInE,EAAK,kBAAoB2D,EACzB1D,EAAOiE,EAAQjE,MAAQD,EACvB8E,EAAsB,KAoB1B,SAASV,IAEP,IADA,IAAI5B,EAAO,GAAI6B,EAAMC,UAAUvB,OACvBsB,KAAQ7B,EAAM6B,GAAQC,UAAWD,GAGzC,IAAKS,EAAqB,CACxBA,EAAsBC,EAAWZ,EAAS,iBAAkBC,EAAWY,kBACvE,IAAIC,EAAa,WACfH,EAAsB,KACtBf,EAAkBI,GAAUe,OAAOD,EACrC,GACElB,EAAkBI,KAAcJ,EAAkBI,GAAY,IAAIgB,MAAQC,IAAIH,EAClF,CAGA,OAAOH,EAAoBrC,MAAK,SAAU3C,GAGxC,GAFiBA,EAAIwC,WAGnB,OAAOyC,EAAWZ,EAAS,aAAc,CAACnE,GAAIA,EAAIwC,KAAMA,IAExD,MAAM,IAAI/B,MAAM,kFAEpB,GACF,CASA,OAnDAP,EAAeA,GAAgBA,EAAaG,KAAI,SAAUC,GAexD,MAbmB,oBAARA,GAAuBA,EAAI0E,mBACpCnB,GAAqB,EACrBvD,EAAM2D,EAAmB,CACvBE,SAAUA,EACVlE,KAAO,IAAMA,EAAO,0BAA6BK,EAAIL,KACrDE,KAAO,wBAA2BkF,EAAkB/E,GAAQ,SAE9DuD,GAAqB,GAGnBvD,GAAOA,EAAI0E,mBACb1E,EAAMA,EAAI0E,kBAEL1E,CACT,IA2BA8D,EAAWY,iBAAmB,CAC5BzE,gBAAgB,EAChBP,GAAIA,EACJC,KAAMA,EACNC,aAAcA,EACdC,KAAMkF,EAAkBlF,GACxBC,iBAAkBA,GAAoBiF,EAAkBjF,IAEnDgE,CACT,CA0BA,SAASiB,EAAkBC,GACzB,IAAIrE,EAAMqE,EAAGC,WAKb,OAHK,YAAYC,KAAKvE,IAAQ,YAAYuE,KAAKvE,KAC7CA,EAAM,YAAcA,GAEfA,CACT,CAmCA,SAAS8D,EAAWZ,EAAUjC,EAAQF,GACpC,OAAO,IAAI0C,SAAQ,SAAUe,EAASC,GACpC,IAAIzD,IAAc2B,EAClBI,EAAa/B,GAAa,SAAU0D,GAC9BA,EAASvD,QACXqD,EAAQE,EAASzE,QAEjBwE,EAAO,IAAIjF,MAAO,mBAAqByB,EAAS,UAAayD,EAAS7E,OAE1E,EAzCJ,SAAmBqD,GACjB,IAAIyB,EAAS9B,EAAQK,GACrB,IAAKyB,EAAQ,CAEX,IAAIC,EAAYR,EAAkB5F,IAGlCmG,EAAS9B,EAAQK,GAAY,IAAIX,OAC/BjC,IAAIC,gBACF,IAAIC,KACF,CAAE,gCAAmC0C,EAASzC,QAAQ,MAAO,IAAO,aAAemE,EAAY,OAC/F,CAAClE,KAAM,8BAMNmE,UAAY,SAAU/D,GAC3B,IAAI4D,EAAW5D,EAAEC,KACb+D,EAAQJ,EAAS1D,UACjBlC,EAAWiE,EAAa+B,GAC5B,IAAKhG,EACH,MAAM,IAAIU,MAAM,gEAEXuD,EAAa+B,GACpBhG,EAAS4F,EACX,CACF,CACA,OAAOC,CACT,CAaII,CAAU7B,GAAUhC,YAAY,CAC9BF,UAAWA,EACXC,OAAQA,EACRF,KAAMA,GAEV,GACF,yBCjZA,MAAMiE,EAAiB,+BASvB,SAASC,EAAsBC,GAM7B,OAAOA,EAAOzE,QALE,oCAChB,SAAiB0E,EAAOC,GACtB,IAAIC,EAAQC,EAAAA,YAAYF,GACxB,OAAOC,EAAQJ,EAAqBI,GAASF,CAC/C,GAEF,CAQA,MAAMI,EAAO,GAEb,IAAK,IAAIC,GAAI,EAAGA,GAAI,IAAKA,KACvBD,EAAKC,KAAMA,GAAI,GAAK,IAAM,IAAOA,GAAGlB,SAAS,IAsB/C,MAAMmB,EAAS/G,OAAO+G,QAAU,WAC9B,IAAIC,EAASrC,UAAU,GACvB,IAAK,IAAImC,EAAI,EAAGpC,EAAMC,UAAUvB,OAAQ0D,EAAIpC,EAAKoC,IAAK,CACpD,IAAIN,EAAS7B,UAAUmC,GACvB,GAAIN,EACF,IAAK,IAAIS,KAAQT,EACXxG,OAAOkH,UAAUC,eAAeC,KAAKZ,EAAQS,KAC/CD,EAAOC,GAAQT,EAAOS,GAI9B,CACA,OAAOD,CACT,EAGMK,EAAQC,KAAKC,MACbC,EAAoB,IAAIC,QACxBC,EAAuB,IAAIC,IAIjC,IAAIC,EAAqB,KA8DzB,SAASC,EAAsBC,EAAcvD,GAK3C,MAAMwD,EAoTR,SAA0BxD,GACxB,MAAMyD,EAAcC,KAAKC,UAAU3D,EAAS4D,GAC5C,IAAI9H,EAAK+H,EAAmBC,IAAIL,GACtB,MAAN3H,GACF+H,EAAmBE,IAAIN,EAAc3H,IAAOkI,GAE9C,OAAOlI,CACT,CA3TqBmI,CAAiBjE,GAIpC,IAAIkE,EAAoBjB,EAAkBa,IAAIP,GAI9C,GAHKW,GACHjB,EAAkBc,IAAIR,EAAeW,EAAoBzI,OAAOC,OAAO,OAErEwI,EAAkBV,GACpB,OAAO,IAAIU,EAAkBV,GAG/B,MAAMW,EAA4B,mBAAkBX,IAI9CY,EAAkB,SAAUC,EAAYC,GAC5Cf,EAAaa,gBAAgBvB,KAAK0B,KAAMF,EAAYC,GAGpD,MAAME,EAAWD,KAAKE,wBAA0B,IAAMJ,EAAWK,aAAe,IAAML,EAAWM,eACjG,IAAIC,EAAkBzB,EAAqBqB,GAC3C,IAAKI,EAAiB,CACpB,MAAMC,EA4JZ,SAAwBC,GAAU,aAACJ,EAAY,eAAEC,GAAiB3E,EAAS+E,GACzE,IAAI,WACFC,EAAU,gBACVC,EAAe,gBACfC,EAAe,gBACfC,EAAe,aACfC,EAAY,kBACZC,EAAiB,kBACjBC,EAAiB,uBACjBC,EAAsB,eACtBC,EAAc,YACdC,GACEzF,EAEJgF,EAAaA,GAAc,GAC3BC,EAAkBA,GAAmB,GACrCC,EAAkBA,GAAmB,GACrCE,EAAeA,GAAgB,GAC/BC,EAAoBA,GAAqB,GACzCC,EAAoBA,GAAqB,IAGrCH,GAAmBK,KACrBd,EAAe1C,EAAqB0C,KAElCa,GAA0BC,KAS5Bb,EAAiB3C,EAJjB2C,EAAiBA,EAAenH,QAC9B,6FACA,uDAMJ,GAAIgI,EAAgB,CAClB,IAAIE,EAAMF,EAAe,CAACd,eAAcC,mBACxCD,EAAegB,EAAIhB,aACnBC,EAAiBe,EAAIf,cACvB,CAIA,GAAIY,EAAwB,CAC1B,IAAII,EAAa,GACjBhB,EAAiBA,EAAenH,QAC9B,qDACA0E,IACEyD,EAAWC,KAAK1D,GACT,MAGXoD,EAAqB,GAAEC,MAA2BI,EAAWE,KAAK,UAAUP,GAC9E,CAGA,GAAIG,EAAa,CACf,MAAMK,EAAQ,mBAAkBL,OAChCT,EAAac,EAAOd,EACpBI,EAAeU,EAAOV,CACxB,CAGID,IAOFH,EAAc,GAAEA,gCACQD,iEACxBI,SAGAF,EAAmB,qBACLF,sCACFA,gCACJA,uCACWA,qBAAuBA,oBAAsBA,gBAAkBA,QACpFE,MAEEP,GAjBAA,EAAgB,wBAAuBK,0BACtBA,sBACJA,OACfL,OAc8BlH,QAAQ,6BAA6B,CAAC0E,EAAO6D,EAAQC,EAAOC,IAC/E,4BAA4B3E,KAAK2E,EAAQC,OAAO,EAAGF,IAAUD,EAAU,UAASA,KAAUhB,MAK7FD,EAAS3I,KAAO2I,EAAS3I,IAAIgK,QAAU,IAC3CzB,EAAeA,EAAalH,QAAQ,cAAgB,aAAYuH,OAQpE,OAHAL,EAAe0B,EAAqB1B,EAAcK,EAAKC,EAAYC,EAAiBC,GACpFP,EAAiByB,EAAqBzB,EAAgBI,EAAKK,EAAcC,EAAmBC,GAErF,CACLZ,eACAC,iBAEJ,CApQuB0B,CAAe9B,KAAMF,EAAYrE,EAASwD,GAC3DoB,EAAkBzB,EAAqBqB,GAAYK,CACrD,CAGAR,EAAWK,aAAeE,EAAgBF,aAC1CL,EAAWM,eAAiBC,EAAgBD,eAC5CnC,EAAO6B,EAAWiC,SAAU/B,KAAK+B,UAG7BtG,EAAQyF,cACVpB,EAAWiC,SAAStG,EAAQyF,aAAe,CACzC,SAAIjJ,GAAS,OAAOuG,KAAKC,MAAQF,CAAK,IAKtCyB,KAAKJ,IACPI,KAAKJ,GAA0BE,EAEnC,EAEMkC,EAAkB,WACtB,OAAOC,EAAOxG,EAAQyG,QAAUlD,EAAeA,EAAamD,QAC9D,EAEMF,EAAS,SAASG,GAEtB,MAAMC,EAAUnL,OAAOC,OAAOiL,EAAME,GAkBpC,OAfApL,OAAOqL,eAAeF,EAAS,eAAgB,CAAEpK,MAAO+G,IAGxD9H,OAAOqL,eAAeF,EAAS,KAAM,CAAEpK,MAAO6G,MAC9CuD,EAAQG,KAtKZ,WAIE,MAAMC,EAAqB,WAAhBC,KAAKC,SAAwB,EAClCC,EAAqB,WAAhBF,KAAKC,SAAwB,EAClCE,EAAqB,WAAhBH,KAAKC,SAAwB,EAClCG,EAAqB,WAAhBJ,KAAKC,SAAwB,EAOxC,OANa5E,EAAU,IAAL0E,GAAa1E,EAAK0E,GAAM,EAAI,KAAQ1E,EAAK0E,GAAM,GAAK,KAAQ1E,EAAK0E,GAAM,GAAK,KAAQ,IACpG1E,EAAU,IAAL6E,GAAa7E,EAAK6E,GAAM,EAAI,KAAQ,IAAM7E,EAAK6E,GAAM,GAAK,GAAO,IAAQ7E,EAAK6E,GAAM,GAAK,KAAQ,IACtG7E,EAAU,GAAL8E,EAAY,KAAQ9E,EAAK8E,GAAM,EAAI,KAAQ,IAAM9E,EAAK8E,GAAM,GAAK,KAAQ9E,EAAK8E,GAAM,GAAK,KAC9F9E,EAAU,IAAL+E,GAAa/E,EAAK+E,GAAM,EAAI,KAAQ/E,EAAK+E,GAAM,GAAK,KAAQ/E,EAAK+E,GAAM,GAAK,MAGvEC,aAEd,CAsJmBC,GAGfX,EAAQN,SAAW9D,EAAO,CAAC,EAAGmE,EAAKL,SAAUtG,EAAQsG,UACrDM,EAAQY,QAAUhF,EAAO,CAAC,EAAGmE,EAAKa,QAASxH,EAAQwH,SACnDZ,EAAQY,QAAS,2BAA0BhE,KAAgB,GAC3DoD,EAAQa,WAAajF,EAAO,CAAC,EAAGmE,EAAKc,WAAYzH,EAAQyH,YAGzDb,EAAQc,gBAAa5I,EAEd8H,CACT,EAEMC,EAAa,CACjBc,YAAa,CAACnL,MAAO+J,GACrBqB,kBAAmB,CAACpL,OAAO,GAE3BiI,sBAAuB,CACrBoD,UAAU,EACVC,cAAc,EACdtL,MAAO,WACL,OAAO+G,EAAakB,wBAA0B,IAAMjB,CACtD,GAGFY,gBAAiB,CACfN,IAAGA,IACMM,EAETL,GAAAA,CAAI3C,GACFmD,KAAKJ,GAA4B/C,CACnC,GAGF2G,KAAM,CACJF,UAAU,EACVC,cAAc,EACdtL,MAAO,SAAUyF,GAOf,OANAsB,EAAawE,KAAKlF,KAAK0B,KAAMtC,GACxBsB,EAAayE,kBAAqBzE,EAAaqE,oBAClDpF,EAAO+B,KAAKkD,WAAYxF,EAAOwF,YAC/BjF,EAAO+B,KAAKiD,QAASvF,EAAOuF,SAC5BhF,EAAO+B,KAAK+B,SAAU2B,EAAAA,cAAcvB,MAAMzE,EAAOqE,YAE5C/B,IACT,GAGFmC,MAAO,CACLmB,UAAU,EACVC,cAAc,EACdtL,MAAO,WACL,MAAM0L,EAAU,IAAI3E,EAAaoE,YACjC,OAAOnB,EAAO0B,GAASH,KAAKxD,KAC9B,GAOF4D,iBAAkB,CAChBN,UAAU,EACVC,cAAc,EACdtL,MAAO,WACL,IAAI4L,EAAgB7D,KAAK8D,eAWzB,OAVKD,IACHA,EAAgB7D,KAAK8D,eAAiB/E,EACpCC,EAAaqE,kBACTrE,EAAa4E,mBACb,IAAIG,EAAAA,kBAAkB,CAAEC,aAAcC,EAAAA,mBAC1CxI,GAEFoI,EAAcZ,QAAQiB,kBAAoB,GAC1CL,EAAc9B,SAAW/B,KAAK+B,UAEzB8B,CACT,GAOFM,oBAAqB,CACnBb,UAAU,EACVC,cAAc,EACdtL,MAAO,WACL,IAAImM,EAAmBpE,KAAKqE,kBAW5B,OAVKD,IACHA,EAAmBpE,KAAKqE,kBAAoBtF,EAC1CC,EAAaqE,kBACTrE,EAAamF,sBACb,IAAIG,EAAAA,qBACR7I,GAEF2I,EAAiBnB,QAAQsB,qBAAuB,GAChDH,EAAiBrC,SAAW/B,KAAK+B,UAE5BqC,CACT,GAGFI,QAAS,CACPlB,UAAU,EACVC,cAAc,EACdtL,KAAAA,GACE,MAAM,eAAC6L,EAAc,kBAAEO,GAAqBrE,KACxC8D,GAAgBA,EAAeU,UAC/BH,GAAmBA,EAAkBG,UACzCxF,EAAawF,QAAQlG,KAAK0B,KAC5B,IAKJ,OADAL,EAAkBV,GAAc+C,EACzB,IAAIA,CACb,CA6GA,SAASH,EAAqB4C,EAAYlN,EAAImN,EAAMC,EAAOC,GAazD,OAZID,GAASC,GAASF,KACpBD,EAAaA,EAAWxL,QAAQuE,EAAiB,KACnDkH,yBACmBnN,SAEjBkN,GAAe,sBAEfE,sBACcpN,WACdqN,QAGKH,CACT,CAGA,SAASpF,EAAoBmB,EAAKvI,GAChC,MAAe,aAARuI,OAAqBjG,EAA6B,oBAAVtC,EAAuBA,EAAM6E,WAAa7E,CAC3F,CAEA,IAAIwH,EAAS,EACb,MAAMH,EAAqB,IAAIT,IAuL2DgG,EAAAA,WA8BjEC,EAAAA,KClBzB,MAAMrG,EAAMA,KAAO/F,KAAKqM,aAAevG,MAAMC,MAEvCuG,GAAoCC,EAAAA,EAAAA,KAE1C,IAAIC,EA2BJ,MAAMC,EAAQ,GAEd,IAAIC,EAAQ,EAEZ,SAASC,IACP,MAAMC,EAAQ7G,IACd,KAAO0G,EAAM7K,QAAUmE,IAAQ6G,EALT,GAMpBH,EAAMI,OAANJ,GAEFC,EAAQD,EAAM7K,OAASkL,WAAWH,EAAW,GAAK,CACpD,CAMA,MAAMI,EAAiBA,IAAI1L,IAClB,IAAIkC,SAAQ,CAACe,EAASC,KAC3BkI,EAAM9D,MAAK,KACT,MAAMiE,EAAQ7G,IACd,IACEuG,EAAoBU,MAAMC,sBAAsB5L,GAChDiD,EAAQ,CAAE4I,OAAQnH,IAAQ6G,GAC5B,CAAE,MAAOhN,GACP2E,EAAO3E,EACT,KAEG8M,IACHA,EAAQI,WAAWH,EAAW,GAChC,IAIEQ,EAAc,EACdC,EAAc,IACdC,EAAU,CAAC,EACjB,IAAIC,EAAU,EAKd,SAASC,EAAsBC,EAAOC,EAAQC,EAAMC,EAASC,EAAUC,EAAUC,EAAQC,EAAGC,EAAG9E,GAC7F,MAAMlG,EAAW,6BAAiCsK,IAAaH,EAC/D,IAAIc,EAASZ,EAAQrK,GAgCrB,OA/BKiL,IACHA,EAASZ,EAAQrK,GAAY,CAC3BkL,aAAcpL,EAAmB,CAC/BhE,KAAMkE,EACNA,WACAjE,aAAc,CACZwN,EAAAA,EACAxG,GAEF/G,IAAAA,CAAKmP,EAAqBpI,GACxB,MAAMqI,EAAWD,IAAsBE,WAAWD,SAClD,OAAO,YAAa/M,GAClB,MAAMuL,EAAQ7G,IAEd,MAAO,CACLuI,YAFkBF,KAAY/M,GAG9B6L,OAAQnH,IAAQ6G,EAEpB,CACF,EACA3N,iBAAiBc,GACR,CAACA,EAAOuO,YAAYC,UAG/BC,SAAU,EACVC,UAAW,OAIfR,EAAOO,WACPE,aAAaT,EAAOQ,WACbR,EAAOC,aAAaV,EAAOC,EAAQC,EAAMC,EAASC,EAAUC,GAChEvM,MAAK,EAAGgN,cAAapB,aAEpB,MAAMN,EAAQ7G,IAER4I,EAAY,IAAIC,WAAgC,EAArBN,EAAY1M,QAC7C,IAAK,IAAI0D,EAAI,EAAGA,EAAIgJ,EAAY1M,OAAQ0D,IACtCqJ,EAAc,EAAJrJ,EAAQ4D,GAAWoF,EAAYhJ,GAS3C,OAPAgH,EAAoBuC,WAAWC,gBAAgBhB,EAAQa,EAAWZ,EAAGC,EAAGR,EAAOC,EAAQ,GAAM,EAAIvE,GACjGgE,GAAUnH,IAAQ6G,EAGQ,MAApBqB,EAAOO,WACXP,EAAOQ,UAAY3B,YAAW,MFnbtC,SAAyB9J,GAEnBJ,EAAkBI,IACpBJ,EAAkBI,GAAU+L,SAAQ,SAAUjL,GAC5CA,GACF,IAGEnB,EAAQK,KACVL,EAAQK,GAAUV,mBACXK,EAAQK,GAEnB,CEua8CgM,CAAgBhM,EAAS,GAAKoK,IAE/D,CAAEF,SAAQ,GAEvB,CASA,MAAM+B,EAAmC3C,EAAoBuC,WAAWI,iCA+RxE,MAAMf,EAA4BpL,EAAmB,CACnDhE,KAAM,mBACNC,aAAc,CA3RhB,WAAuB,MAAO,oBAAoBoD,SAASnC,KAAKmC,OAAOnC,MAAM,SAASE,GAAG,IAAIU,EAAE,CAACsO,MAAM,SAAShP,GAAG,IAAIiP,EAAEvO,EAAEwO,KAAKC,EAAE,IAAIT,WAAW1O,GAAG,GAAG,QAAQiP,EAAEG,UAAUD,EAAE,EAAE,GAAG,CAAC,IAAIE,EAAE,EAAEJ,EAAEK,WAAWH,EAAEE,GAAGA,GAAG,EAAEJ,EAAEK,WAAWH,EAAEE,GAAGA,GAAG,EAAE,IAAIE,EAAEN,EAAEO,SAASL,EAAEE,GAAGA,GAAG,EAAE,IAAI,IAAII,EAAE,GAAGrK,EAAE,EAAEA,EAAEmK,EAAEnK,IAAI,CAAC,IAAIsK,EAAET,EAAEO,SAASL,EAAEE,GAAGA,GAAG,EAAEI,EAAEhH,KAAK/H,EAAEiP,UAAUR,EAAEO,GAAI,CAAC,OAAOD,CAAC,CAAC,MAAO,CAAC/O,EAAEiP,UAAUR,EAAE,GAAG,EAAEQ,UAAU,SAAS3P,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAEJ,EAAEE,EAAES,UAAU5P,EAAEiP,GAAGA,GAAG,EAAE,IAAIM,EAAEJ,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAIQ,EAAE,CAAC,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,QAAQrK,EAAE,CAACyK,MAAM7P,EAAE8P,QAAQT,GAAGK,EAAE,CAAC,EAAEK,EAAE,EAAEA,EAAER,EAAEQ,IAAI,CAAC,IAAIC,EAAEb,EAAEC,UAAUpP,EAAEiP,EAAE,GAAGA,GAAG,EAAEE,EAAEK,SAASxP,EAAEiP,GAAGA,GAAG,EAAE,IAAIgB,EAAEd,EAAEK,SAASxP,EAAEiP,GAAGA,GAAG,EAAE,IAAIiB,EAAEf,EAAEK,SAASxP,EAAEiP,GAAGA,GAAG,EAAES,EAAEM,GAAG,CAACG,OAAOF,EAAEvO,OAAOwO,EAAG,CAAC,IAAIH,EAAE,EAAEA,EAAEN,EAAE/N,OAAOqO,IAAI,CAAC,IAAIK,EAAEX,EAAEM,GAAGL,EAAEU,KAAKhL,EAAEgL,EAAEC,QAAQ3P,EAAE0P,EAAEC,QAAQrB,MAAMhP,EAAE0P,EAAEU,GAAGD,OAAOT,EAAEU,GAAG1O,OAAO0D,GAAI,CAAC,OAAOA,CAAC,EAAEkL,WAAW,SAAStQ,EAAEiP,EAAEE,GAAG,IAAI,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAEF,EAAEC,WAAWtP,EAAEmP,EAAE,GAAGM,EAAEN,EAAE,GAAG/J,EAAE,EAAEA,EAAEmK,EAAEnK,IAAI,CAAC,IAAIsK,EAAEL,EAAED,UAAUpP,EAAEyP,EAAE,GAAGA,GAAG,EAAEJ,EAAEG,SAASxP,EAAEyP,GAAGA,GAAG,EAAE,IAAIM,EAAEV,EAAEG,SAASxP,EAAEyP,GAAG,GAAGA,GAAG,EAAEJ,EAAEG,SAASxP,EAAEyP,GAAGA,GAAG,EAAEC,GAAGT,EAAE,OAAOc,CAAC,CAAC,OAAO,CAAC,GAAGrP,EAAEwO,KAAK,CAACU,UAAU,SAAS5P,EAAEU,GAAG,OAAQV,EAAEU,IAAI,EAAEV,EAAEU,EAAE,KAAKV,EAAEU,EAAE,IAAI,EAAEV,EAAEU,EAAE,IAAI,KAAK,EAAE6P,YAAY,SAASvQ,EAAEiP,GAAG,OAAOvO,EAAEwO,KAAKsB,UAAUxQ,EAAEiP,GAAG,KAAK,EAAEwB,QAAQ,SAASzQ,EAAEiP,GAAG,OAAOvO,EAAEwO,KAAKwB,MAAM1Q,GAAG2Q,SAAS1B,EAAE,EAAE2B,SAAS,SAAS5Q,EAAEiP,GAAG,OAAOvO,EAAEwO,KAAKwB,MAAM1Q,GAAG6Q,QAAQ5B,EAAE,EAAEuB,UAAU,SAASxQ,EAAEiP,GAAG,OAAOvO,EAAEwO,KAAKwB,MAAM1Q,GAAG8Q,SAAS7B,EAAE,EAAEK,WAAW,SAAStP,EAAEiP,GAAG,OAAOvO,EAAEwO,KAAKwB,MAAM1Q,GAAG+Q,UAAU9B,EAAE,EAAE+B,YAAY,SAAShR,EAAEiP,EAAEE,GAAG,IAAI,IAAIE,EAAE,GAAGE,EAAE,EAAEA,EAAEJ,EAAEI,IAAIF,EAAE5G,KAAK/H,EAAEwO,KAAKI,WAAWtP,EAAEiP,EAAE,EAAEM,IAAI,OAAOF,CAAC,EAAEG,SAAS,SAASxP,EAAEiP,GAAG,OAAOvO,EAAEwO,KAAKwB,MAAM1Q,GAAGiR,UAAUhC,EAAE,EAAEiC,WAAW,SAASlR,EAAEiP,GAAG,OAAO,WAAWvO,EAAEwO,KAAKM,SAASxP,EAAEiP,GAAGvO,EAAEwO,KAAKM,SAASxP,EAAEiP,EAAE,EAAE,EAAEG,UAAU,SAASpP,EAAEU,EAAEuO,GAAG,IAAI,IAAIE,EAAE,GAAGE,EAAE,EAAEA,EAAEJ,EAAEI,IAAIF,GAAGgC,OAAOC,aAAapR,EAAEU,EAAE2O,IAAI,OAAOF,CAAC,EAAEkC,YAAY,SAASrR,EAAEU,EAAEuO,GAAG,IAAI,IAAIE,EAAE,GAAGE,EAAE,EAAEA,EAAEJ,EAAEI,IAAI,CAAC,IAAIE,EAAEvP,EAAEU,MAAM,EAAEV,EAAEU,KAAKyO,GAAGgC,OAAOC,aAAa7B,EAAG,CAAC,OAAOJ,CAAC,EAAEmC,MAAM,oBAAoBrP,QAAQA,OAAOsP,YAAY,IAAItP,OAAOsP,YAAY,KAAKC,SAAS,SAASxR,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKoC,MAAM,OAAOjC,GAAG,GAAGJ,GAAGE,GAAGnP,EAAE0B,OAAO2N,EAAEoC,OAAOzR,GAAGU,EAAEwO,KAAKE,UAAUpP,EAAEiP,EAAEE,EAAE,EAAEuC,UAAU,SAAS1R,EAAEU,EAAEuO,GAAG,IAAI,IAAIE,EAAE,GAAGE,EAAE,EAAEA,EAAEJ,EAAEI,IAAIF,EAAE1G,KAAKzI,EAAEU,EAAE2O,IAAI,OAAOF,CAAC,EAAEwC,eAAe,SAAS3R,EAAEU,EAAEuO,GAAG,IAAI,IAAIE,EAAE,GAAGE,EAAE,EAAEA,EAAEJ,EAAEI,IAAIF,EAAE1G,KAAK0I,OAAOC,aAAapR,EAAEU,EAAE2O,KAAK,OAAOF,CAAC,EAAEuB,MAAM,SAAS1Q,GAAG,OAAOA,EAAE4R,YAAY5R,EAAE4R,UAAU5R,EAAEqO,OAAO,IAAIwD,SAAS7R,EAAEqO,OAAOrO,EAAE8R,WAAW9R,EAAE+R,YAAY,IAAIF,SAAS,IAAInD,WAAW1O,GAAGqO,QAAQ,GAAG3N,EAAEsR,MAAM,CAAC,EAAEtR,EAAEsR,MAAMhD,MAAM,SAAShP,EAAEiP,EAAEE,EAAEE,EAAEE,GAAG,IAAIE,EAAE/O,EAAEwO,KAAK9J,EAAE,CAAC,EAAEsK,EAAET,EAAEQ,EAAEG,UAAU5P,EAAEiP,GAAGA,GAAG,EAAE,IAAIc,EAAEN,EAAEH,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIe,EAAEP,EAAEH,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIgB,EAAER,EAAEH,WAAWtP,EAAEiP,GAAG,OAAOA,GAAG,EAAE7J,EAAE6M,WAAWvR,EAAEsR,MAAME,eAAelS,EAAE0P,EAAEK,GAAG3K,EAAE+M,YAAYzR,EAAEsR,MAAMI,gBAAgBpS,EAAE0P,EAAEM,GAAG5K,EAAEiN,WAAW3R,EAAEsR,MAAMM,eAAetS,EAAE0P,EAAEO,EAAEV,GAAGnK,CAAC,EAAE1E,EAAEsR,MAAMM,eAAe,SAAStS,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAEN,EAAEQ,EAAE,GAAGrK,EAAEiK,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAIS,EAAE,EAAEA,EAAEtK,EAAEsK,IAAI,CAAC,IAAIK,EAAEV,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIe,EAAEtP,EAAEsR,MAAMO,gBAAgBvS,EAAEuP,EAAEQ,EAAEZ,GAAGM,EAAEhH,KAAKuH,EAAG,CAAC,OAAOP,CAAC,EAAE/O,EAAEsR,MAAMO,gBAAgB,SAASvS,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAEN,EAAEQ,EAAE,CAAC+C,KAAK,IAAI/C,EAAEgD,MAAMpD,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEQ,EAAEiD,KAAKrD,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI7J,EAAEiK,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAIS,EAAED,EAAEgD,MAAM1C,EAAE,EAAEA,EAAE3K,EAAE2K,IAAI,CAAC,IAAIC,EAAEX,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIgB,EAAEd,EAAEnP,EAAE0P,EAAEH,EAAES,EAAEP,GAAGA,EAAE+C,KAAK/J,KAAKwH,EAAG,CAAC,OAAOR,CAAC,EAAE/O,EAAEsR,MAAMW,UAAU,SAAS3S,GAAG,IAAI,IAAIU,EAAE,EAAEuO,EAAE,EAAEA,EAAE,GAAGA,IAAI,IAAIjP,IAAIiP,EAAE,IAAIvO,IAAI,OAAOA,CAAC,EAAEA,EAAEsR,MAAMY,aAAa,SAAS5S,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAE,GAAGE,EAAEJ,EAAEG,WAAWtP,EAAEiP,GAAG,GAAGA,GAAG,EAAE,GAAGM,EAAE,CAAC,IAAIE,EAAEN,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI7J,EAAE+J,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAIS,EAAE,EAAEA,EAAEtK,EAAEsK,IAAIL,EAAE5G,KAAKgH,EAAEC,GAAGL,EAAE5G,KAAKgH,EAAEC,GAAGL,EAAE5G,KAAK0G,EAAEG,WAAWtP,EAAEiP,IAAIA,GAAG,CAAE,CAAC,GAAG,GAAGM,EAAE,CAAC,IAAIQ,EAAEZ,EAAEG,WAAWtP,EAAEiP,GAAQ,IAALA,GAAG,EAAMS,EAAE,EAAEA,EAAEK,EAAEL,IAAIL,EAAE5G,KAAK0G,EAAEG,WAAWtP,EAAEiP,IAAIA,GAAG,EAAEI,EAAE5G,KAAK0G,EAAEG,WAAWtP,EAAEiP,IAAIA,GAAG,EAAEI,EAAE5G,KAAK0G,EAAEG,WAAWtP,EAAEiP,IAAIA,GAAG,CAAE,CAAC,OAAOI,CAAC,EAAE3O,EAAEsR,MAAMa,YAAY,SAAS7S,EAAEU,GAAG,IAAI,IAAIuO,EAAE,EAAEA,EAAEjP,EAAE0B,OAAOuN,GAAG,EAAE,CAAC,IAAIE,EAAEnP,EAAEiP,GAAGI,EAAErP,EAAEiP,EAAE,GAAG,GAAGjP,EAAEiP,EAAE,GAAGE,GAAGzO,GAAGA,GAAG2O,EAAE,OAAOJ,CAAC,CAAC,OAAQ,CAAC,EAAEvO,EAAEsR,MAAMc,aAAa,SAAS9S,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAE,CAAC,EAAEA,EAAE0D,IAAI5D,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIM,EAAEJ,EAAEG,WAAWtP,EAAEiP,GAAG,OAAOA,GAAG,EAAE,GAAGI,EAAE0D,MAAM1D,EAAE2D,IAAI7D,EAAE6B,YAAYhR,EAAEiP,EAAEM,IAAI,GAAGF,EAAE0D,MAAM1D,EAAE2D,IAAI7D,EAAE6B,YAAYhR,EAAEiP,EAAE,EAAEM,IAAIF,CAAC,EAAE3O,EAAEsR,MAAMiB,cAAc,SAASjT,EAAEiP,GAAG,IAAIE,EAAEnP,EAAEgT,IAAI,GAAG,GAAGhT,EAAE+S,IAAI,OAAO5D,EAAE+D,QAAQjE,GAAG,GAAG,GAAGjP,EAAE+S,IAAI,CAAC,IAAI1D,EAAE3O,EAAEsR,MAAMa,YAAY1D,EAAEF,GAAG,IAAI,GAAGI,EAAE,OAAOF,EAAEE,EAAE,IAAIJ,EAAEE,EAAEE,GAAG,CAAC,OAAQ,CAAC,EAAE3O,EAAEsR,MAAMI,gBAAgB,SAASpS,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAEJ,EAAEM,EAAE,GAAGE,EAAEN,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAI7J,EAAE,EAAEA,EAAEqK,EAAErK,IAAI,CAAC,IAAIsK,EAAEP,EAAEC,UAAUpP,EAAEiP,EAAE,GAAGA,GAAG,EAAE,IAAIc,EAAEZ,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIe,EAAEtP,EAAEsR,MAAMmB,iBAAiBnT,EAAEqP,EAAEU,GAAGC,EAAEoD,IAAI1D,EAAEW,OAAOd,EAAE9G,KAAKuH,EAAG,CAAC,OAAOT,CAAC,EAAE7O,EAAEsR,MAAMmB,iBAAiB,SAASnT,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAEJ,EAAEM,EAAE,CAAC,EAAEE,EAAEN,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEQ,EAAE,IAAIF,EAAE8D,cAAchE,EAAEI,GAAG,IAAIrK,EAAE+J,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEyD,IAAI,GAAG,IAAI,IAAItD,EAAE,EAAEA,EAAEtK,EAAEsK,IAAIH,EAAEyD,IAAIvK,KAAK0G,EAAEG,WAAWtP,EAAEiP,EAAE,EAAES,IAAI,OAAOH,CAAC,EAAE7O,EAAEsR,MAAME,eAAe,SAASlS,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAEJ,EAAEM,EAAE,CAAC,EAAEE,EAAEN,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAI7J,EAAE,EAAEA,EAAEqK,EAAErK,IAAI,CAAC,IAAIsK,EAAEP,EAAEC,UAAUpP,EAAEiP,EAAE,GAAGA,GAAG,EAAE,IAAIc,EAAEZ,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEG,EAAEW,QAAQ3P,EAAEsR,MAAMsB,gBAAgBtT,EAAEqP,EAAEU,EAAG,CAAC,OAAOR,CAAC,EAAE7O,EAAEsR,MAAMsB,gBAAgB,SAAStT,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAEJ,EAAEM,EAAE,CAAC,EAAEE,EAAEN,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEgE,QAAQ7S,EAAEsR,MAAMwB,iBAAiBxT,EAAEqP,EAAEI,GAAG,IAAIrK,EAAE+J,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAIS,EAAE,EAAEA,EAAEtK,EAAEsK,IAAI,CAAC,IAAIK,EAAEZ,EAAEC,UAAUpP,EAAEiP,EAAE,GAAGA,GAAG,EAAE,IAAIe,EAAEb,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEQ,EAAEM,QAAQ3P,EAAEsR,MAAMwB,iBAAiBxT,EAAEqP,EAAEW,EAAG,CAAC,OAAOT,CAAC,EAAE7O,EAAEsR,MAAMwB,iBAAiB,SAASxT,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAE,CAAC,EAAEF,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEI,EAAEoE,WAAWtE,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIM,EAAEJ,EAAEG,WAAWtP,EAAEiP,GAAG,OAAOA,GAAG,EAAEI,EAAEqE,SAASvE,EAAE6B,YAAYhR,EAAEiP,EAAEM,GAAGF,CAAC,EAAE3O,EAAEiT,IAAI,CAAC,EAAEjT,EAAEiT,IAAI3E,MAAM,SAAShP,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,MAAMlP,EAAE,IAAI0O,WAAW1O,EAAEqO,OAAOY,EAAEE,IAAIF,EAAE,GAAGjP,IAAIiP,GAAGjP,IAAIiP,GAAGjP,IAAIiP,GAAGA,IAAI,IAAIM,EAAE,GAAGN,EAAEvO,EAAEiT,IAAIC,UAAU5T,EAAEiP,EAAEM,GAAG,IAAI,IAAIE,EAAE,GAAGrK,EAAE,EAAEA,EAAEmK,EAAE7N,OAAO,EAAE0D,IAAIqK,EAAEhH,KAAK4G,EAAED,UAAUpP,EAAEiP,EAAEM,EAAEnK,GAAGmK,EAAEnK,EAAE,GAAGmK,EAAEnK,KAAK6J,GAAGM,EAAEA,EAAE7N,OAAO,GAAG,IAAIgO,EAAE,GAAGT,EAAEvO,EAAEiT,IAAIC,UAAU5T,EAAEiP,EAAES,GAAG,IAAIK,EAAE,GAAG,IAAI3K,EAAE,EAAEA,EAAEsK,EAAEhO,OAAO,EAAE0D,IAAI2K,EAAEtH,KAAK/H,EAAEiT,IAAIE,SAAS7T,EAAEiP,EAAES,EAAEtK,GAAG6J,EAAES,EAAEtK,EAAE,KAAK6J,GAAGS,EAAEA,EAAEhO,OAAO,GAAG,IAAIsO,EAAED,EAAE,GAAGE,EAAE,GAAGhB,EAAEvO,EAAEiT,IAAIC,UAAU5T,EAAEiP,EAAEgB,GAAG,IAAIC,EAAE,GAAG,IAAI9K,EAAE,EAAEA,EAAE6K,EAAEvO,OAAO,EAAE0D,IAAI8K,EAAEzH,KAAK4G,EAAED,UAAUpP,EAAEiP,EAAEgB,EAAE7K,GAAG6K,EAAE7K,EAAE,GAAG6K,EAAE7K,KAAK,GAAG6J,GAAGgB,EAAEA,EAAEvO,OAAO,GAAGhB,EAAEiT,IAAIG,UAAU9T,EAAEiP,EAAEe,GAAGA,EAAE+D,YAAY,CAAC9E,EAAEe,EAAE+D,YAAY9D,EAAE,GAAGhB,EAAEvO,EAAEiT,IAAIC,UAAU5T,EAAEiP,EAAEgB,GAAG,IAAIG,EAAE,GAAG,IAAIhL,EAAE,EAAEA,EAAE6K,EAAEvO,OAAO,EAAE0D,IAAIgL,EAAE3H,KAAK4G,EAAEqC,UAAU1R,EAAEiP,EAAEgB,EAAE7K,GAAG6K,EAAE7K,EAAE,GAAG6K,EAAE7K,KAAK4K,EAAE+D,YAAY3D,CAAE,CAAC,GAAGJ,EAAEgE,IAAI,CAAC/E,EAAEe,EAAEiE,QAAQ,IAAIC,EAAE,GAAyC,IAAtCjF,EAAEvO,EAAEiT,IAAIC,UAAU5T,EAAEiP,EAAEiF,GAAGlE,EAAEiE,QAAQ,GAAO7O,EAAE,EAAEA,EAAE8O,EAAExS,OAAO,EAAE0D,IAAI,CAAC,IAAI+O,EAAEzT,EAAEiT,IAAIE,SAAS7T,EAAEiP,EAAEiF,EAAE9O,GAAG6J,EAAEiF,EAAE9O,EAAE,IAAI1E,EAAEiT,IAAIS,WAAWpU,EAAEmU,EAAEjE,GAAGF,EAAEiE,QAAQxL,KAAK0L,EAAG,CAAClF,GAAGiF,EAAEA,EAAExS,OAAO,GAAGuN,EAAEe,EAAEqE,SAASrE,EAAEqE,SAAS,GAAG,IAAIC,EAAEtU,EAAEiP,GAAG,GAAGA,IAAI,GAAGqF,EAAE,MAAMA,EAAE,IAAIC,EAAElF,EAAEC,WAAWtP,EAAEiP,GAAQ,IAALA,GAAG,EAAM7J,EAAE,EAAEA,EAAEmP,EAAE,EAAEnP,IAAI4K,EAAEqE,SAAS5L,KAAK4G,EAAEC,WAAWtP,EAAEiP,GAAGjP,EAAEiP,EAAE,IAAIA,GAAG,CAAE,CAAC,OAAOe,EAAEwE,WAAWxE,EAAEwE,SAAS9T,EAAEiT,IAAIc,aAAazU,EAAEgQ,EAAEwE,SAASxE,EAAE+D,YAAYrS,SAASsO,EAAE0E,UAAU1E,EAAE0E,QAAQhU,EAAEiT,IAAIgB,YAAY3U,EAAEgQ,EAAE0E,QAAQ1E,EAAE+D,YAAYrS,SAAShB,EAAEiT,IAAIS,WAAWpU,EAAEgQ,EAAEE,GAAGF,CAAC,EAAEtP,EAAEiT,IAAIS,WAAW,SAASpU,EAAEiP,EAAEE,GAAG,IAAIE,EAAE,IAAI,IAAIE,KAAKN,EAAE2F,UAAUvF,EAAEJ,EAAE2F,QAAQ,GAAG3F,EAAE2F,QAAQlU,EAAEiT,IAAIE,SAAS7T,EAAEqP,EAAEA,EAAEJ,EAAE2F,QAAQ,IAAI3F,EAAE2F,QAAQC,OAAOnU,EAAEiT,IAAIG,UAAU9T,EAAEqP,EAAEJ,EAAE2F,QAAQC,MAAM5F,EAAE2F,UAAU3F,GAAG,GAAG,CAAC,aAAa,WAAW,WAAW,SAAS,UAAU,aAAaiE,QAAQ3D,KAAKN,EAAEM,GAAGJ,EAAEF,EAAEM,GAAG,IAAI,IAAK,EAAE7O,EAAEiT,IAAIG,UAAU,SAAS9T,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAE,GAAGN,EAAEvO,EAAEiT,IAAIC,UAAU5T,EAAEiP,EAAEM,GAAG,IAAIE,EAAErK,EAAEmK,EAAE7N,OAAO+N,EAAErK,EAAE,KAAK,IAAIA,EAAE,MAAM,KAAK,MAAM+J,EAAE2F,KAAKrF,EAAEN,EAAE0F,MAAM,GAAG,IAAI,IAAInF,EAAE,EAAEA,EAAEH,EAAE7N,OAAO,EAAEgO,IAAIP,EAAE0F,MAAMpM,KAAK4G,EAAEqC,UAAU1R,EAAEiP,EAAEM,EAAEG,GAAGH,EAAEG,EAAE,GAAGH,EAAEG,IAAK,EAAEhP,EAAEiT,IAAIorU,EAAEiT,IAAIqB,eAAe,SAAShV,EAAEU,GAAG,IAAI,IAAIuO,EAAE,EAAEA,EAAEjP,EAAE0U,QAAQhT,OAAOuN,IAAI,GAAGjP,EAAE0U,QAAQzF,IAAIvO,EAAE,OAAOuO,EAAE,OAAQ,CAAC,EAAEvO,EAAEiT,IAAIsB,UAAU,SAASjV,EAAEiP,GAAG,OAAOA,EAAE,GAAGA,EAAE,KAAK,EAAEvO,EAAEiT,IAAIqB,eAAehV,EAAEU,EAAEiT,IAAIoB,QAAQ9F,GAAG,EAAEvO,EAAEiT,IAAIc,aAAa,SAASzU,EAAEiP,EAAEE,GAAGzO,EAAEwO,KAAK,IAAIG,EAAE,CAAC,WAAWE,EAAEvP,EAAEiP,GAAG,GAAGA,IAAI,GAAGM,EAAE,KAAM,mCAAmCA,EAAE,IAAIE,EAAEzP,EAAEiP,GAAGA,IAAI,IAAI,IAAI7J,EAAE,EAAEA,EAAEqK,EAAErK,IAAIiK,EAAE5G,KAAKzI,EAAEiP,EAAE7J,IAAI,OAAOiK,CAAC,EAAE3O,EAAEiT,IAAIgB,YAAY,SAAS3U,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAE,CAAC,WAAWE,EAAEzP,EAAEiP,GAAG,GAAGA,IAAI,GAAGQ,EAAE,IAAI,IAAIrK,EAAE,EAAEA,EAAE+J,EAAE/J,IAAI,CAAC,IAAIsK,EAAEL,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE9G,KAAKiH,EAAG,KAAM,CAAC,GAAG,GAAGD,GAAG,GAAGA,EAAE,KAAM,kBAAkBA,EAAE,KAAKF,EAAE7N,OAAOyN,GAAG,CAACO,EAAEL,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIc,EAAE,EAA+C,IAA7C,GAAGN,GAAGM,EAAE/P,EAAEiP,GAAGA,MAAMc,EAAEV,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,GAAO7J,EAAE,EAAEA,GAAG2K,EAAE3K,IAAImK,EAAE9G,KAAKiH,GAAGA,GAAI,CAAC,CAAC,OAAOH,CAAC,EAAE7O,EAAEiT,IAAIC,UAAU,SAAS5T,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAEF,EAAEC,WAAWtP,EAAEiP,GAAG,EAAEQ,EAAEzP,EAAEiP,GAAG,GAAG,GAAGA,IAAI,GAAGQ,EAAE,IAAI,IAAIrK,EAAE,EAAEA,EAAEmK,EAAEnK,IAAI+J,EAAE1G,KAAKzI,EAAEiP,EAAE7J,SAAS,GAAG,GAAGqK,EAAE,IAAIrK,EAAE,EAAEA,EAAEmK,EAAEnK,IAAI+J,EAAE1G,KAAK4G,EAAEC,WAAWtP,EAAEiP,EAAE,EAAE7J,SAAS,GAAG,GAAGqK,EAAE,IAAIrK,EAAE,EAAEA,EAAEmK,EAAEnK,IAAI+J,EAAE1G,KAAK,SAAS4G,EAAEG,SAASxP,EAAEiP,EAAE,EAAE7J,EAAE,SAAS,GAAG,GAAGmK,EAAE,KAAM,4BAA4BE,EAAE,YAAYF,EAAE,OAAQN,GAAGM,EAAEE,GAAG,CAAC,EAAE/O,EAAEiT,IAAIuB,cAAc,SAASlV,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAEvP,EAAEiP,GAAGQ,EAAEzP,EAAEiP,EAAE,GAAGjP,EAAEiP,EAAE,GAAGjP,EAAEiP,EAAE,GAAGjP,EAAEiP,EAAE,GAAG,IAAI7J,EAAE,EAAEsK,EAAE,KAAKK,EAAE,KAAKR,GAAG,KAAKG,EAAEH,EAAEnK,EAAE,GAAG,IAAImK,IAAIG,EAAE,IAAIH,EAAEE,EAAErK,EAAE,GAAG,IAAImK,GAAGA,GAAG,KAAKG,EAAEH,EAAEnK,EAAE,GAAG,IAAImK,IAAIQ,EAAEV,EAAEmB,UAAUxQ,EAAEiP,EAAE,GAAG7J,EAAE,GAAG,IAAImK,GAAGA,GAAG,KAAKG,EAAEH,EAAEnK,EAAE,GAAG,IAAImK,GAAGA,GAAG,MAAMQ,EAAER,EAAE,IAAInK,EAAE,GAAG,KAAKmK,GAAGA,GAAG,MAAMQ,EAAE,KAAKR,EAAE,KAAKE,EAAE,IAAIrK,EAAE,GAAG,KAAKmK,GAAGA,GAAG,MAAMQ,EAAE,MAAMR,EAAE,KAAKE,EAAE,IAAIrK,EAAE,GAAG,KAAKmK,IAAIQ,EAAEV,EAAEoB,QAAQzQ,EAAEiP,EAAE,GAAG,MAAM7J,EAAE,GAAG+J,EAAEgG,IAAI,MAAMpF,EAAEA,EAAE,IAAIL,EAAEP,EAAEiG,KAAKhQ,CAAE,EAAE1E,EAAEiT,IAAI0B,eAAe,SAASrV,EAAEiP,EAAEE,GAAG,IAAI,IAAIE,EAAEJ,EAAEE,EAAEI,EAAE7O,EAAEwO,KAAKO,EAAE,GAAGR,EAAEI,GAAG,CAAC,IAAIjK,EAAEpF,EAAEiP,GAAGS,EAAE1P,EAAEiP,EAAE,GAAGjP,EAAEiP,EAAE,GAAGjP,EAAEiP,EAAE,GAAGjP,EAAEiP,EAAE,GAAG,IAAIc,EAAE,EAAEC,EAAE,KAAKC,EAAE,KAAK7K,GAAG,KAAK4K,EAAE5K,EAAE2K,EAAE,GAAG,IAAI3K,IAAI4K,EAAE,IAAI5K,EAAEsK,EAAEK,EAAE,GAAG,IAAI3K,GAAG,IAAIA,IAAI4K,EAAE5K,EAAE2K,EAAE,GAAG,IAAI3K,GAAGA,GAAG,KAAK4K,EAAE5K,EAAE2K,EAAE,GAAG,IAAI3K,IAAI6K,EAAEV,EAAEiB,UAAUxQ,EAAEiP,EAAE,GAAGc,EAAE,GAAG,IAAI3K,GAAGA,GAAG,KAAK4K,EAAE5K,EAAE2K,EAAE,GAAG,IAAI3K,GAAGA,GAAG,MAAM6K,EAAE7K,EAAE,IAAI2K,EAAE,GAAG,KAAK3K,GAAGA,GAAG,MAAM6K,EAAE,KAAK7K,EAAE,KAAKsK,EAAE,IAAIK,EAAE,GAAG,KAAK3K,GAAGA,GAAG,MAAM6K,EAAE,MAAM7K,EAAE,KAAKsK,EAAE,IAAIK,EAAE,GAAG,KAAK3K,IAAI6K,EAAEV,EAAEkB,QAAQzQ,EAAEiP,EAAE,GAAG,MAAMc,EAAE,GAAGN,EAAEhH,KAAK,MAAMwH,EAAEA,EAAE,IAAID,GAAGf,GAAGc,CAAE,CAAC,OAAON,CAAC,EAAE/O,EAAEiT,IAAIE,SAAS,SAAS7T,EAAEiP,EAAEE,GAAG,IAAI,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAE,CAAC,EAAEE,EAAE,GAAGR,EAAEE,GAAG,CAAC,IAAI/J,EAAEpF,EAAEiP,GAAGS,EAAE1P,EAAEiP,EAAE,GAAGjP,EAAEiP,EAAE,GAAGjP,EAAEiP,EAAE,GAAGjP,EAAEiP,EAAE,GAAG,IAAIc,EAAE,EAAEC,EAAE,KAAKC,EAAE,KAAK,GAAG,IAAI7K,IAAI6K,EAAEZ,EAAEmB,UAAUxQ,EAAEiP,EAAE,GAAGc,EAAE,GAAG,IAAI3K,IAAI6K,EAAEZ,EAAEoB,QAAQzQ,EAAEiP,EAAE,GAAGc,EAAE,GAAG,IAAI3K,GAAGA,GAAG,MAAM6K,EAAE7K,EAAE,IAAI2K,EAAE,GAAG,KAAK3K,GAAGA,GAAG,MAAM6K,EAAE,KAAK7K,EAAE,KAAKsK,EAAE,IAAIK,EAAE,GAAG,KAAK3K,GAAGA,GAAG,MAAM6K,EAAE,MAAM7K,EAAE,KAAKsK,EAAE,IAAIK,EAAE,GAAG,KAAK3K,EAAE,MAAM6K,EAAEZ,EAAEoB,QAAQzQ,EAAEiP,EAAE,GAAG,MAAMc,EAAE,EAAE,iBAAiB,GAAG,IAAI3K,EAAE,CAAC,IAAI8K,EAAE,GAAG,IAAIH,EAAE,IAAI,CAAC,IAAIK,EAAEpQ,EAAEiP,EAAEc,GAAGA,IAAI,IAAImE,EAAE9D,GAAG,EAAE+D,EAAE,GAAG/D,EAAE,GAAG,IAAI8D,GAAGhE,EAAEzH,KAAKyL,GAAG,IAAIC,GAAGjE,EAAEzH,KAAK0L,GAAG,IAAIA,EAAE,KAAK,CAAC,IAAI,IAAIG,EAAE,GAAGC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,KAAK,WAAW,IAAI,eAAee,EAAE,EAAEA,EAAEpF,EAAExO,OAAO4T,IAAIhB,GAAGC,EAAErE,EAAEoF,IAAIrF,EAAEsF,WAAWjB,EAAG,CAAIlP,GAAG,KAAM4K,EAAE,CAAC,UAAU,SAAS,WAAW,aAAa,SAAS,WAAW,aAAa,aAAa,cAAc,mBAAmB,QAAQ,QAAQ,SAAS,WAAW,OAAO,UAAU,WAAW,cAAc,UAAU,QAAQ,gBAAgB,iBAAiB5K,GAAG2K,EAAE,EAAE,IAAI3K,IAAE4K,EAAE,CAAC,YAAY,eAAe,cAAc,oBAAoB,qBAAqB,YAAY,iBAAiB,aAAa,cAAc,YAAY,YAAY,WAAW,YAAY,YAAY,YAAY,EAAE,EAAE,gBAAgB,kBAAkB,oBAAoB,gBAAgB,aAAa,eAAe,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,iBAAiB,kBAAkB,cAAc,WAAW,UAAU,UAAU,WAAW,YAAYN,GAAGK,EAAE,IAAE,MAAMC,GAAGT,EAAES,GAAG,GAAGP,EAAE/N,OAAO+N,EAAE,GAAGA,EAAEA,EAAE,IAAIA,EAAEhH,KAAKwH,GAAGhB,GAAGc,CAAE,CAAC,OAAOR,CAAC,EAAE7O,EAAE8U,KAAK,CAAC,EAAE9U,EAAE8U,KAAKxG,MAAM,SAAShP,EAAEiP,EAAEE,GAAGnP,EAAE,IAAI0O,WAAW1O,EAAEqO,OAAOY,EAAEE,GAAGF,EAAE,EAAE,IAAII,EAAE3O,EAAEwO,KAAKK,EAAE,CAAC,EAAEF,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIQ,EAAEJ,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI7J,EAAE,GAAGmK,EAAEkG,OAAO,GAAG,IAAI,IAAI/F,EAAE,EAAEA,EAAED,EAAEC,IAAI,CAAC,IAAIK,EAAEV,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIe,EAAEX,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIgB,EAAEZ,EAAEG,SAASxP,EAAEiP,GAAGA,GAAG,EAAE,IAAIiB,EAAE,IAAIH,EAAE,IAAIC,EAAEI,EAAEhL,EAAE8N,QAAQjD,GAAG,IAAI,GAAGG,EAAE,CAAC,IAAI8D,EAAE9D,EAAEb,EAAEkG,OAAO/T,OAAO0D,EAAEqD,KAAKwH,GAAG,IAAIkE,EAAE9E,EAAEC,WAAWtP,EAAEiQ,GAAG,GAAGkE,EAAED,EAAExT,EAAE8U,KAAKE,OAAO1V,EAAEiQ,GAAG,GAAGkE,EAAED,EAAExT,EAAE8U,KAAKG,OAAO3V,EAAEiQ,GAAG,GAAGkE,EAAED,EAAExT,EAAE8U,KAAKI,OAAO5V,EAAEiQ,GAAG,IAAIkE,EAAED,EAAExT,EAAE8U,KAAKK,QAAQ7V,EAAEiQ,GAAGzQ,QAAQsW,MAAM,mBAAmB3B,EAAEpE,EAAEC,EAAEC,GAAGV,EAAEkG,OAAOhN,KAAKyL,EAAG,CAAC,GAAG,MAAM3E,EAAEW,GAAG,KAAM,4CAA4CX,EAAEW,GAAGE,CAAE,CAAC,OAAOb,CAAC,EAAE7O,EAAE8U,KAAKE,OAAO,SAAS1V,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAE,CAAC,EAAEA,EAAE0G,OAAO5G,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIM,EAAEJ,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEI,EAAErQ,IAAI,GAAG,IAAI,IAAIyQ,EAAE,EAAEA,EAAEF,EAAE,EAAEE,IAAIJ,EAAErQ,IAAIyJ,KAAKzI,EAAEiP,EAAEQ,IAAI,OAAOJ,CAAC,EAAE3O,EAAE8U,KAAKG,OAAO,SAAS3V,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAEJ,EAAEM,EAAE,CAAC,EAAEA,EAAEwG,OAAO5G,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIQ,EAAEN,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI7J,EAAE+J,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIS,EAAEtK,EAAE,EAAEmK,EAAEyG,YAAY7G,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE0G,cAAc9G,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE2G,WAAW/G,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE4G,SAAShH,EAAE6B,YAAYhR,EAAEiP,EAAES,GAAGT,GAAG,EAAES,EAAET,GAAG,EAAEM,EAAE6G,WAAWjH,EAAE6B,YAAYhR,EAAEiP,EAAES,GAAGT,GAAG,EAAES,EAAEH,EAAE8G,QAAQ,GAAG,IAAI,IAAItG,EAAE,EAAEA,EAAEL,EAAEK,IAAIR,EAAE8G,QAAQ5N,KAAK0G,EAAEqB,UAAUxQ,EAAEiP,IAAIA,GAAG,EAAE,IAAIM,EAAE+G,cAAcnH,EAAE6B,YAAYhR,EAAEiP,EAAES,GAAGT,GAAG,EAAES,EAAEH,EAAEgH,aAAa,GAAGtH,EAAEI,EAAEI,GAAGF,EAAEgH,aAAa9N,KAAK0G,EAAEG,WAAWtP,EAAEiP,IAAIA,GAAG,EAAE,OAAOM,CAAC,EAAE7O,EAAE8U,KAAKI,OAAO,SAAS5V,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAE,CAAC,EAAEA,EAAE0G,OAAO5G,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEI,EAAEmH,UAAUrH,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIM,EAAEJ,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEI,EAAEkH,aAAa,GAAG,IAAI,IAAI9G,EAAE,EAAEA,EAAEF,EAAEE,IAAIJ,EAAEkH,aAAa9N,KAAK0G,EAAEG,WAAWtP,EAAEiP,IAAIA,GAAG,EAAE,OAAOI,CAAC,EAAE3O,EAAE8U,KAAKK,QAAQ,SAAS7V,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAE,CAAC,EAAEA,EAAE0G,OAAO5G,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEA,GAAG,EAAEE,EAAEK,SAASxP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEK,SAASxP,EAAEiP,GAAGA,GAAG,EAAE,IAAIM,EAAEJ,EAAEK,SAASxP,EAAEiP,GAAGA,GAAG,EAAEI,EAAEoH,OAAO,GAAG,IAAI,IAAIhH,EAAE,EAAEA,EAAEF,EAAEE,IAAI,CAAC,IAAIrK,EAAE6J,EAAE,GAAGQ,EAAEC,EAAEP,EAAEK,SAASxP,EAAEoF,EAAE,GAAG2K,EAAEZ,EAAEK,SAASxP,EAAEoF,EAAE,GAAG4K,EAAEb,EAAEK,SAASxP,EAAEoF,EAAE,GAAGiK,EAAEoH,OAAOhO,KAAK,CAACiH,EAAEK,EAAEC,GAAI,CAAC,OAAOX,CAAC,EAAE3O,EAAEgW,KAAK,CAAC,EAAEhW,EAAEgW,KAAK1H,MAAM,SAAShP,EAAEU,EAAEuO,EAAEE,GAAG,IAAI,IAAIE,EAAE,GAAGE,EAAE,EAAEA,EAAEJ,EAAEwH,KAAKC,UAAUrH,IAAIF,EAAE5G,KAAK,MAAM,OAAO4G,CAAC,EAAE3O,EAAEgW,KAAKG,WAAW,SAAS7W,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAErP,EAAE6P,MAAMN,EAAE7O,EAAE4P,WAAWjB,EAAE,OAAOrP,EAAE8P,SAAS9P,EAAE8W,KAAK7H,GAAG,GAAGjP,EAAE8W,KAAK7H,IAAIjP,EAAE8W,KAAK7H,EAAE,GAAG,OAAO,KAAK,IAAIQ,EAAE,CAAC,EAAE,GAAGA,EAAEsH,IAAI5H,EAAEqB,UAAUnB,EAAEE,GAAGA,GAAG,EAAEE,EAAEuH,KAAK7H,EAAEqB,UAAUnB,EAAEE,GAAGA,GAAG,EAAEE,EAAEwH,KAAK9H,EAAEqB,UAAUnB,EAAEE,GAAGA,GAAG,EAAEE,EAAEyH,KAAK/H,EAAEqB,UAAUnB,EAAEE,GAAGA,GAAG,EAAEE,EAAE0H,KAAKhI,EAAEqB,UAAUnB,EAAEE,GAAGA,GAAG,EAAEE,EAAEuH,MAAMvH,EAAEyH,MAAMzH,EAAEwH,MAAMxH,EAAE0H,KAAK,OAAO,KAAK,GAAG1H,EAAEsH,IAAI,EAAE,CAACtH,EAAE2H,OAAO,GAAG,IAAI,IAAIhS,EAAE,EAAEA,EAAEqK,EAAEsH,IAAI3R,IAAIqK,EAAE2H,OAAO3O,KAAK0G,EAAEG,WAAWD,EAAEE,IAAIA,GAAG,EAAE,IAAIG,EAAEP,EAAEG,WAAWD,EAAEE,GAAG,GAAGA,GAAG,EAAEF,EAAE3N,OAAO6N,EAAEG,EAAE,OAAO,KAAKD,EAAE4H,aAAalI,EAAEuC,UAAUrC,EAAEE,EAAEG,GAAGH,GAAGG,EAAE,IAAIK,EAAEN,EAAE2H,OAAO3H,EAAEsH,IAAI,GAAG,EAAa,IAAXtH,EAAE6H,MAAM,GAAOlS,EAAE,EAAEA,EAAE2K,EAAE3K,IAAI,CAAC,IAAI4K,EAAEX,EAAEE,GAAG,GAAGA,IAAIE,EAAE6H,MAAM7O,KAAKuH,GAAG,IAAI,EAAEA,GAAG,CAAC,IAAIC,EAAEZ,EAAEE,GAAGA,IAAI,IAAI,IAAIW,EAAE,EAAEA,EAAED,EAAEC,IAAIT,EAAE6H,MAAM7O,KAAKuH,GAAG5K,GAAI,CAAC,CAAS,IAARqK,EAAE8H,GAAG,GAAOnS,EAAE,EAAEA,EAAE2K,EAAE3K,IAAI,CAAC,IAAIgL,EAAE,IAAI,EAAEX,EAAE6H,MAAMlS,IAAI8O,EAAE,IAAI,GAAGzE,EAAE6H,MAAMlS,IAAIgL,GAAGX,EAAE8H,GAAG9O,KAAKyL,EAAE7E,EAAEE,IAAIF,EAAEE,IAAIA,KAAK2E,EAAEzE,EAAE8H,GAAG9O,KAAK,IAAIgH,EAAE8H,GAAG9O,KAAK0G,EAAEqB,UAAUnB,EAAEE,IAAIA,GAAG,EAAG,CAAS,IAARE,EAAE+H,GAAG,GAAOpS,EAAE,EAAEA,EAAE2K,EAAE3K,IAAKgL,EAAE,IAAI,EAAEX,EAAE6H,MAAMlS,IAAI8O,EAAE,IAAI,GAAGzE,EAAE6H,MAAMlS,IAAIgL,GAAGX,EAAE+H,GAAG/O,KAAKyL,EAAE7E,EAAEE,IAAIF,EAAEE,IAAIA,KAAK2E,EAAEzE,EAAE+H,GAAG/O,KAAK,IAAIgH,EAAE+H,GAAG/O,KAAK0G,EAAEqB,UAAUnB,EAAEE,IAAIA,GAAG,GAAI,IAAI4E,EAAE,EAAEG,EAAE,EAAE,IAAIlP,EAAE,EAAEA,EAAE2K,EAAE3K,IAAI+O,GAAG1E,EAAE8H,GAAGnS,GAAGkP,GAAG7E,EAAE+H,GAAGpS,GAAGqK,EAAE8H,GAAGnS,GAAG+O,EAAE1E,EAAE+H,GAAGpS,GAAGkP,CAAE,KAAM,CAAC,IAAIC,EAAE9E,EAAEgI,MAAM,GAAG,EAAE,CAAClD,EAAEpF,EAAEG,WAAWD,EAAEE,GAAGA,GAAG,EAAE,IAAI+F,EAAE,CAACoC,EAAE,CAACvI,EAAE,EAAEwI,EAAE,EAAEzD,EAAE,EAAElE,EAAE,EAAEzO,GAAG,EAAEqW,GAAG,GAAGC,IAAI,EAAEC,IAAI,GAAG,GAAGrI,EAAEgI,MAAMhP,KAAK6M,GAAGA,EAAEyC,WAAW5I,EAAEG,WAAWD,EAAEE,GAAGA,GAAG,EAAE,EAAEgF,EAAE,CAAC,IAAImD,EAAEvI,EAAEqB,UAAUnB,EAAEE,GAAGA,GAAG,EAAE,IAAIoI,EAAExI,EAAEqB,UAAUnB,EAAEE,GAAGA,GAAG,CAAE,MAAOmI,EAAEvI,EAAEyB,SAASvB,EAAEE,GAAGA,IAAIoI,EAAExI,EAAEyB,SAASvB,EAAEE,GAAGA,IAAK,EAAEgF,GAAGe,EAAEoC,EAAEnW,GAAGmW,EAAEpC,EAAEoC,EAAEE,GAAGD,IAAIrC,EAAEuC,GAAGH,EAAEpC,EAAEwC,GAAGH,GAAG,EAAEpD,GAAGe,EAAEoC,EAAEvI,EAAEmG,EAAEoC,EAAE1H,EAAEb,EAAEoB,YAAYlB,EAAEE,GAAGA,GAAG,GAAG,GAAGgF,GAAGe,EAAEoC,EAAEvI,EAAEA,EAAEoB,YAAYlB,EAAEE,GAAGA,GAAG,EAAE+F,EAAEoC,EAAE1H,EAAEb,EAAEoB,YAAYlB,EAAEE,GAAGA,GAAG,GAAG,IAAIgF,IAAIe,EAAEoC,EAAEvI,EAAEA,EAAEoB,YAAYlB,EAAEE,GAAGA,GAAG,EAAE+F,EAAEoC,EAAEC,EAAExI,EAAEoB,YAAYlB,EAAEE,GAAGA,GAAG,EAAE+F,EAAEoC,EAAExD,EAAE/E,EAAEoB,YAAYlB,EAAEE,GAAGA,GAAG,EAAE+F,EAAEoC,EAAE1H,EAAEb,EAAEoB,YAAYlB,EAAEE,GAAGA,GAAG,EAAG,OAAO,GAAGgF,GAAG,GAAG,IAAIA,EAAE,CAAC,IAAIzG,EAAEqB,EAAEG,WAAWD,EAAEE,GAAmB,IAAhBA,GAAG,EAAEE,EAAEuI,MAAM,GAAO5S,EAAE,EAAEA,EAAE0I,EAAE1I,IAAIqK,EAAEuI,MAAMvP,KAAK4G,EAAEE,IAAIA,GAAI,CAAC,CAAC,OAAOE,CAAC,EAAE/O,EAAEuX,KAAK,CAAC,EAAEvX,EAAEuX,KAAKjJ,MAAM,SAAShP,EAAEiP,EAAEE,EAAEE,GAAG,OAAO3O,EAAEsR,MAAMhD,MAAMhP,EAAEiP,EAAEE,EAAEE,EAAE3O,EAAEuX,KAAKC,KAAK,EAAExX,EAAEuX,KAAKC,KAAK,SAASlY,EAAEiP,EAAEE,EAAEE,GAAG,IAAIE,EAAE7O,EAAEwO,KAAKO,EAAEN,EAAE/J,EAAE,CAAC,EAAE,GAAGA,EAAE2N,IAAIxD,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,GAAGF,GAAG,GAAGA,GAAG,GAAGA,GAAG,GAAGA,GAAG,GAAGA,GAAG7J,EAAE2N,KAAK,EAAE,CAAC,IAAIrD,EAAEH,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE/J,EAAE+S,SAASzX,EAAEsR,MAAMc,aAAa9S,EAAE0P,EAAED,EAAG,CAAC,GAAG,GAAGR,GAAG,GAAG7J,EAAE2N,IAAI,CAAC,IAAIhD,EAAER,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAIa,EAAEtP,EAAEsR,MAAMW,UAAU5C,GAAG,GAAGA,IAAI3K,EAAEgT,IAAI1X,EAAEuX,KAAKI,gBAAgBrY,EAAEmP,EAAEY,GAAI,MAAM,GAAG,GAAGd,GAAG7J,EAAE2N,KAAK,GAAG3N,EAAE2N,KAAK,EAAE,CAAChD,EAAER,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAIc,EAAEV,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAEa,EAAEtP,EAAEsR,MAAMW,UAAU5C,GAAG,IAAIG,EAAExP,EAAEsR,MAAMW,UAAU1C,GAAG,GAAG,GAAG7K,EAAE2N,IAAI,CAAC3N,EAAEkT,SAAS,GAAG,IAAIlI,EAAEb,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAI,IAAI+E,EAAE,EAAEA,EAAE9D,EAAE8D,IAAI,CAAC,IAAIC,EAAE1E,EAAEF,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAImF,EAAE/E,EAAED,WAAWtP,EAAEmU,GAAGA,GAAG,EAAE,IAAI,IAAII,EAAE,GAAGe,EAAE,EAAEA,EAAEhB,EAAEgB,IAAI,CAAC,IAAIoC,EAAEnI,EAAED,WAAWtP,EAAEmU,GAAGA,GAAG,EAAE,GAAGpE,IAAIlC,EAAEnN,EAAEuX,KAAKI,gBAAgBrY,EAAEmU,EAAEpE,GAAGoE,GAAG,EAAEnE,GAAG,GAAGC,IAAIsI,EAAE7X,EAAEuX,KAAKI,gBAAgBrY,EAAEmU,EAAElE,GAAGkE,GAAG,EAAEjE,GAAGqE,EAAE9L,KAAK,CAAC+P,KAAKd,EAAEe,KAAK5K,EAAE6K,KAAKH,GAAI,CAACnT,EAAEkT,SAAS7P,KAAK8L,EAAG,CAAC,CAAC,GAAG,GAAGnP,EAAE2N,IAAI,CAAC,IAAI4E,EAAEpI,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAIrB,EAAEyB,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAIwJ,EAAEpJ,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAIyJ,EAAErJ,EAAED,WAAWtP,EAAEmP,GAAoG,IAAjGA,GAAG,EAAE/J,EAAEyT,UAAUnY,EAAEsR,MAAMY,aAAa5S,EAAEyP,EAAEkI,GAAGvS,EAAE0T,UAAUpY,EAAEsR,MAAMY,aAAa5S,EAAEyP,EAAE3B,GAAG1I,EAAE2T,OAAO,GAAO7E,EAAE,EAAEA,EAAEyE,EAAEzE,IAAI,CAAC,IAAI8E,EAAE,GAAG,IAAI1D,EAAE,EAAEA,EAAEsD,EAAEtD,IAAI,CAAC,IAAIzH,EAAE,KAAK0K,EAAE,KAAK,GAAGxI,IAAIlC,EAAEnN,EAAEuX,KAAKI,gBAAgBrY,EAAEmP,EAAEY,GAAGZ,GAAG,EAAEa,GAAG,GAAGC,IAAIsI,EAAE7X,EAAEuX,KAAKI,gBAAgBrY,EAAEmP,EAAEc,GAAGd,GAAG,EAAEe,GAAG8I,EAAEvQ,KAAK,CAACgQ,KAAK5K,EAAE6K,KAAKH,GAAI,CAACnT,EAAE2T,OAAOtQ,KAAKuQ,EAAG,CAAC,CAAC,KAAM,CAAC,GAAG,GAAG/J,GAAG,GAAG7J,EAAE2N,IAAI,CAAC,IAAIkG,EAAE1J,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAI+J,EAAE3J,EAAEC,SAASxP,EAAEmP,GAAG,GAAGA,GAAG,EAAE,GAAGE,EAAEoD,MAAMpD,EAAEoD,MAAMwG,OAAO,GAAG5J,EAAEoD,OAAOwG,EAAE,KAAM,iCAAiC,OAAOvY,EAAEuX,KAAKC,KAAKlY,EAAEqP,EAAEoD,MAAMhD,EAAEyJ,EAAE,CAAC1Z,QAAQsW,MAAM,oCAAoC7G,EAAE,SAAS7J,EAAE2N,IAAK,CAAC,OAAO3N,CAAC,EAAE1E,EAAEuX,KAAKI,gBAAgB,SAASrY,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAE,GAAG,OAAOA,EAAE9G,KAAK,EAAE0G,EAAEE,EAAEmB,UAAUxQ,EAAEiP,GAAG,GAAGA,GAAG,EAAEE,EAAE,EAAE,EAAEI,EAAE9G,KAAK,EAAE0G,EAAEE,EAAEmB,UAAUxQ,EAAEiP,GAAG,GAAGA,GAAG,EAAEE,EAAE,EAAE,EAAEI,EAAE9G,KAAK,EAAE0G,EAAEE,EAAEmB,UAAUxQ,EAAEiP,GAAG,GAAGA,GAAG,EAAEE,EAAE,EAAE,EAAEI,EAAE9G,KAAK,EAAE0G,EAAEE,EAAEmB,UAAUxQ,EAAEiP,GAAG,GAAGA,GAAG,EAAEE,EAAE,EAAE,EAAEI,CAAC,EAAE7O,EAAEyY,KAAK,CAAC,EAAEzY,EAAEyY,KAAKnK,MAAM,SAAShP,EAAEiP,EAAEE,EAAEE,GAAG,OAAO3O,EAAEsR,MAAMhD,MAAMhP,EAAEiP,EAAEE,EAAEE,EAAE3O,EAAEyY,KAAKjB,KAAK,EAAExX,EAAEyY,KAAKjB,KAAK,SAASlY,EAAEiP,EAAEE,EAAEE,GAAG,IAAIE,EAAE7O,EAAEwO,KAAKO,EAAEN,EAAE/J,EAAE,CAAC,EAAE,GAAGA,EAAE2N,IAAIxD,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,GAAGF,GAAG,GAAGA,GAAG,GAAGA,GAAG,GAAGA,EAAE,OAAO,KAAK,GAAG,GAAGA,GAAG,GAAGA,GAAG,GAAGA,GAAG7J,EAAE2N,KAAK,GAAG,GAAG9D,GAAG7J,EAAE2N,KAAK,EAAE,CAAC,IAAIrD,EAAEH,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE/J,EAAE+S,SAASzX,EAAEsR,MAAMc,aAAa9S,EAAEyP,EAAEC,EAAG,CAAC,GAAG,GAAGT,GAAG7J,EAAE2N,KAAK,GAAG3N,EAAE2N,KAAK,GAAG,GAAG,GAAG3N,EAAE2N,IAAI3N,EAAEgU,MAAM7J,EAAEiB,UAAUxQ,EAAEmP,GAAGA,GAAG,OAAO,GAAG,GAAG/J,EAAE2N,IAAI,CAAC,IAAIhD,EAAER,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE/J,EAAEiU,KAAK9J,EAAEyB,YAAYhR,EAAEmP,EAAEY,GAAGZ,GAAG,EAAE/J,EAAEiU,KAAK3X,MAAO,OAAO,GAAG,GAAGuN,EAAE,CAAC7J,EAAEkU,KAAK,GAAGvJ,EAAER,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAI,IAAIa,EAAE,EAAEA,EAAED,EAAEC,IAAI,CAAC,IAAIC,EAAEV,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE/J,EAAEkU,KAAK7Q,KAAK/H,EAAEyY,KAAKI,gBAAgBvZ,EAAEyP,EAAEQ,GAAI,CAAC,MAAM,GAAG,GAAGhB,GAAG,GAAG7J,EAAE2N,KAAK,GAAG,GAAG3N,EAAE2N,IAAI,CAAC,IAAI7C,EAAEX,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE/J,EAAEoU,KAAK9Y,EAAEsR,MAAMY,aAAa5S,EAAEyP,EAAES,GAAG9K,EAAEqU,MAAM,GAAG,IAAIrJ,EAAEb,EAAED,WAAWtP,EAAEmP,GAAQ,IAALA,GAAG,EAAMa,EAAE,EAAEA,EAAEI,EAAEJ,IAAI,CAAC,IAAIkE,EAAE3E,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE/J,EAAEqU,MAAMhR,KAAK,GAAGyL,EAAE,KAAKxT,EAAEyY,KAAKO,gBAAgB1Z,EAAEyP,EAAEyE,GAAI,CAAC,OAAO,GAAG,GAAGjF,GAAG,GAAG7J,EAAE2N,KAAK,GAAG,GAAG3N,EAAE2N,IAAI,CAAC,IAAI/C,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAACD,EAAER,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAI,IAAIgF,EAAE,GAAGG,EAAE,EAAEA,EAAEvE,EAAEuE,IAAIH,EAAE1L,KAAK/H,EAAEsR,MAAMc,aAAa9S,EAAEyP,EAAEF,EAAED,WAAWtP,EAAEmP,EAAE,EAAEmF,KAAKnF,GAAG,EAAEY,EAAE,GAAGC,IAAI5K,EAAEuU,QAAQxF,GAAG,GAAGnE,IAAI5K,EAAEwU,QAAQzF,GAAG,GAAGnE,IAAI5K,EAAEyU,QAAQ1F,EAAG,CAACpE,EAAER,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE/J,EAAE0U,UAAUpZ,EAAEyY,KAAKY,uBAAuB/Z,EAAEmP,EAAEY,EAAG,MAAO,CAAC,GAAG,GAAGd,GAAG,GAAG7J,EAAE2N,IAAI,CAAC,IAAIwB,EAAEhF,EAAED,WAAWtP,EAAEmP,GAAGA,GAAG,EAAE,IAAImG,EAAE/F,EAAEC,SAASxP,EAAEmP,GAAG,GAAGA,GAAG,EAAE,GAAGE,EAAEoD,MAAMpD,EAAEoD,MAAM8B,OAAO,GAAGlF,EAAEoD,OAAO8B,EAAE,KAAM,iCAAiC,OAAO7T,EAAEyY,KAAKjB,KAAKlY,EAAEqP,EAAEoD,MAAMhD,EAAE6F,EAAE,CAAC9V,QAAQsW,MAAM,oCAAoC7G,EAAE,SAAS7J,EAAE2N,IAAK,CAAC,OAAO3N,CAAC,EAAE1E,EAAEyY,KAAKO,gBAAgB,SAAS1Z,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKI,WAAWD,EAAEJ,EAAEM,EAAE,GAAGE,EAAEN,EAAEnP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAI7J,EAAE,EAAEA,EAAEqK,EAAErK,IAAI,CAAC,IAAIsK,EAAEP,EAAEnP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE9G,KAAK/H,EAAEyY,KAAKa,iBAAiBha,EAAEqP,EAAEK,GAAI,CAAC,OAAOH,CAAC,EAAE7O,EAAEyY,KAAKa,iBAAiB,SAASha,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKI,WAAWD,EAAE,CAAC,EAAEE,EAAEJ,EAAEnP,EAAEiP,GAAGQ,EAAEN,EAAEnP,EAAEiP,GAAG,GAAGA,GAAG,EAAEI,EAAE4K,MAAM,GAAG,IAAI,IAAI7U,EAAE,EAAEA,EAAEmK,EAAE,EAAEnK,IAAIiK,EAAE4K,MAAMxR,KAAK0G,EAAEnP,EAAEiP,IAAIA,GAAG,EAAE,OAAOI,EAAE6K,mBAAmBxZ,EAAEyY,KAAKY,uBAAuB/Z,EAAEiP,EAAEQ,GAAGJ,CAAC,EAAE3O,EAAEyY,KAAKY,uBAAuB,SAAS/Z,EAAEiP,EAAEE,GAAG,IAAI,IAAIE,EAAE3O,EAAEwO,KAAKI,WAAWC,EAAE,GAAGE,EAAE,EAAEA,EAAEN,EAAEM,IAAIF,EAAE9G,KAAK4G,EAAErP,EAAEiP,GAAGI,EAAErP,EAAEiP,EAAE,IAAIA,GAAG,EAAE,OAAOM,CAAC,EAAE7O,EAAEyY,KAAKgB,qBAAqB,SAASna,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAEJ,EAAEM,EAAE,GAAGE,EAAEN,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAI7J,EAAE,EAAEA,EAAEqK,EAAErK,IAAI,CAAC,IAAIsK,EAAEP,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE9G,KAAK/H,EAAEyY,KAAKiB,sBAAsBpa,EAAEqP,EAAEK,GAAI,CAAC,OAAOH,CAAC,EAAE7O,EAAEyY,KAAKiB,sBAAsB,SAASpa,EAAEiP,GAAG,IAAI,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAE,CAAC,EAAEE,EAAE,CAAC,YAAY,QAAQ,aAAaE,EAAE,EAAEA,EAAEF,EAAE7N,OAAO+N,IAAI,CAAC,IAAIrK,EAAE+J,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,GAAGQ,GAAGrK,IAAIiK,EAAEE,EAAEE,IAAIN,EAAE6B,YAAYhR,EAAEiP,EAAE7J,GAAG6J,GAAG,EAAEI,EAAEE,EAAEE,IAAI/N,MAAO,CAAqB,OAApB0D,EAAE+J,EAAEG,WAAWtP,EAAEiP,GAAUA,GAAG,EAAEI,EAAEgL,MAAMlL,EAAE6B,YAAYhR,EAAEiP,EAAE,EAAE7J,GAAG6J,GAAG,EAAEI,EAAEgL,MAAM3Y,OAAO2N,CAAC,EAAE3O,EAAEyY,KAAKI,gBAAgB,SAASvZ,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAEJ,EAAEM,EAAE,GAAGE,EAAEN,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAI7J,EAAE,EAAEA,EAAEqK,EAAErK,IAAI,CAAC,IAAIsK,EAAEP,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE9G,KAAK/H,EAAEyY,KAAKmB,aAAata,EAAEqP,EAAEK,GAAI,CAAC,OAAOH,CAAC,EAAE7O,EAAEyY,KAAKmB,aAAa,SAASta,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEwO,KAAKG,EAAE,CAACkL,MAAM,IAAIlL,EAAEmL,OAAOrL,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIM,EAAEJ,EAAEG,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAIQ,EAAE,EAAEA,EAAEF,EAAE,EAAEE,IAAIJ,EAAEkL,MAAM9R,KAAK0G,EAAEG,WAAWtP,EAAEiP,IAAIA,GAAG,EAAE,OAAOI,CAAC,EAAE3O,EAAE+Z,KAAK,CAAC,EAAE/Z,EAAE+Z,KAAKzL,MAAM,SAAShP,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAE,CAAC,EAAE,OAAOF,EAAEO,UAAU5P,EAAEiP,GAAGA,GAAG,EAAEM,EAAEmL,aAAarL,EAAEO,UAAU5P,EAAEiP,GAAGA,GAAG,EAAEI,EAAEG,SAASxP,EAAEiP,GAAGA,GAAG,EAAEI,EAAEG,SAASxP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE+H,MAAMjI,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEoL,WAAWtL,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEqL,QAAQvL,EAAE6B,WAAWlR,EAAEiP,GAAGA,GAAG,EAAEM,EAAEsL,SAASxL,EAAE6B,WAAWlR,EAAEiP,GAAGA,GAAG,EAAEM,EAAEyH,KAAK3H,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAE0H,KAAK5H,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAE2H,KAAK7H,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAE4H,KAAK9H,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAEuL,SAASzL,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEwL,cAAc1L,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEyL,kBAAkB3L,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAE0L,iBAAiB5L,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAE2L,gBAAgB7L,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,CAAC,EAAE7O,EAAEya,KAAK,CAAC,EAAEza,EAAEya,KAAKnM,MAAM,SAAShP,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAE,CAAC,EAAE,OAAOF,EAAEO,UAAU5P,EAAEiP,GAAGA,GAAG,EAAEM,EAAE6L,SAAS/L,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAE8L,UAAUhM,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAE+L,QAAQjM,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAEgM,gBAAgBlM,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEiM,mBAAmBnM,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAEkM,oBAAoBpM,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAEmM,WAAWrM,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAEoM,eAAetM,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAEqM,cAAcvM,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAEsM,YAAYxM,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEA,GAAG,EAAEM,EAAEuM,iBAAiBzM,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAEwM,iBAAiB1M,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,CAAC,EAAE7O,EAAEsb,KAAK,CAAC,EAAEtb,EAAEsb,KAAKhN,MAAM,SAAShP,EAAEiP,EAAEE,EAAEE,GAAG,IAAI,IAAIE,EAAE7O,EAAEwO,KAAKO,EAAE,CAACwM,OAAO,GAAGC,UAAU,IAAI9W,EAAE,EAAEsK,EAAE,EAAEK,EAAE,EAAEA,EAAEV,EAAEsH,KAAKC,UAAU7G,IAAIA,EAAEV,EAAE8L,KAAKY,mBAAmB3W,EAAEmK,EAAED,WAAWtP,EAAEiP,GAAGA,GAAG,EAAES,EAAEH,EAAEiB,UAAUxQ,EAAEiP,GAAGA,GAAG,GAAGQ,EAAEwM,OAAOxT,KAAKrD,GAAGqK,EAAEyM,UAAUzT,KAAKiH,GAAG,OAAOD,CAAC,EAAE/O,EAAEyb,KAAK,CAAC,EAAEzb,EAAEyb,KAAKnN,MAAM,SAAShP,EAAEiP,EAAEE,EAAEE,GAAG,IAAIE,EAAE7O,EAAEwO,KAAKO,EAAEF,EAAED,WAAWtP,EAAEiP,GAAG,GAAGA,GAAG,EAAE,GAAGQ,EAAE,OAAO/O,EAAEyb,KAAKC,QAAQpc,EAAEiP,EAAE,EAAEE,EAAEE,GAAG,IAAIjK,EAAEmK,EAAED,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAIS,EAAE,CAAC2M,OAAO,GAAGC,KAAK,IAAIvM,EAAE,EAAEA,EAAE3K,EAAE2K,IAAI,CAACd,GAAG,EAAEE,EAAEI,EAAED,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIe,EAAET,EAAED,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIgB,EAAED,IAAI,EAAE,GAAG,IAAIC,GAAG,IAAI,KAAM,8BAA8BA,EAAEhB,EAAEvO,EAAEyb,KAAKI,YAAYvc,EAAEiP,EAAES,EAAG,CAAC,OAAOA,CAAC,EAAEhP,EAAEyb,KAAKC,QAAQ,SAASpc,EAAEiP,EAAEE,EAAEE,GAAG,IAAIE,EAAE7O,EAAEwO,KAAKK,EAAEK,UAAU5P,EAAEiP,GAAGA,GAAG,EAAE,IAAIQ,EAAEF,EAAEC,SAASxP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAI7J,EAAE,CAACiX,OAAO,GAAGC,KAAK,IAAI5M,EAAE,EAAEA,EAAED,EAAEC,IAAI,CAACH,EAAEC,SAASxP,EAAEiP,GAAGA,GAAG,EAAE,IAAIc,EAAER,EAAED,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAED,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIe,EAAED,IAAI,EAAE,GAAG,IAAIC,GAAG,IAAI,KAAM,8BAA8BA,EAAEf,EAAEvO,EAAEyb,KAAKI,YAAYvc,EAAEiP,EAAE7J,EAAG,CAAC,OAAOA,CAAC,EAAE1E,EAAEyb,KAAKI,YAAY,SAASvc,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,GAAG,EAAEE,EAAEJ,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEI,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEI,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEI,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAI,IAAI7J,EAAE,EAAEA,EAAEqK,EAAErK,IAAI,CAAC,IAAIsK,EAAEL,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIc,EAAEV,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIe,EAAEX,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAES,GAAGH,IAAIJ,EAAEkN,OAAO5T,KAAKiH,GAAGP,EAAEmN,KAAK7T,KAAK,CAAC+T,OAAO,GAAGlD,KAAK,MAAM,IAAIrJ,EAAEd,EAAEmN,KAAKnN,EAAEmN,KAAK5a,OAAO,GAAGuO,EAAEuM,OAAO/T,KAAKsH,GAAGE,EAAEqJ,KAAK7Q,KAAKuH,GAAGT,EAAEG,CAAE,CAAC,OAAOT,CAAC,EAAEvO,EAAEoW,KAAK,CAAC,EAAEpW,EAAEoW,KAAK9H,MAAM,SAAShP,EAAEiP,EAAEE,EAAEE,GAAG,IAAIE,EAAE7O,EAAEwO,KAAKO,EAAE,GAAGrK,EAAEiK,EAAEoL,KAAKQ,iBAAiBvL,EAAEL,EAAEsH,KAAKC,UAAU,EAAE,GAAG,GAAGxR,EAAE,IAAI,IAAI2K,EAAE,EAAEA,EAAEL,EAAEK,IAAIN,EAAEhH,KAAK8G,EAAED,WAAWtP,EAAEiP,GAAGc,GAAG,KAAK,GAAG,GAAG,GAAG3K,EAAE,IAAI2K,EAAE,EAAEA,EAAEL,EAAEK,IAAIN,EAAEhH,KAAK8G,EAAEC,SAASxP,EAAEiP,GAAGc,GAAG,KAAK,OAAON,CAAC,EAAE/O,EAAEiW,KAAK,CAAC,EAAEjW,EAAEiW,KAAK3H,MAAM,SAAShP,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAE,CAAC,EAAEE,EAAEJ,EAAEG,SAASxP,EAAEiP,GAAG,OAAOA,GAAG,EAAEM,EAAEqH,UAAUvH,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,OAAOQ,IAAIF,EAAEkN,UAAUpN,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEmN,YAAYrN,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEoN,mBAAmBtN,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEqN,qBAAqBvN,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEsN,SAASxN,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEuN,kBAAkBzN,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEwN,WAAW1N,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAEyN,gBAAgB3N,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE0N,mBAAmB5N,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE2N,iBAAiB7N,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE4N,sBAAsB9N,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE6N,qBAAqB/N,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEM,EAAE8N,kBAAkBhO,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,GAAGM,CAAC,EAAE7O,EAAE9B,KAAK,CAAC,EAAE8B,EAAE9B,KAAKoQ,MAAM,SAAShP,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAE,CAAC,EAAEF,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIQ,EAAEJ,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEI,EAAEC,WAAWtP,EAAEiP,GAAG,IAAI,IAAI7J,EAAEsK,EAAE,CAAC,YAAY,aAAa,gBAAgB,KAAK,WAAW,UAAU,iBAAiB,YAAY,eAAe,WAAW,cAAc,YAAY,cAAc,UAAU,aAAa,MAAM,iBAAiB,oBAAoB,iBAAiB,aAAa,gBAAgB,gBAAgB,mBAAmB,eAAe,eAAeK,EAAEd,GAAG,EAAEe,EAAE,EAAEA,EAAEP,EAAEO,IAAI,CAAC,IAAIC,EAAEZ,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIiB,EAAEb,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAImB,EAAEf,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIiF,EAAE7E,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIkF,EAAE9E,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIqF,EAAEjF,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIsF,EAAEe,EAAE5F,EAAEwE,GAAGwD,EAAE3H,EAAE,GAAGN,EAAE6E,EAAE,GAAG,GAAGrE,EAAEsE,EAAElF,EAAEgC,YAAYrR,EAAE0X,EAAEvD,EAAE,QAAQ,GAAG,GAAGlE,GAAG,GAAGC,EAAEqE,EAAElF,EAAEgC,YAAYrR,EAAE0X,EAAEvD,EAAE,QAAQ,GAAG,GAAGjE,EAAEqE,EAAElF,EAAED,UAAUpP,EAAE0X,EAAEvD,QAAQ,GAAG,GAAGjE,EAAEqE,EAAElF,EAAEgC,YAAYrR,EAAE0X,EAAEvD,EAAE,QAAQ,GAAG,GAAGjE,EAAEqE,EAAElF,EAAEgC,YAAYrR,EAAE0X,EAAEvD,EAAE,OAAQ,CAAC,GAAG,GAAGlE,EAAE,KAAM,oBAAoBC,EAAE,iBAAiBD,EAAEsE,EAAElF,EAAED,UAAUpP,EAAE0X,EAAEvD,GAAG3U,QAAQsW,MAAM,gCAAgC5F,EAAE,YAAa,CAAC,IAAIyH,EAAE,IAAI1H,EAAE,IAAIG,EAAElM,SAAS,IAAI,MAAMqL,EAAEoI,KAAKpI,EAAEoI,GAAG,CAAC,GAAGpI,EAAEoI,QAAG,IAASrC,EAAEA,EAAEpB,GAAGK,EAAEhF,EAAEoI,GAAG2F,MAAMlN,CAAE,CAAC,IAAI,IAAItC,KAAKyB,EAAE,GAAG,MAAMA,EAAEzB,GAAGyP,gBAAgB,MAAMhO,EAAEzB,GAAGwP,MAAM,OAAO/N,EAAEzB,GAAG,IAAI,IAAIA,KAAKyB,EAAE,GAAG,MAAMA,EAAEzB,GAAGyP,gBAAgB,GAAGhO,EAAEzB,GAAGwP,MAAM,OAAO/N,EAAEzB,GAAG,IAAI,IAAIA,KAAKyB,EAAE,GAAG,MAAMA,EAAEzB,GAAGyP,gBAAgB,MAAMhO,EAAEzB,GAAGwP,MAAM,OAAO/N,EAAEzB,GAAG,IAAI,IAAIA,KAAKyB,EAAE,GAAG,MAAMA,EAAEzB,GAAGyP,eAAe,OAAOhO,EAAEzB,GAAG,IAAI,IAAIA,KAAKyB,EAAE,CAACnK,EAAE0I,EAAE,KAAK,CAAC,OAAOtO,QAAQsW,MAAM,wCAAwCvG,EAAEnK,GAAGkY,OAAO/N,EAAEnK,EAAE,EAAE1E,EAAE,QAAQ,CAAC,EAAEA,EAAE,QAAQsO,MAAM,SAAShP,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKI,WAAWtP,EAAEiP,GAAGA,GAAG,EAAE,IAAIM,EAAE,CAAC,EAAE,GAAG,GAAGF,EAAE3O,EAAE,QAAQ8c,SAASxd,EAAEiP,EAAEM,QAAQ,GAAG,GAAGF,EAAE3O,EAAE,QAAQ+c,SAASzd,EAAEiP,EAAEM,QAAQ,GAAG,GAAGF,GAAG,GAAGA,GAAG,GAAGA,EAAE3O,EAAE,QAAQgd,SAAS1d,EAAEiP,EAAEM,OAAQ,CAAC,GAAG,GAAGF,EAAE,KAAM,+BAA+BA,EAAE3O,EAAE,QAAQid,SAAS3d,EAAEiP,EAAEM,EAAG,CAAC,OAAOA,CAAC,EAAE7O,EAAE,QAAQ8c,SAAS,SAASxd,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAK,OAAOC,EAAEyO,cAAcvO,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAE0O,cAAcxO,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE2O,aAAazO,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE4O,OAAO1O,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE6O,gBAAgB3O,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAE8O,gBAAgB5O,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAE+O,kBAAkB7O,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEgP,kBAAkB9O,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEiP,kBAAkB/O,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEkP,kBAAkBhP,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEmP,oBAAoBjP,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEoP,oBAAoBlP,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEqP,eAAenP,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEsP,mBAAmBpP,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEuP,aAAarP,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEwP,OAAOtP,EAAEqC,UAAU1R,EAAEiP,EAAE,IAAIA,GAAG,GAAGE,EAAEyP,gBAAgBvP,EAAEG,SAASxP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE0P,gBAAgBxP,EAAEG,SAASxP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE2P,gBAAgBzP,EAAEG,SAASxP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE4P,gBAAgB1P,EAAEG,SAASxP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE6P,UAAU,CAAC3P,EAAEuB,SAAS5Q,EAAEiP,GAAGI,EAAEuB,SAAS5Q,EAAEiP,EAAE,GAAGI,EAAEuB,SAAS5Q,EAAEiP,EAAE,GAAGI,EAAEuB,SAAS5Q,EAAEiP,EAAE,IAAIA,GAAG,EAAEE,EAAE8P,YAAY5P,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE+P,iBAAiB7P,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEgQ,gBAAgB9P,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEiQ,cAAc/P,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEkQ,eAAehQ,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEmQ,aAAajQ,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEoQ,YAAYlQ,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEqQ,aAAanQ,EAAEC,WAAWtP,EAAEiP,GAAGA,EAAG,CAAC,EAAEvO,EAAE,QAAQ+c,SAAS,SAASzd,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAK,OAAOD,EAAEvO,EAAE,QAAQ8c,SAASxd,EAAEiP,EAAEE,GAAGA,EAAEsQ,iBAAiBpQ,EAAEG,SAASxP,EAAEiP,GAAGA,GAAG,EAAEE,EAAEuQ,iBAAiBrQ,EAAEG,SAASxP,EAAEiP,GAAGA,EAAG,CAAC,EAAEvO,EAAE,QAAQgd,SAAS,SAAS1d,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAK,OAAOD,EAAEvO,EAAE,QAAQ+c,SAASzd,EAAEiP,EAAEE,GAAGA,EAAEwQ,SAAStQ,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAEyQ,WAAWvQ,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEE,EAAE0Q,UAAUxQ,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE2Q,QAAQzQ,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE4Q,aAAa1Q,EAAEC,WAAWtP,EAAEiP,GAAGA,EAAG,CAAC,EAAEvO,EAAE,QAAQid,SAAS,SAAS3d,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAK,OAAOD,EAAEvO,EAAE,QAAQgd,SAAS1d,EAAEiP,EAAEE,GAAGA,EAAE6Q,wBAAwB3Q,EAAEC,WAAWtP,EAAEiP,GAAGA,GAAG,EAAEE,EAAE8Q,wBAAwB5Q,EAAEC,WAAWtP,EAAEiP,GAAGA,EAAG,CAAC,EAAEvO,EAAEwf,KAAK,CAAC,EAAExf,EAAEwf,KAAKlR,MAAM,SAAShP,EAAEiP,EAAEE,GAAG,IAAIE,EAAE3O,EAAEwO,KAAKK,EAAE,CAAC,EAAE,OAAOA,EAAE4Q,QAAQ9Q,EAAEO,UAAU5P,EAAEiP,GAAGA,GAAG,EAAEM,EAAE6Q,YAAY/Q,EAAEO,UAAU5P,EAAEiP,GAAGA,GAAG,EAAEM,EAAE8Q,kBAAkBhR,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,EAAE+Q,mBAAmBjR,EAAEmB,UAAUxQ,EAAEiP,GAAGA,GAAG,EAAEM,CAAC,EAAE,MAAM7O,IAAIA,EAAE,CAAC,GAAG,MAAMA,EAAE4T,IAAI5T,EAAE4T,EAAE,CAAC,GAAG5T,EAAE4T,EAAEiM,YAAY,SAASvgB,EAAEU,GAAG,IAAIuO,EAAEjP,EAAEwV,KAAKrG,GAAG,EAAE,GAAG,MAAMF,EAAEuR,KAAKrR,EAAEF,EAAEuR,KAAK,MAAMvR,EAAEwR,KAAKtR,EAAEF,EAAEwR,KAAK,MAAMxR,EAAEyR,KAAKvR,EAAEF,EAAEyR,KAAK,MAAMzR,EAAE0R,OAAOxR,EAAEF,EAAE0R,OAAO,GAAGxR,EAAE,KAAM,qCAAqC,IAAIE,EAAEJ,EAAEwG,OAAOtG,GAAG,GAAG,GAAGE,EAAE0G,OAAO,OAAOrV,GAAG2O,EAAErQ,IAAI0C,OAAO,EAAE2N,EAAErQ,IAAI0B,GAAG,GAAG,GAAG2O,EAAE0G,OAAO,CAAC,IAAI,IAAIxG,GAAG,EAAEE,EAAE,EAAEA,EAAEJ,EAAE8G,SAASzU,OAAO+N,IAAI,GAAG/O,GAAG2O,EAAE8G,SAAS1G,GAAG,CAACF,EAAEE,EAAE,KAAK,CAAC,OAAI,GAAGF,GAAcF,EAAE+G,WAAW7G,GAAG7O,EAArB,EAAuC,OAAO,GAAG2O,EAAEiH,cAAc/G,GAAGF,EAAEkH,aAAa7V,EAAE2O,EAAE+G,WAAW7G,IAAIF,EAAEiH,cAAc/G,IAAI,IAAIF,EAAEiH,cAAc5U,OAAO6N,IAAI7O,EAAE2O,EAAEgH,QAAQ9G,GAAG,CAAC,GAAG,IAAIF,EAAE0G,OAAO,CAAC,GAAGrV,EAAE2O,EAAEoH,OAAOpH,EAAEoH,OAAO/U,OAAO,GAAG,GAAG,OAAO,EAAE,IAAI+N,EAAE,EAAEA,EAAEJ,EAAEoH,OAAO/U,OAAO+N,IAAI,CAAC,IAAIrK,EAAEiK,EAAEoH,OAAOhH,GAAG,GAAGrK,EAAE,IAAI1E,GAAGA,GAAG0E,EAAE,GAAG,OAAOA,EAAE,IAAI1E,EAAE0E,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,KAAM,6BAA6BiK,EAAE0G,MAAM,EAAErV,EAAE4T,EAAEsM,YAAY,SAAS5gB,EAAEiP,GAAG,IAAIE,EAAE,CAAC0R,KAAK,GAAGC,KAAK,IAAI,GAAG9gB,EAAE+gB,KAAK/gB,EAAE+gB,IAAIC,QAAQ/R,GAAG,CAAC,IAAII,EAAErP,EAAE+gB,IAAIC,QAAQ/R,GAAG,OAAO,MAAMI,EAAEF,GAAG,iBAAiBE,IAAIA,EAAE3O,EAAEqgB,IAAIE,OAAO5R,GAAGrP,EAAE+gB,IAAIC,QAAQ/R,GAAGI,GAAGA,EAAE,CAAC,GAAGrP,EAAE2T,IAAI,CAAC,IAAIpE,EAAE,CAAC1B,EAAE,EAAEC,EAAE,EAAEhM,MAAM,GAAGof,OAAO,EAAEC,WAAU,EAAG7T,MAAMtN,EAAE2T,IAAIiB,QAAQ5U,EAAE2T,IAAIiB,QAAQwM,cAAc,EAAEC,MAAK,GAAI5R,EAAEzP,EAAE2T,IAAIvO,EAAEpF,EAAE2T,IAAIiB,QAAQ,GAAGnF,EAAEuE,IAAI,CAAC,IAAI,IAAItE,EAAE,EAAED,EAAE4E,SAAS3E,EAAE,IAAIT,GAAGS,GAAG,EAAEtK,EAAEqK,EAAEwE,QAAQxE,EAAE4E,SAAS3E,EAAE,IAAIkF,OAAQ,CAAClU,EAAE4T,EAAEgN,SAASthB,EAAE2T,IAAII,YAAY9E,GAAGM,EAAEE,EAAErK,EAAE+J,EAAG,MAAMnP,EAAE0W,MAAMhW,EAAE4T,EAAEiN,UAAUtS,EAAEjP,EAAEmP,GAAG,OAAOA,CAAC,EAAEzO,EAAE4T,EAAEiN,UAAU,SAASvhB,EAAEiP,EAAEE,GAAG,IAAIE,EAAEJ,EAAEyH,KAAK1W,GAAG,MAAMqP,IAAIA,EAAEJ,EAAEyH,KAAK1W,GAAGU,EAAEgW,KAAKG,WAAW5H,EAAEjP,IAAI,MAAMqP,IAAIA,EAAE0H,KAAK,EAAErW,EAAE4T,EAAEkN,aAAanS,EAAEF,GAAGzO,EAAE4T,EAAEmN,YAAYpS,EAAEJ,EAAEE,GAAI,EAAEzO,EAAE4T,EAAEkN,aAAa,SAASxhB,EAAEiP,GAAG,IAAI,IAAIE,EAAE,EAAEA,EAAEnP,EAAE+W,IAAI5H,IAAI,CAAC,IAAI,IAAIE,EAAE,GAAGF,EAAE,EAAEnP,EAAEoX,OAAOjI,EAAE,GAAG,EAAEI,EAAEvP,EAAEoX,OAAOjI,GAAGM,EAAEJ,EAAEI,GAAGF,EAAEE,IAAI,CAAC,IAAIrK,EAAEqK,GAAGJ,EAAEE,EAAEE,EAAE,EAAEC,EAAED,GAAGF,EAAEF,EAAEI,EAAE,EAAEM,EAAE,EAAE/P,EAAEsX,MAAM7H,GAAGO,EAAE,EAAEhQ,EAAEsX,MAAMlS,GAAG6K,EAAE,EAAEjQ,EAAEsX,MAAM5H,GAAGQ,EAAElQ,EAAEuX,GAAG9H,GAAGW,EAAEpQ,EAAEwX,GAAG/H,GAAG,GAAGA,GAAGJ,EAAE,GAAGU,EAAE,CAAC,IAAIC,EAAE,CAACtP,EAAE4T,EAAEiE,EAAEmJ,OAAOzS,EAAEiB,EAAEE,GAAG,QAAQ,CAAC1P,EAAE4T,EAAEiE,EAAEmJ,OAAOzS,EAAEjP,EAAEuX,GAAGnS,GAAGpF,EAAEwX,GAAGpS,GAAI,MAAM4K,EAAEtP,EAAE4T,EAAEiE,EAAEmJ,OAAOzS,EAAEjP,EAAEuX,GAAGnS,GAAGpF,EAAEwX,GAAGpS,IAAI1E,EAAE4T,EAAEiE,EAAEmJ,OAAOzS,GAAGjP,EAAEuX,GAAGnS,GAAG8K,GAAG,GAAGlQ,EAAEwX,GAAGpS,GAAGgL,GAAG,GAAGL,EAAEC,GAAGtP,EAAE4T,EAAEiE,EAAEoJ,OAAO1S,EAAEiB,EAAEE,GAAGH,EAAEvP,EAAE4T,EAAEiE,EAAEqJ,SAAS3S,EAAEiB,EAAEE,EAAEpQ,EAAEuX,GAAG7H,GAAG1P,EAAEwX,GAAG9H,IAAIhP,EAAE4T,EAAEiE,EAAEqJ,SAAS3S,EAAEiB,EAAEE,GAAGF,EAAElQ,EAAEuX,GAAG7H,IAAI,GAAGU,EAAEpQ,EAAEwX,GAAG9H,IAAI,EAAG,CAAChP,EAAE4T,EAAEiE,EAAEsJ,UAAU5S,EAAG,CAAC,EAAEvO,EAAE4T,EAAEmN,YAAY,SAASzhB,EAAEiP,EAAEE,GAAG,IAAI,IAAIE,EAAE,EAAEA,EAAErP,EAAEyX,MAAM/V,OAAO2N,IAAI,CAAC,IAAIE,EAAE,CAACsR,KAAK,GAAGC,KAAK,IAAIrR,EAAEzP,EAAEyX,MAAMpI,GAAG3O,EAAE4T,EAAEiN,UAAU9R,EAAEsI,WAAW9I,EAAEM,GAAG,IAAI,IAAInK,EAAEqK,EAAEiI,EAAEhI,EAAE,EAAEA,EAAEH,EAAEuR,KAAKpf,OAAOgO,GAAG,EAAE,CAAC,IAAIK,EAAER,EAAEuR,KAAKpR,GAAGM,EAAET,EAAEuR,KAAKpR,EAAE,GAAGP,EAAE2R,KAAKrY,KAAKsH,EAAE3K,EAAE+J,EAAEa,EAAE5K,EAAEuS,EAAEvS,EAAE7D,IAAI4N,EAAE2R,KAAKrY,KAAKsH,EAAE3K,EAAE8O,EAAElE,EAAE5K,EAAE4K,EAAE5K,EAAEwS,GAAI,CAAC,IAAIlI,EAAE,EAAEA,EAAEH,EAAEsR,KAAKnf,OAAOgO,IAAIP,EAAE0R,KAAKpY,KAAK8G,EAAEsR,KAAKnR,GAAI,CAAC,EAAEhP,EAAE4T,EAAEwN,eAAe,SAAS9hB,EAAEiP,GAAG,IAAIE,EAAEzO,EAAEsR,MAAMa,YAAY5D,EAAEjP,GAAG,OAAQ,GAAGmP,EAAE,EAAEF,EAAEE,EAAE,EAAE,EAAEzO,EAAE4T,EAAEyN,kBAAkB,SAAS/hB,EAAEiP,EAAEE,GAAG,IAAIE,GAAE,EAAG,GAAGrP,EAAEiY,KAAK,IAAI,IAAI1I,EAAEvP,EAAEiY,KAAKxI,EAAEF,EAAE8C,WAAWjN,EAAEmK,EAAE4C,YAAYzC,EAAE,GAAGK,EAAE,EAAEA,EAAE3K,EAAE1D,OAAOqO,IAAI,CAAC,IAAIC,EAAE5K,EAAE2K,GAAG,GAAG,QAAQC,EAAEoD,IAAI,CAAC/D,GAAE,EAAG,IAAI,IAAIY,EAAE,EAAEA,EAAED,EAAEgD,IAAItR,OAAOuO,IAAI,IAAIP,EAAEM,EAAEgD,IAAI/C,IAAI,CAACP,EAAEM,EAAEgD,IAAI/C,KAAI,EAAG,IAAI,IAAIC,EAAET,EAAEO,EAAEgD,IAAI/C,IAAIG,EAAE,EAAEA,EAAEF,EAAEsC,KAAK9Q,OAAO0O,IAAI,GAAG,MAAMF,EAAEsC,KAAKpC,GAAG,CAAC,IAAI8D,EAAEC,EAAEjE,EAAEsC,KAAKpC,GAAG,IAAI+D,EAAEgE,WAAW,IAAIjE,EAAExT,EAAEsR,MAAMiB,cAAckB,EAAEgE,SAASlJ,IAAI,GAAG,GAAGiB,EAAEuC,YAAY,GAAG,GAAGvC,EAAEuC,MAAM,CAAC,IAAI6B,EAAE,KAAK,GAAG,GAAGH,EAAEpB,IAAI,CAAC,IAAIwB,EAAEJ,EAAEmE,SAASpE,GAAG,IAAInE,EAAE,EAAEA,EAAEwE,EAAE7S,OAAOqO,IAAIwE,EAAExE,GAAGyI,MAAMrJ,IAAImF,EAAEC,EAAExE,GAAI,MAAM,GAAG,GAAGoE,EAAEpB,IAAI,CAAC,IAAIuC,EAAE5U,EAAE4T,EAAEwN,eAAe7S,EAAEkF,EAAE0E,WAAWnB,EAAEhX,EAAE4T,EAAEwN,eAAe3S,EAAEgF,EAAE2E,WAAWxE,EAAEH,EAAE4E,OAAOzD,GAAGoC,EAAG,CAAC,GAAGpD,EAAE,CAAC,IAAIqD,EAAE,EAAE,OAAOrD,EAAEmE,MAAMnE,EAAEmE,KAAK,KAAKd,GAAGrD,EAAEmE,KAAK,IAAInE,EAAEoE,MAAMpE,EAAEoE,KAAK,KAAKf,GAAGrD,EAAEoE,KAAK,IAAIf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG3X,EAAEmc,OAAO9M,EAAE,CAAC,IAAIvB,EAAE9N,EAAEmc,KAAKE,OAAOnJ,QAAQjE,GAAG,IAAI,GAAGnB,EAAE,CAAC,IAAI6K,EAAE3Y,EAAEmc,KAAKG,KAAKxO,GAAG0O,OAAOtJ,QAAQ/D,GAAG,IAAI,GAAGwJ,EAAE,OAAO3Y,EAAEmc,KAAKG,KAAKxO,GAAGwL,KAAKX,EAAE,CAAC,CAAC,OAAO,CAAC,EAAEjY,EAAE4T,EAAE0N,WAAW,SAAShiB,EAAEiP,EAAEE,EAAEE,GAAG,IAAI,IAAIE,EAAEvP,EAAE0B,OAAOuN,EAAE,EAAEQ,EAAE,EAAEA,EAAEN,EAAEqD,KAAK9Q,OAAO+N,IAAI,GAAG,MAAMN,EAAEqD,KAAK/C,GAAG,CAAC,IAAIrK,EAAEsK,EAAEP,EAAEqD,KAAK/C,GAAG,IAAIC,EAAEyI,WAAW,IAAI/S,EAAE1E,EAAEsR,MAAMiB,cAAcvD,EAAEyI,SAASnY,EAAEiP,KAAK,GAAG,GAAGE,EAAEsD,MAAMzS,EAAEiP,GAAG,GAAGS,EAAEqD,IAAI/S,EAAEiP,GAAGjP,EAAEiP,GAAGS,EAAE0J,MAAMpZ,EAAEiP,GAAGS,EAAE2J,KAAKjU,QAAQ,GAAG,GAAG+J,EAAEsD,MAAM,IAAI,IAAI1C,EAAEL,EAAE4J,KAAKlU,GAAG4K,EAAE,EAAEA,EAAED,EAAErO,OAAOsO,IAAI,CAAC,IAAIC,EAAEF,EAAEC,GAAGE,EAAED,EAAEsK,MAAM7Y,OAAO,KAAKwO,EAAEX,GAAG,CAAC,IAAI,IAAIa,GAAE,EAAG8D,EAAE,EAAEC,EAAE,EAAEA,EAAEjE,EAAEiE,IAAI,CAAC,MAAM,GAAGnU,EAAEiP,EAAEiF,GAAG,EAAEC,KAAKD,IAAIjE,EAAEsK,MAAMpG,IAAInU,EAAEiP,EAAEiF,GAAG,EAAEC,MAAM/D,GAAE,EAAI,CAAC,GAAGA,EAAE,CAAe,IAAdpQ,EAAEiP,GAAGgB,EAAEuK,OAAWrG,EAAE,EAAEA,EAAEjE,EAAEgE,EAAEC,IAAInU,EAAEiP,EAAEkF,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,MAAM,GAAG,GAAGhF,EAAEsD,OAAO,GAAG/C,EAAEqD,IAAI,IAAI,IAAIuB,EAAE5T,EAAEsR,MAAMa,YAAYnD,EAAE8J,KAAKxZ,EAAEiP,IAAIsF,EAAE7E,EAAE8J,KAAKlF,EAAE,GAAGgB,EAAE5F,EAAE+J,MAAMlF,GAAGmD,EAAE,EAAEA,EAAEpC,EAAE5T,OAAOgW,IAAI,CAAC,IAAIC,EAAErC,EAAEoC,GAAG5J,EAAE6J,EAAEsC,MAAM,KAAKnM,EAAEpM,OAAO6N,GAAG,CAAC,IAAIa,GAAE,EAAG+D,EAAE,EAAEA,EAAErG,EAAEpM,OAAOyS,IAAI,CAAC,IAAIwE,EAAEjY,EAAEsR,MAAMa,YAAYnD,EAAE8J,KAAKxZ,EAAEiP,EAAE,EAAEkF,IAAI,IAAI,GAAGG,GAAG5E,EAAE8J,KAAKb,EAAE,IAAI7K,EAAEqG,GAAG,CAAC/D,GAAE,EAAG,KAAK,CAAC,CAAC,GAAGA,EAAE,CAAC,IAAIwI,EAAEjB,EAAEuC,mBAAmB,IAAIlK,EAAE,EAAEA,EAAE4I,EAAElX,OAAOsO,GAAG,EAAE4I,EAAE5I,GAAG4I,EAAE5I,EAAE,EAAG,CAAC,CAAC,MAAM,GAAG,GAAGb,EAAEsD,OAAO,GAAG/C,EAAEqD,IAAI,CAAC,IAAIrS,EAAE4T,EAAE2N,YAAYjiB,EAAE0P,EAAEiK,QAAQ1K,EAAES,EAAEiK,QAAQjY,QAAQ,SAAS,IAAIhB,EAAE4T,EAAE2N,YAAYjiB,EAAE0P,EAAEkK,QAAQ3K,GAAG,SAAS,IAAIvO,EAAE4T,EAAE2N,YAAYjiB,EAAE0P,EAAEmK,QAAQ5K,EAAES,EAAEkK,QAAQlY,QAAQ,SAAS,IAAIsX,EAAEtJ,EAAEoK,UAAU,IAAIpC,EAAE,EAAEA,EAAEsB,EAAEtX,OAAOgW,GAAG,EAAE,CAACpD,EAAE0E,EAAEtB,GAAG,IAAI7J,EAAEwB,EAAE2J,EAAEtB,EAAE,IAAIhX,EAAE4T,EAAE0N,WAAWhiB,EAAEiP,EAAEqF,EAAEzG,EAAEwB,EAAG,CAAC,CAAC,CAAC,EAAE3O,EAAE4T,EAAE2N,YAAY,SAASjiB,EAAEiP,EAAEE,GAAG,IAAI,IAAIE,EAAE,EAAEA,EAAEJ,EAAEvN,OAAO2N,IAAK,IAAI,GAAG3O,EAAEsR,MAAMiB,cAAchE,EAAEI,GAAGrP,EAAEmP,EAAEE,IAAI,OAAO,EAAG,OAAO,CAAE,EAAE3O,EAAE4T,EAAE4N,aAAa,SAASliB,EAAEiP,EAAEE,GAAG,IAAI,IAAIE,EAAE,CAACwR,KAAK,GAAGC,KAAK,IAAIvR,EAAE,EAAEE,EAAE,EAAEA,EAAER,EAAEvN,OAAO+N,IAAI,CAAC,IAAIrK,EAAE6J,EAAEQ,GAAG,IAAI,GAAGrK,EAAE,CAAC,IAAI,IAAIsK,EAAED,EAAER,EAAEvN,OAAO,IAAI,GAAGuN,EAAEQ,EAAE,GAAGR,EAAEQ,EAAE,GAAG,EAAEM,EAAErP,EAAE4T,EAAEsM,YAAY5gB,EAAEoF,GAAG4K,EAAE,EAAEA,EAAED,EAAE+Q,KAAKpf,OAAOsO,GAAG,EAAEX,EAAEyR,KAAKrY,KAAKsH,EAAE+Q,KAAK9Q,GAAGT,GAAGF,EAAEyR,KAAKrY,KAAKsH,EAAE+Q,KAAK9Q,EAAE,IAAsB,IAAlBb,GAAGE,EAAEwR,KAAKpY,KAAK0G,GAAOa,EAAE,EAAEA,EAAED,EAAE8Q,KAAKnf,OAAOsO,IAAIX,EAAEwR,KAAKpY,KAAKsH,EAAE8Q,KAAK7Q,IAAIb,GAAGE,EAAEwR,KAAKpY,KAAK,KAAK8G,GAAGvP,EAAEgc,KAAKC,OAAO7W,GAAGqK,EAAER,EAAEvN,OAAO,IAAI6N,GAAG7O,EAAE4T,EAAEyN,kBAAkB/hB,EAAEoF,EAAEsK,GAAI,CAAC,CAAC,OAAOL,CAAC,EAAE3O,EAAE4T,EAAEiE,EAAE,CAAC,EAAE7X,EAAE4T,EAAEiE,EAAEmJ,OAAO,SAAS1hB,EAAEU,EAAEuO,GAAGjP,EAAE6gB,KAAKpY,KAAK,KAAKzI,EAAE8gB,KAAKrY,KAAK/H,EAAEuO,EAAG,EAAEvO,EAAE4T,EAAEiE,EAAEoJ,OAAO,SAAS3hB,EAAEU,EAAEuO,GAAGjP,EAAE6gB,KAAKpY,KAAK,KAAKzI,EAAE8gB,KAAKrY,KAAK/H,EAAEuO,EAAG,EAAEvO,EAAE4T,EAAEiE,EAAE4J,QAAQ,SAASniB,EAAEU,EAAEuO,EAAEE,EAAEE,EAAEE,EAAEE,GAAGzP,EAAE6gB,KAAKpY,KAAK,KAAKzI,EAAE8gB,KAAKrY,KAAK/H,EAAEuO,EAAEE,EAAEE,EAAEE,EAAEE,EAAG,EAAE/O,EAAE4T,EAAEiE,EAAEqJ,SAAS,SAAS5hB,EAAEU,EAAEuO,EAAEE,EAAEE,GAAGrP,EAAE6gB,KAAKpY,KAAK,KAAKzI,EAAE8gB,KAAKrY,KAAK/H,EAAEuO,EAAEE,EAAEE,EAAG,EAAE3O,EAAE4T,EAAEiE,EAAEsJ,UAAU,SAAS7hB,GAAGA,EAAE6gB,KAAKpY,KAAK,IAAK,EAAE/H,EAAE4T,EAAEgN,SAAS,SAASthB,EAAEiP,EAAEE,EAAEE,EAAEE,GAAG,IAAI,IAAIE,EAAER,EAAEnN,MAAMsD,EAAE6J,EAAEiS,OAAOxR,EAAET,EAAEkS,UAAUpR,EAAEd,EAAE3B,MAAM0C,EAAEf,EAAEoS,KAAKpR,EAAE,EAAEC,EAAEjB,EAAEpB,EAAEuC,EAAEnB,EAAEnB,EAAEoG,EAAE,EAAEC,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAEe,EAAE,EAAEoC,EAAE,EAAEC,EAAE,EAAE7J,EAAE,EAAE6K,EAAE,EAAEC,EAAE,EAAEI,EAAE,CAAC7D,IAAI,EAAEC,KAAK,GAAGnF,EAAEjQ,EAAE0B,QAAQ,CAAChB,EAAEiT,IAAIuB,cAAclV,EAAEiQ,EAAE+I,GAAG,IAAInL,EAAEmL,EAAE7D,IAAI,GAAGlF,GAAG+I,EAAE5D,KAAK,MAAMvH,GAAG,OAAOA,EAAE4B,EAAE/N,OAAO,GAAG,IAAIgO,IAAIK,EAAEN,EAAE9C,QAAQ0C,EAAE+S,eAAehd,GAAGqK,EAAE/N,QAAQ,EAAE+N,EAAE/N,OAAO,EAAEgO,GAAE,OAAQ,GAAG,MAAM7B,GAAG,OAAOA,EAAG4B,EAAE/N,OAAO,GAAG,IAAIgO,IAAIK,EAAEN,EAAE9C,QAAQ0C,EAAE+S,eAAehd,GAAGqK,EAAE/N,QAAQ,EAAE+N,EAAE/N,OAAO,EAAEgO,GAAE,OAAS,GAAG,MAAM7B,EAAE4B,EAAE/N,OAAO,IAAIgO,IAAIK,EAAEN,EAAE9C,QAAQ0C,EAAE+S,cAAc1S,GAAE,GAAIM,GAAGtP,EAAE4T,EAAEiE,EAAEsJ,UAAUtS,GAAGa,GAAGX,EAAE4S,MAAM3hB,EAAE4T,EAAEiE,EAAEmJ,OAAOnS,EAAEW,EAAEE,GAAGJ,GAAE,OAAQ,GAAG,MAAMnC,EAAE,KAAK4B,EAAE/N,OAAO,GAAGwO,GAAGT,EAAE9C,QAAQyD,GAAGX,EAAE9C,QAAQjM,EAAE4T,EAAEiE,EAAEoJ,OAAOpS,EAAEW,EAAEE,QAAQ,GAAG,MAAMvC,GAAG,MAAMA,EAAE,IAAI,IAAI0K,EAAE9I,EAAE/N,OAAOuX,EAAE,MAAMpL,EAAEqL,EAAE,EAAEA,EAAEX,EAAEW,IAAI,CAAC,IAAIoJ,EAAE7S,EAAE9C,QAAQsM,EAAE/I,GAAGoS,EAAElS,GAAGkS,EAAErJ,GAAGA,EAAEvY,EAAE4T,EAAEiE,EAAEoJ,OAAOpS,EAAEW,EAAEE,EAAG,MAAM,GAAG,MAAMvC,GAAG,OAAOA,EAAE,CAAC0K,EAAE9I,EAAE/N,OAAO,IAAI,IAAI6gB,EAAE,EAAEA,EAAE,GAAGhK,GAAGrE,EAAEhE,EAAET,EAAE9C,QAAQwH,EAAE/D,EAAEX,EAAE9C,QAAQ2H,EAAEJ,EAAEzE,EAAE9C,QAAQ4H,EAAEJ,EAAE1E,EAAE9C,QAAQuD,EAAEoE,EAAE7E,EAAE9C,QAAQyD,EAAEmE,EAAE9E,EAAE9C,QAAQjM,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE2E,EAAEC,EAAEG,EAAEC,EAAErE,EAAEE,GAAGmS,GAAG,EAAE,OAAO1U,IAAIqC,GAAGT,EAAE9C,QAAQyD,GAAGX,EAAE9C,QAAQjM,EAAE4T,EAAEiE,EAAEoJ,OAAOpS,EAAEW,EAAEE,GAAI,KAAM,CAAC,GAAG,OAAOvC,EAAE,MAAM,GAAG,SAASA,GAAG,SAASA,GAAG,SAASA,GAAG,SAASA,EAAE,SAASA,IAAIsG,EAAE/D,EAAEkE,GAAGJ,EAAEhE,EAAET,EAAE9C,SAAS8C,EAAE9C,QAAQiM,EAAErE,EAAEJ,EAAE1E,EAAE9C,QAAQ+K,EAAEnD,EAAEzG,EAAEsC,EAAEF,GAAGyH,GAAGrC,GAAGqD,EAAErE,EAAE7E,EAAE9C,SAAS8C,EAAE9C,SAAS8C,EAAE9C,SAAS8C,EAAE9C,QAAQjM,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE2E,EAAEC,EAAEG,EAAEC,EAAEoE,EAAEC,GAAGlY,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE+F,EAAEoC,EAAEC,EAAE7J,EAAEoC,EAAEE,IAAI,SAASvC,IAAIqG,EAAEhE,EAAET,EAAE9C,QAAQwH,EAAE/D,EAAEX,EAAE9C,QAAQ2H,EAAEJ,EAAEzE,EAAE9C,QAAQ4H,EAAEJ,EAAE1E,EAAE9C,QAAQgM,EAAErE,EAAE7E,EAAE9C,QAAQiM,EAAErE,EAAE9E,EAAE9C,QAAQ2I,EAAEqD,EAAElJ,EAAE9C,QAAQ+K,EAAEkB,EAAEnJ,EAAE9C,QAAQgL,EAAErC,EAAE7F,EAAE9C,QAAQmB,EAAE4J,EAAEjI,EAAE9C,QAAQuD,EAAEyH,EAAElI,EAAE9C,QAAQyD,EAAEtC,EAAE2B,EAAE9C,QAAQ8C,EAAE9C,QAAQjM,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE2E,EAAEC,EAAEG,EAAEC,EAAEoE,EAAEC,GAAGlY,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE+F,EAAEoC,EAAEC,EAAE7J,EAAEoC,EAAEE,IAAI,SAASvC,IAAIqG,EAAEhE,EAAET,EAAE9C,QAAQwH,EAAE/D,EAAEX,EAAE9C,QAAQ2H,EAAEJ,EAAEzE,EAAE9C,QAAQiM,EAAErE,EAAEJ,EAAE1E,EAAE9C,QAAQ+K,EAAEnD,EAAEoD,GAAGrC,GAAGqD,EAAErE,EAAE7E,EAAE9C,SAAS8C,EAAE9C,SAAS8C,EAAE9C,QAAQmB,EAAE4J,EAAEjI,EAAE9C,QAAQuD,EAAEyH,EAAElI,EAAE9C,QAAQjM,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE2E,EAAEC,EAAEG,EAAEC,EAAEoE,EAAEC,GAAGlY,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE+F,EAAEoC,EAAEC,EAAE7J,EAAEoC,EAAEE,IAAI,SAASvC,IAAIqG,EAAEhE,EAAET,EAAE9C,QAAQwH,EAAE/D,EAAEX,EAAE9C,QAAQ2H,EAAEJ,EAAEzE,EAAE9C,QAAQ4H,EAAEJ,EAAE1E,EAAE9C,QAAQgM,EAAErE,EAAE7E,EAAE9C,QAAQiM,EAAErE,EAAE9E,EAAE9C,QAAQ2I,EAAEqD,EAAElJ,EAAE9C,QAAQ+K,EAAEkB,EAAEnJ,EAAE9C,QAAQgL,EAAErC,EAAE7F,EAAE9C,QAAQmB,EAAE4J,EAAEjI,EAAE9C,QAAQ7C,KAAK0Y,IAAI7K,EAAEzH,GAAGpG,KAAK0Y,IAAI1U,EAAEsC,GAAGF,EAAEyH,EAAElI,EAAE9C,QAAQyD,EAAEtC,EAAE2B,EAAE9C,QAAQjM,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE2E,EAAEC,EAAEG,EAAEC,EAAEoE,EAAEC,GAAGlY,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE+F,EAAEoC,EAAEC,EAAE7J,EAAEoC,EAAEE,SAAS,GAAG,OAAOvC,EAAE,CAAC,GAAG4B,EAAE/N,OAAO,IAAIgO,IAAIK,EAAEN,EAAE9C,QAAQwC,EAAEiT,cAAc1S,GAAE,GAAI,GAAGD,EAAE/N,OAAO,CAAC,IAAI+gB,EAAEhT,EAAE9C,QAAQ+V,EAAEjT,EAAE9C,QAAQgW,EAAElT,EAAE9C,QAAQiW,EAAEnT,EAAE9C,QAAQkW,EAAEniB,EAAEiT,IAAIsB,UAAU9F,EAAEwT,GAAGG,EAAEpiB,EAAEiT,IAAIsB,UAAU9F,EAAEyT,GAAGliB,EAAE4T,EAAEgN,SAASnS,EAAE4E,YAAY8O,GAAG5T,EAAEE,EAAEE,EAAEE,GAAGN,EAAEpB,EAAE4U,EAAExT,EAAEnB,EAAE4U,EAAEhiB,EAAE4T,EAAEgN,SAASnS,EAAE4E,YAAY+O,GAAG7T,EAAEE,EAAEE,EAAEE,EAAG,CAACS,IAAItP,EAAE4T,EAAEiE,EAAEsJ,UAAUtS,GAAGS,GAAE,EAAI,MAAM,GAAG,OAAOnC,GAAG,OAAOA,EAAG4B,EAAE/N,OAAO,GAAG,IAAIgO,IAAIK,EAAEN,EAAE9C,QAAQ0C,EAAE+S,eAAehd,GAAGqK,EAAE/N,QAAQ,EAAE+N,EAAE/N,OAAO,EAAEgO,GAAE,EAAGO,GAAG7K,EAAE,GAAG,OAAQ,GAAG,OAAOyI,EAAE4B,EAAE/N,OAAO,IAAIgO,IAAIK,EAAEN,EAAE9C,QAAQ0C,EAAE+S,cAAc1S,GAAE,GAAIU,GAAGX,EAAE4S,MAAMnS,GAAGT,EAAE4S,MAAMrS,GAAGtP,EAAE4T,EAAEiE,EAAEsJ,UAAUtS,GAAG7O,EAAE4T,EAAEiE,EAAEmJ,OAAOnS,EAAEW,EAAEE,GAAGJ,GAAE,OAAQ,GAAG,OAAOnC,EAAE4B,EAAE/N,OAAO,IAAIgO,IAAIK,EAAEN,EAAE9C,QAAQ0C,EAAE+S,cAAc1S,GAAE,GAAIQ,GAAGT,EAAE4S,MAAMrS,GAAGtP,EAAE4T,EAAEiE,EAAEsJ,UAAUtS,GAAG7O,EAAE4T,EAAEiE,EAAEmJ,OAAOnS,EAAEW,EAAEE,GAAGJ,GAAE,OAAQ,GAAG,OAAOnC,EAAE,CAAC,KAAK4B,EAAE/N,OAAO,GAAGwO,GAAGT,EAAE9C,QAAQyD,GAAGX,EAAE9C,QAAQjM,EAAE4T,EAAEiE,EAAEoJ,OAAOpS,EAAEW,EAAEE,GAAG8D,EAAEhE,EAAET,EAAE9C,QAAQwH,EAAE/D,EAAEX,EAAE9C,QAAQ2H,EAAEJ,EAAEzE,EAAE9C,QAAQ4H,EAAEJ,EAAE1E,EAAE9C,QAAQuD,EAAEoE,EAAE7E,EAAE9C,QAAQyD,EAAEmE,EAAE9E,EAAE9C,QAAQjM,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE2E,EAAEC,EAAEG,EAAEC,EAAErE,EAAEE,EAAG,MAAM,GAAG,OAAOvC,EAAE,IAAI4B,EAAE/N,OAAO,IAAIwO,GAAGT,EAAE9C,SAAS8C,EAAE/N,OAAO,GAAGwS,EAAEhE,EAAEiE,EAAE/D,EAAEX,EAAE9C,QAAQuD,EAAEoE,EAAEJ,EAAEzE,EAAE9C,QAAQyD,GAAGmE,EAAEJ,EAAE1E,EAAE9C,SAAS8C,EAAE9C,QAAQjM,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE2E,EAAEC,EAAEG,EAAEC,EAAErE,EAAEE,QAAQ,GAAG,OAAOvC,EAAE,IAAI4B,EAAE/N,OAAO,IAAI0O,GAAGX,EAAE9C,SAAS8C,EAAE/N,OAAO,GAAGyS,EAAE/D,EAAEkE,GAAGJ,EAAEhE,EAAET,EAAE9C,SAAS8C,EAAE9C,QAAQ4H,EAAEJ,EAAE1E,EAAE9C,QAAQuD,EAAEoE,EAAE7E,EAAE9C,QAAQyD,EAAEmE,EAAE7T,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE2E,EAAEC,EAAEG,EAAEC,EAAErE,EAAEE,QAAQ,GAAG,OAAOvC,GAAG,OAAOA,EAAE,CAAC,IAAIkV,EAAE,OAAOlV,EAAEwB,EAAEF,EAAE,GAAG,GAAGM,EAAE/N,OAAOlC,QAAQsW,MAAM,0BAA2B,CAAC,IAAIkN,EAAEvT,EAAE4S,MAAMY,EAAEF,EAAElO,MAAMmO,EAAED,EAAEjO,MAAM7F,EAAEpB,EAAEqC,EAAEjB,EAAEnB,EAAEsC,EAAEnB,EAAEiS,OAAO9b,EAAE6J,EAAEkS,UAAUzR,EAAET,EAAE3B,MAAMyC,EAAEd,EAAEoS,KAAKrR,EAAEtP,EAAE4T,EAAEgN,SAAS2B,EAAEhU,EAAEE,EAAEE,EAAEE,GAAGW,EAAEjB,EAAEpB,EAAEuC,EAAEnB,EAAEnB,EAAE1I,EAAE6J,EAAEiS,OAAOxR,EAAET,EAAEkS,UAAUpR,EAAEd,EAAE3B,MAAM0C,EAAEf,EAAEoS,IAAK,CAAC,MAAM,GAAG,OAAOxT,GAAG,OAAOA,EAAE,CAAC,IAAIqV,EAAEzT,EAAE/N,OAAOyhB,GAAGZ,EAAE,EAAE,OAAO1U,GAAG,IAAI0U,GAAGW,GAAG3K,GAAG,EAAE2K,GAAGX,EAAEhK,GAAG4K,GAAGhP,EAAE/D,EAAEkE,GAAGJ,EAAEhE,EAAET,EAAE9C,SAAS8C,EAAE9C,QAAQyD,GAAGmE,EAAEJ,EAAE1E,EAAE9C,SAAS8C,EAAE9C,QAAQ4L,EAAEgK,GAAG,GAAGrS,EAAEoE,EAAE7E,EAAE9C,QAAQ4V,KAAKrS,EAAEoE,EAAE6O,GAAE,IAAKjP,EAAEhE,EAAEiE,EAAE/D,EAAEX,EAAE9C,QAAQ2H,EAAEJ,EAAEzE,EAAE9C,QAAQ4H,EAAEJ,EAAE1E,EAAE9C,QAAQuD,EAAEoE,EAAE7E,EAAE9C,QAAQ4L,EAAEgK,GAAG,GAAGnS,EAAEmE,EAAE9E,EAAE9C,QAAQ4V,KAAKnS,EAAEmE,EAAE4O,GAAE,GAAIziB,EAAE4T,EAAEiE,EAAE4J,QAAQ5S,EAAE2E,EAAEC,EAAEG,EAAEC,EAAErE,EAAEE,GAAGmS,GAAG,CAAE,KAAM,CAAC,GAAG,MAAM1U,EAAE,IAAIuV,OAAO,GAAG,MAAM5jB,QAAQsW,MAAM,sBAAsBjI,EAAE7N,GAAG6N,EAAE4B,EAAEhH,KAAKoF,EAAG,CAAC,CAAC,CAACoB,EAAEpB,EAAEqC,EAAEjB,EAAEnB,EAAEsC,EAAEnB,EAAEiS,OAAO9b,EAAE6J,EAAEkS,UAAUzR,EAAET,EAAE3B,MAAMyC,EAAEd,EAAEoS,KAAKrR,CAAE,EAAE,IAAIf,EAAEvO,EAAEyO,EAAE,CAACkU,KAAKpU,GAAG,OAAOjP,EAAEqjB,KAAKpU,EAAEjP,EAAEuT,QAAQpE,EAAE7Q,OAAOqL,eAAe3J,EAAE,aAAa,CAACX,OAAM,IAAKW,CAAC,CAAzomC,CAA2omC,CAAC,GAAGqjB,IAAI,EAShumC,WAA2B,OAAO,SAASrjB,GAAG,IAAIU,EAAEgO,WAAWW,EAAEiU,YAAYrU,EAAEsU,YAAYpU,EAAE,IAAIzO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI0E,EAAE,IAAI1E,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI6O,EAAE,IAAI7O,EAAE,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAKqP,EAAE,SAAS/P,EAAEU,GAAG,IAAI,IAAIyO,EAAE,IAAIE,EAAE,IAAIjK,EAAE,EAAEA,EAAE,KAAKA,EAAE+J,EAAE/J,GAAG1E,GAAG,GAAGV,EAAEoF,EAAE,GAAG,IAAImK,EAAE,IAAIN,EAAEE,EAAE,KAAK,IAAI/J,EAAE,EAAEA,EAAE,KAAKA,EAAE,IAAI,IAAI2K,EAAEZ,EAAE/J,GAAG2K,EAAEZ,EAAE/J,EAAE,KAAK2K,EAAER,EAAEQ,GAAGA,EAAEZ,EAAE/J,IAAI,EAAEA,EAAE,MAAO,CAAC+J,EAAEI,EAAE,EAAEU,EAAEF,EAAEZ,EAAE,GAAGiB,EAAEH,EAAE,GAAGR,EAAEQ,EAAE,GAAGG,EAAE,IAAI,IAAIX,EAAE,KAAK,GAAG,IAAI,IAAIS,EAAEH,EAAE3K,EAAE,GAAG,GAAG8O,EAAE,IAAI7E,EAAE,OAAOkF,EAAE,EAAEA,EAAE,QAAQA,EAAE,CAAC,IAAI7E,GAAG,MAAM6E,KAAK,GAAG,MAAMA,IAAI,EAAE7E,GAAG,OAAOA,GAAG,MAAMA,KAAK,GAAG,MAAMA,IAAI,MAAM,GAAG,KAAKA,IAAI,EAAEwE,EAAEK,KAAK,MAAM7E,KAAK,GAAG,IAAIA,IAAI,KAAK,CAAE,CAAC,IAAIwJ,EAAE,SAASlZ,EAAEU,EAAEuO,GAAG,IAAI,IAAIE,EAAEnP,EAAE0B,OAAO0D,EAAE,EAAEmK,EAAE,IAAIF,EAAE3O,GAAG0E,EAAE+J,IAAI/J,IAAImK,EAAEvP,EAAEoF,GAAG,GAAG,IAAI2K,EAAEE,EAAE,IAAIZ,EAAE3O,GAAG,IAAI0E,EAAE,EAAEA,EAAE1E,IAAI0E,EAAE6K,EAAE7K,GAAG6K,EAAE7K,EAAE,GAAGmK,EAAEnK,EAAE,IAAI,EAAE,GAAG6J,EAAE,CAACc,EAAE,IAAIV,EAAE,GAAG3O,GAAG,IAAI0P,EAAE,GAAG1P,EAAE,IAAI0E,EAAE,EAAEA,EAAE+J,IAAI/J,EAAE,GAAGpF,EAAEoF,GAAG,IAAI,IAAIqK,EAAErK,GAAG,EAAEpF,EAAEoF,GAAG8K,EAAExP,EAAEV,EAAEoF,GAAGmP,EAAEtE,EAAEjQ,EAAEoF,GAAG,MAAM8K,EAAER,EAAE6E,GAAG,GAAGrE,GAAG,EAAEqE,GAAG7E,IAAI6E,EAAExE,EAAEmE,EAAEK,KAAKnE,GAAGX,CAAE,MAAM,IAAIM,EAAE,IAAIV,EAAEF,GAAG/J,EAAE,EAAEA,EAAE+J,IAAI/J,EAAEpF,EAAEoF,KAAK2K,EAAE3K,GAAG8O,EAAEjE,EAAEjQ,EAAEoF,GAAG,QAAQ,GAAGpF,EAAEoF,IAAI,OAAO2K,CAAC,EAAEC,EAAE,IAAItP,EAAE,KAAK,IAAI6T,EAAE,EAAEA,EAAE,MAAMA,EAAEvE,EAAEuE,GAAG,EAAE,IAAIA,EAAE,IAAIA,EAAE,MAAMA,EAAEvE,EAAEuE,GAAG,EAAE,IAAIA,EAAE,IAAIA,EAAE,MAAMA,EAAEvE,EAAEuE,GAAG,EAAE,IAAIA,EAAE,IAAIA,EAAE,MAAMA,EAAEvE,EAAEuE,GAAG,EAAE,IAAImD,EAAE,IAAIhX,EAAE,IAAI,IAAI6T,EAAE,EAAEA,EAAE,KAAKA,EAAEmD,EAAEnD,GAAG,EAAE,IAAIoD,EAAEuB,EAAElJ,EAAE,EAAE,GAAGmE,EAAE+E,EAAExB,EAAE,EAAE,GAAG5J,EAAE,SAAS9N,GAAG,IAAI,IAAIU,EAAEV,EAAE,GAAGqP,EAAE,EAAEA,EAAErP,EAAE0B,SAAS2N,EAAErP,EAAEqP,GAAG3O,IAAIA,EAAEV,EAAEqP,IAAI,OAAO3O,CAAC,EAAEmiB,EAAE,SAAS7iB,EAAEU,EAAE2O,GAAG,IAAIJ,EAAEvO,EAAE,EAAE,EAAE,OAAQV,EAAEiP,GAAGjP,EAAEiP,EAAE,IAAI,KAAK,EAAEvO,GAAG2O,CAAC,EAAEiF,EAAE,SAAStU,EAAEU,GAAG,IAAI2O,EAAE3O,EAAE,EAAE,EAAE,OAAQV,EAAEqP,GAAGrP,EAAEqP,EAAE,IAAI,EAAErP,EAAEqP,EAAE,IAAI,MAAM,EAAE3O,EAAE,EAAE+hB,EAAE,CAAC,iBAAiB,qBAAqB,yBAAyB,mBAAmB,kBAAkB,oBAAoB,CAAC,cAAc,qBAAqB,uBAAuB,8BAA8B,oBAAoB,mBAAmB,oBAAoBF,EAAE,SAASviB,EAAEU,EAAE2O,GAAG,IAAIJ,EAAE,IAAI7P,MAAMsB,GAAG+hB,EAAEziB,IAAI,GAAGiP,EAAEtG,KAAK3I,EAAEZ,MAAMokB,mBAAmBpkB,MAAMokB,kBAAkBvU,EAAEsT,IAAIlT,EAAE,MAAMJ,EAAE,OAAOA,CAAC,EAAEqT,EAAE,SAAStiB,EAAE+P,EAAEE,GAAG,IAAIR,EAAEzP,EAAE0B,OAAO,IAAI+N,GAAGQ,IAAIA,EAAEC,GAAGT,EAAE,EAAE,OAAOM,GAAG,IAAIrP,EAAE,GAAG,IAAIwT,GAAGnE,GAAGE,EAAEsE,GAAGtE,GAAGA,EAAE7K,EAAE6K,IAAIA,EAAE,CAAC,GAAGF,IAAIA,EAAE,IAAIrP,EAAE,EAAE+O,IAAI,IAAIC,EAAEM,EAAE,SAAShQ,GAAG,IAAIqP,EAAEU,EAAErO,OAAO,GAAG1B,EAAEqP,EAAE,CAAC,IAAIJ,EAAE,IAAIvO,EAAEoJ,KAAK2Z,IAAI,EAAEpU,EAAErP,IAAIiP,EAAErI,IAAImJ,GAAGA,EAAEd,CAAE,CAAC,EAAEyI,EAAEzH,EAAEF,GAAG,EAAE0S,EAAExS,EAAEkE,GAAG,EAAEmO,EAAErS,EAAE0H,GAAG,EAAEoL,EAAE9S,EAAEC,EAAErC,EAAEoC,EAAED,EAAE0T,EAAEzT,EAAEyH,EAAEiL,EAAE1S,EAAEZ,EAAE4T,EAAE,EAAExT,EAAE,EAAE,CAAC,IAAIsT,EAAE,CAAC9S,EAAEF,EAAE2H,EAAEmL,EAAE7iB,EAAEyiB,EAAE,GAAG,IAAInN,EAAEuN,EAAE7iB,EAAEyiB,EAAE,EAAE,GAAG,GAAGA,GAAG,GAAGnN,EAAE,CAAC,IAAI4N,EAAEljB,GAAGiZ,IAAIvJ,EAAE+S,GAAG,EAAE,IAAI,EAAE/S,GAAG,GAAG,GAAG,GAAG1P,EAAEiZ,EAAE,IAAI,EAAEL,EAAEK,EAAEiK,EAAE,GAAGtK,EAAEnJ,EAAE,CAAC8E,GAAGgO,EAAE,GAAG,KAAK,CAACrO,GAAGlE,EAAEsS,EAAEY,GAAGnT,EAAEnJ,IAAI5G,EAAE2jB,SAAS1K,EAAEL,GAAG0J,GAAGrS,EAAE0H,EAAE2K,GAAGY,EAAEjT,EAAEkE,EAAEsO,EAAE,EAAE7J,EAAE,QAAQ,CAAC,GAAG,GAAGtD,EAAEyN,EAAEpL,EAAE9J,EAAEsG,EAAEuP,EAAE,EAAEf,EAAE,OAAO,GAAG,GAAGrN,EAAE,CAAC,IAAIsO,EAAEf,EAAE7iB,EAAEyiB,EAAE,IAAI,IAAIoB,EAAEhB,EAAE7iB,EAAEyiB,EAAE,GAAG,IAAI,EAAEzJ,EAAE4K,EAAEf,EAAE7iB,EAAEyiB,EAAE,EAAE,IAAI,EAAEA,GAAG,GAAG,IAAI,IAAI9J,EAAE,IAAIjY,EAAEsY,GAAGT,EAAE,IAAI7X,EAAE,IAAIojB,EAAE,EAAEA,EAAED,IAAIC,EAAEvL,EAAEhJ,EAAEuU,IAAIjB,EAAE7iB,EAAEyiB,EAAE,EAAEqB,EAAE,GAAGrB,GAAG,EAAEoB,EAAE,IAAIjB,EAAE9U,EAAEyK,GAAGmK,GAAG,GAAGE,GAAG,EAAEmB,EAAE7K,EAAEX,EAAEqK,EAAE,GAAG,IAAIkB,EAAE,EAAEA,EAAE9K,GAAG,CAAC,IAAIC,EAAE+K,EAAED,EAAElB,EAAE7iB,EAAEyiB,EAAEC,IAAI,GAAGD,GAAG,GAAGuB,GAAG/K,EAAE+K,IAAI,GAAG,GAAGrL,EAAEmL,KAAK7K,MAAO,CAAC,IAAIgL,EAAE,EAAEd,EAAE,EAAE,IAAI,IAAIlK,GAAGkK,EAAE,EAAEN,EAAE7iB,EAAEyiB,EAAE,GAAGA,GAAG,EAAEwB,EAAEtL,EAAEmL,EAAE,IAAI,IAAI7K,GAAGkK,EAAE,EAAEN,EAAE7iB,EAAEyiB,EAAE,GAAGA,GAAG,GAAG,IAAIxJ,IAAIkK,EAAE,GAAGN,EAAE7iB,EAAEyiB,EAAE,KAAKA,GAAG,GAAGU,KAAKxK,EAAEmL,KAAKG,CAAE,CAAC,CAAC,IAAIC,EAAEvL,EAAEgL,SAAS,EAAEC,GAAGd,EAAEnK,EAAEgL,SAASC,GAAGF,EAAE5V,EAAEoW,GAAGvB,EAAE7U,EAAEgV,GAAGC,EAAE7J,EAAEgL,EAAER,EAAE,GAAG7V,EAAEqL,EAAE4J,EAAEH,EAAE,EAAG,MAAMJ,EAAE,GAAG,GAAGE,EAAEQ,EAAE,CAAC1O,GAAGgO,EAAE,GAAG,KAAK,CAAC,CAACrO,GAAGlE,EAAEsS,EAAE,QAAQ,IAAI,IAAIU,GAAG,GAAGU,GAAG,EAAES,GAAG,GAAGxB,GAAG,EAAEyB,EAAE3B,GAAG2B,EAAE3B,EAAE,CAAC,IAAI4B,GAAGJ,EAAElB,EAAEzO,EAAEtU,EAAEyiB,GAAGO,MAAM,EAAE,IAAIP,GAAG,GAAGwB,GAAGhB,EAAE,CAAC1O,GAAGgO,EAAE,GAAG,KAAK,CAAC,GAAG0B,GAAG1B,EAAE,GAAG8B,EAAE,IAAItU,EAAEuS,KAAK+B,MAAO,CAAC,GAAG,KAAKA,EAAE,CAACD,EAAE3B,EAAEM,EAAE,KAAK,KAAK,CAAC,IAAIuB,EAAED,EAAE,IAAI,GAAGA,EAAE,IAAI,CAAC,IAAIE,GAAGpV,EAAE2U,EAAEO,EAAE,KAAKC,EAAEzB,EAAE7iB,EAAEyiB,GAAG,GAAG8B,IAAI,GAAGnU,EAAE0T,GAAGrB,GAAG8B,EAAG,CAAC,IAAIC,GAAG3W,EAAEyG,EAAEtU,EAAEyiB,GAAG0B,GAAGM,GAAGD,KAAK,EAAyE,GAAvEA,IAAIjC,EAAE,GAAGE,GAAG,GAAG+B,GAAG1B,EAAE5S,EAAEuU,IAAOA,GAAG,IAAGF,GAAGnf,EAAEqf,IAAI3B,GAAGxO,EAAEtU,EAAEyiB,IAAI,GAAG8B,IAAI,EAAE9B,GAAG8B,IAAO9B,EAAEQ,EAAE,CAAC1O,GAAGgO,EAAE,GAAG,KAAK,CAACrO,GAAGlE,EAAEsS,EAAE,QAAQ,IAAI,IAAIoC,GAAGpC,EAAEgC,EAAEhC,EAAEoC,GAAGpC,GAAG,EAAEvS,EAAEuS,GAAGvS,EAAEuS,EAAEQ,GAAG/S,EAAEuS,EAAE,GAAGvS,EAAEuS,EAAE,EAAEQ,GAAG/S,EAAEuS,EAAE,GAAGvS,EAAEuS,EAAE,EAAEQ,GAAG/S,EAAEuS,EAAE,GAAGvS,EAAEuS,EAAE,EAAEQ,GAAGR,EAAEoC,EAAG,CAAC,CAACzU,EAAEC,EAAE6S,EAAE9S,EAAEkE,EAAEiQ,EAAEnU,EAAE0H,EAAE2K,EAAES,IAAIrL,EAAE,EAAEzH,EAAEyH,EAAEgM,EAAEzT,EAAED,EAAEnC,EAAEoC,EAAEZ,EAAEsT,EAAG,QAAQjL,GAAG,OAAO4K,GAAGvS,EAAErO,OAAOqO,EAAE,SAAS/P,EAAEmP,EAAE/J,IAAI,MAAM+J,GAAGA,EAAE,KAAKA,EAAE,IAAI,MAAM/J,GAAGA,EAAEpF,EAAE0B,UAAU0D,EAAEpF,EAAE0B,QAAQ,IAAI6N,EAAE,IAAIvP,aAAaqP,EAAEA,EAAErP,aAAaiP,EAAEA,EAAEvO,GAAG0E,EAAE+J,GAAG,OAAOI,EAAE3I,IAAI5G,EAAE2jB,SAASxU,EAAE/J,IAAImK,CAAC,CAA7J,CAA+JQ,EAAE,EAAEuS,EAAE,EAAES,EAAE,IAAIriB,EAAE,GAAOmN,EAAE,oBAAoB0D,aAAa,IAAIA,YAAY,IAAI1D,EAAE4D,OAAOsR,EAAE,CAAC4B,QAAO,GAAO,CAAC,MAAM3kB,GAAG,CAAC,OAAOA,EAAE4kB,gBAAgB,SAAS5kB,GAAG,IAAIU,EAAE,IAAImR,SAAS7R,GAAGqP,EAAE,EAAE,SAASJ,IAAI,IAAIjP,EAAEU,EAAEqQ,UAAU1B,GAAG,OAAOA,GAAG,EAAErP,CAAC,CAAC,SAASmP,IAAI,IAAInP,EAAEU,EAAEuQ,UAAU5B,GAAG,OAAOA,GAAG,EAAErP,CAAC,CAAC,SAASoF,EAAEpF,GAAG0X,EAAEmN,UAAUlN,EAAE3X,GAAG2X,GAAG,CAAE,CAAC,SAASpI,EAAEvP,GAAG0X,EAAEoN,UAAUnN,EAAE3X,GAAG2X,GAAG,CAAE,CAAC,IAAI,IAAI5H,EAAE,CAACgV,UAAU5V,IAAI6V,OAAO7V,IAAIzN,OAAOyN,IAAI8V,UAAUhW,IAAIiW,SAASjW,IAAIkW,cAAchW,IAAIiW,aAAanW,IAAIoW,aAAapW,IAAIqW,WAAWnW,IAAIoW,WAAWpW,IAAIqW,eAAerW,IAAIsW,WAAWtW,IAAIuW,WAAWvW,KAAKc,EAAE,EAAEnG,KAAK6b,IAAI,EAAE1V,IAAIF,EAAEkV,WAAWhV,IAAIA,IAAI,IAAI,IAAIG,EAAE,GAAGtG,KAAK6b,IAAI,EAAE1V,GAAGR,EAAE,GAAGM,EAAEkV,UAAU7U,EAAEF,EAAE,GAAGgE,EAAE,GAAGK,EAAE,EAAEA,EAAExE,EAAEkV,UAAU1Q,IAAIL,EAAEzL,KAAK,CAAC2K,IAAIjE,IAAIgB,OAAOhB,IAAIyW,WAAWzW,IAAI0W,WAAW1W,IAAI2W,aAAa3W,MAAMe,GAAG,GAAG,IAAIR,EAAEwJ,EAAE,IAAIxK,WAAW,GAAG,GAAGwF,EAAExS,OAAOwS,EAAE6R,QAAQ,SAAS/lB,EAAEU,GAAG,OAAOV,EAAEU,EAAEmlB,WAAW,CAAC,GAAG,IAAI7V,EAAEkJ,EAAE7K,OAAOqJ,EAAE,IAAI7F,SAAS7B,GAAG2H,EAAE,EAAE,OAAOpI,EAAEQ,EAAEiV,QAAQ5f,EAAE2K,EAAEkV,WAAW7f,EAAEgL,GAAGhL,EAAE6K,GAAG7K,EAAEqK,GAAGyE,EAAErF,SAAS,SAAS7O,GAAGuP,EAAEvP,EAAEoT,KAAK7D,EAAEvP,EAAE8lB,cAAcvW,EAAEW,GAAGX,EAAEvP,EAAE6lB,YAAY7lB,EAAEgmB,UAAU9V,GAAGA,GAAGlQ,EAAE6lB,YAAY,GAAG,IAAI3V,GAAG,EAAEA,EAAE,EAAG,IAAIgE,EAAErF,SAAS,SAASnO,GAAG,IAAI2O,EAAEJ,EAAEjP,EAAEimB,MAAMvlB,EAAEyP,OAAOzP,EAAEyP,OAAOzP,EAAEklB,YAAY,GAAGllB,EAAEklB,YAAYllB,EAAEmlB,WAAW,CAAC,IAAI1W,EAAE,IAAIT,WAAWhO,EAAEmlB,YAAYxW,EAAE,IAAIX,WAAWO,EAAE,GAAGqT,EAAEjT,EAAEF,EAAG,MAAMA,EAAE,IAAIT,WAAWO,GAAGiK,EAAEtS,IAAIuI,EAAEzO,EAAEslB,WAAW,IAAI5gB,EAAE,GAAG8K,EAAExP,EAAEslB,UAAUtlB,EAAEmlB,YAAY,GAAG,IAAIzgB,EAAE,EAAE8K,EAAE,GAAGgJ,EAAEtS,IAAI,IAAI8H,WAAWtJ,GAAGiJ,OAAO3N,EAAEslB,UAAUtlB,EAAEmlB,YAAYnW,EAAEQ,EAAE9K,CAAE,IAAI4K,EAAEiW,MAAM,EAAEvW,EAAE,EAAEpR,OAAOqL,eAAe3J,EAAE,aAAa,CAACX,OAAM,IAAKW,CAAC,CAA7zJ,CAA+zJ,CAAC,GAAG4kB,eAAe,EAOp3J,SAAuBvB,EAAM6C,GAC3B,MAAMC,EAAgB,CACpBlD,EAAG,EACHJ,EAAG,EACHqB,EAAG,EACHlL,EAAG,EACHqL,EAAG,GAIC+B,EAAqB,CAAC,EAAI,iBAAiB,EAAI,8QAA8Q,EAAI,+LAA+L,EAAI,kBAAkB,EAAI,uxCAE1hBC,EAAU,EACdC,EAAW,EACXC,EAAU,EACVC,EAAiB,EACjBC,EAAkB,GAClBC,EAAiB,GAEnB,IAAIC,EACJ,SAASC,EAAmBC,GAC1B,IAAKF,EAAgB,CACnB,MAAMjP,EAAI,CACRoL,EAAGwD,EACHzD,EAAGwD,EACH1D,EAAG4D,EACHvN,EAAGyN,EACHnS,EAAGoS,EACHnE,EAAGiE,GAELG,EAAiB,IAAI1gB,IACrB,IAAK,IAAI3F,KAAQ8lB,EAAoB,CACnC,IAAIU,EAAW,EACfV,EAAmB9lB,GAAMymB,MAAM,KAAKlY,SAAQmY,IAC1C,IAAKC,EAAMC,GAAQF,EAAMD,MAAM,KAC/BE,EAAOE,SAASF,EAAK,IACrBC,EAAOA,EAAOC,SAASD,EAAM,IAAM,EACnCP,EAAe/f,IAAIkgB,GAAYG,EAAMvP,EAAEpX,IACvC,IAAK,IAAI8E,EAAI8hB,EAAM9hB,KACjBuhB,EAAe/f,MAAMkgB,EAAUpP,EAAEpX,GACnC,GAEJ,CACF,CACA,OAAOqmB,EAAehgB,IAAIkgB,IAAOH,CACnC,CAEA,MAAMU,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EACrCC,EAAkB,CAAC,KAAM,OAAQ,OAAQ,OAAQ,QAEvD,SAASC,EAAmB7nB,GAG1B,MAAM8nB,EAAe,IAAIhZ,WAAW9O,EAAI8B,QACxC,IAAIimB,EAAkBjB,EAClBkB,EAAWR,EACXS,GAAa,EACjB,IAAK,IAAIziB,EAAI,EAAGA,EAAIxF,EAAI8B,OAAQ0D,IAAK,CACnC,MAAMuD,EAAO/I,EAAIkoB,YAAY1iB,GAC7B,IAAI2iB,EAAyC,EAA3BnB,EAAmBje,GACjCqf,EAAOZ,EACPW,EAAcvB,IAGdmB,GAAmBtB,EAAUE,EAAUE,GACrCsB,GAAezB,EAAWC,EAAUE,IACtCuB,EAAOV,EAEHM,IAAaR,GAAQQ,IAAaN,GACpCI,EAAaG,MAGRE,GAAe1B,EAAUK,KAE5BkB,IAAaP,GAAQO,IAAaL,GACpCG,EAAaG,MAIVF,GAAmBrB,EAAWI,KAEjCkB,IAAaP,GAAQO,IAAaL,GACpCG,EAAaG,MAGjBD,EAAWF,EAAatiB,GAAK4iB,EAC7BL,EAAkBI,EAClBF,EAAYziB,EACRuD,EAAO,OAAQvD,IACrB,CAIA,OAAOsiB,CACT,CAuCA,SAASO,KAAY9mB,GACnB,IAAK,IAAIiE,EAAI,EAAGA,EAAIjE,EAAKO,OAAQ0D,IAC/B,GAAuB,kBAAZjE,EAAKiE,GACd,OAAOjE,EAAKiE,EAGlB,CAEA,SAAS8iB,EAAYC,GACnB,MAAMC,EAAW9pB,OAAOC,OAAO,MAEzB8pB,EAAMF,EAAS,QACfhN,EAAOgN,EAAShN,KAChBR,EAAawN,EAAS1N,KAAKE,WAC3BS,EAAW6M,EAASI,GAAOA,EAAIjJ,cAAejE,GAAQA,EAAKC,SAAUT,GAErE2N,EAAU,CACd3N,aACAS,WACAC,UAAW4M,EAASI,GAAOA,EAAIhJ,eAAgBlE,GAAQA,EAAKE,UAAW,GACvEkN,UAAWN,EAASI,GAAOA,EAAIzI,WAAYxE,GAC3CoN,QAASP,EAASI,GAAOA,EAAI1I,SAAUvE,GACvCE,QAAS2M,EAASI,GAAOA,EAAI/I,aAAcnE,GAAQA,EAAKG,SACxDmN,YAAAA,CAAaC,EAAMC,EAAUC,EAAelqB,GAC1C,IAAImqB,EAAS,EACb,MAAMC,EAAY,EAAIR,EAAQ3N,WAAagO,EAErCI,EAhEZ,SAAyBC,EAAMppB,GAC7B,MAAMqpB,EAAW,GACjB,IAAK,IAAI7jB,EAAI,EAAGA,EAAIxF,EAAI8B,OAAQ0D,IAAK,CACnC,MAAM8jB,EAAKtpB,EAAIkoB,YAAY1iB,GACvB8jB,EAAK,OAAQ9jB,IACjB6jB,EAASxgB,KAAK4a,EAAK/O,EAAEiM,YAAYyI,EAAME,GACzC,CAEA,MAAMC,EAAOH,EAAW,KACxB,GAAIG,EAAM,CACR,MAAM,WAAC9W,EAAU,YAAEF,GAAegX,EAClC,IAAIzB,EACJ,MAAM0B,EAAoB,wDACpBC,EAAc,GACpBlX,EAAYtD,SAAQya,IAClB,GAAIF,EAAkBjlB,KAAKmlB,EAAQlW,KACjC,IAAK,IAAImW,EAAK,EAAGA,EAAKD,EAAQtW,IAAItR,OAAQ6nB,IAAM,CAC9C,GAAIF,EAAYC,EAAQtW,IAAIuW,IAAM,SAClCF,EAAYC,EAAQtW,IAAIuW,KAAO,EAC/B,MAAMvW,EAAMX,EAAWiX,EAAQtW,IAAIuW,IAC7BC,EAAmB,0BAA0BrlB,KAAKmlB,EAAQlW,KAC5DoW,IAAqB9B,IACvBA,EAAeD,EAAmB7nB,IAEpC,IAAK,IAAI6pB,EAAK,EAAGA,EAAKR,EAASvnB,OAAQ+nB,IAChC/B,GAAiB8B,GAAoBhC,EAAgBE,EAAa+B,MAASH,EAAQlW,KACtFiQ,EAAK/O,EAAE0N,WAAWiH,EAAUQ,EAAIzW,EAAKX,EAG3C,CACF,GAEJ,CAEA,OAAO4W,CACT,CA6B2BS,CAAevB,EAAUO,GAC9C,IAAIiB,EAAY,EACZC,GAAkB,EAkFtB,OAjFAb,EAAala,SAAQ,CAACkJ,EAAY3S,KAIhC,IAAoB,IAAhB2S,EAAmB,CACrB,IAAI8R,EAAWzB,EAASrQ,GACxB,IAAK8R,EAAU,CACb,MAAM,KAAChJ,EAAI,KAAEC,GAAQuC,EAAK/O,EAAEsM,YAAYuH,EAAUpQ,GAGlD,IAYIf,EAAMC,EAAMC,EAAMC,EAZlB3J,EAAO,GACPsc,EAAU,EACd,IAAK,IAAI1kB,EAAI,EAAGpC,EAAM6d,EAAKnf,OAAQ0D,EAAIpC,EAAKoC,IAAK,CAC/C,MAAM2kB,EAAU5D,EAActF,EAAKzb,IACnCoI,GAAQqT,EAAKzb,GACb,IAAK,IAAIwe,EAAI,EAAGA,GAAKmG,EAASnG,IAC5BpW,IAASoW,EAAI,EAAI,IAAM,IAAM9C,EAAKgJ,IAEtC,CAKA,GAAIhJ,EAAKpf,OAAQ,CACfsV,EAAOC,EAAO+S,IACd9S,EAAOC,GAAQ6S,IACf,IAAK,IAAI5kB,EAAI,EAAGpC,EAAM8d,EAAKpf,OAAQ0D,EAAIpC,EAAKoC,GAAK,EAAG,CAClD,IAAIyI,EAAIiT,EAAK1b,GACT0I,EAAIgT,EAAK1b,EAAI,GACbyI,EAAImJ,IAAMA,EAAOnJ,GACjBC,EAAImJ,IAAMA,EAAOnJ,GACjBD,EAAIqJ,IAAMA,EAAOrJ,GACjBC,EAAIqJ,IAAMA,EAAOrJ,EACvB,CACF,MACEkJ,EAAOE,EAAOD,EAAOE,EAAO,EAG9B0S,EAAWzB,EAASrQ,GAAc,CAChClP,MAAOkP,EACPkS,aAAc9B,EAASnM,KAAKC,OAAOlE,GACnCf,OACAC,OACAC,OACAC,OACA3J,OACA0c,iBAAkBrJ,EAAKnf,OAe3B,EAGwB,IAApBkoB,IACFf,GAAUxF,EAAK/O,EAAEyN,kBAAkBoG,EAAUyB,EAAgB7R,GAAc+Q,GAG7EpqB,EAASgH,KAAK,KAAMmkB,EAAUhB,EAAQc,GAElCE,EAASI,eACXpB,GAAUgB,EAASI,aAAenB,GAEhCF,IACFC,GAAUD,EAAgBD,GAG5BiB,EAAiB7R,CACnB,CACA4R,GAAcjB,EAAKZ,YAAY6B,GAAa,MAAS,EAAI,CAAE,IAEtDd,CACT,GAGF,OAAOP,CACT,CAEA,OAAO,SAAeja,GAEpB,MAAM8b,EAAO,IAAIzb,WAAWL,EAAQ,EAAG,GACjC+E,EAAMiQ,EAAKnU,KAAKE,UAAU+a,EAAM,EAAG,GACzC,GAAY,SAAR/W,EACF/E,EAAS6X,EAAS7X,QACb,GAAY,SAAR+E,EACT,MAAM,IAAIhU,MAAM,6BAElB,OAAO8oB,EAAY7E,EAAKrU,MAAMX,GAAQ,GACxC,CACF,GAMEvP,KAAIA,CAACsrB,EAAaC,EAAiBC,IAG1BA,EAFMF,IACIC,OAKfE,EAAS,CACbC,eAAgB,mEAChBC,aAAc,GACdC,UAAW,EAAI,GACfC,YAAa,EACbC,aAAc,MAEVC,EAAyB,IAAIC,EAAAA,MACnC,IAAIC,GAAe,EAEnB,SAASC,IACP,OAAQlrB,KAAKqM,aAAevG,MAAMC,KACpC,CA6BA,SAASolB,EAAqBC,GACxBH,EACFvrB,QAAQ2rB,KAAK,0EAEb9lB,EAAOklB,EAAQW,EAEnB,CAiBA,MAAME,EAAU9sB,OAAOC,OAAO,MA2C9B,SAAS8sB,EAAkBlqB,EAAMzC,GAC/BqsB,GAAe,EACf5pB,EAAOkE,EAAO,CAAC,EAAGlE,GAClB,MAAMmqB,EAAaN,IAYnB,GARA7pB,EAAK6nB,KA4QP,SAAuBxb,GAChB+d,KACHA,GAA6B,qBAAbrpB,SAA2B,CAAC,EAAIA,SAASspB,cAAc,MAGzE,OADAD,GAAOE,KAAOje,EACP+d,GAAOE,IAChB,CAlRcC,CAAcvqB,EAAK6nB,MAAQuB,EAAOC,gBAG9CrpB,EAAKunB,KAAO,GAAKvnB,EAAKunB,KAEtBvnB,EAAKspB,aAAetpB,EAAKspB,cAAgBF,EAAOE,aAGxB,MAApBtpB,EAAKwqB,YAAqB,CAC5B,IAAIC,EAAS,CAAC,EACd,IAAK,IAAIhkB,KAAOzG,EAAKwqB,YACnB,GAAIxqB,EAAKwqB,YAAYlmB,eAAemC,GAAM,CACxC,IAAIuN,EAAMhU,EAAKwqB,YAAY/jB,GACR,kBAARuN,IACTA,EAAM0V,EAAUjkB,IAAIuO,GAAK0W,UAE3BD,EAAOhkB,GAAOuN,CAChB,CAEFhU,EAAKwqB,YAAcC,CACrB,CAEAttB,OAAOwtB,OAAO3qB,GAGd,MAAM,aAACypB,EAAY,YAAED,GAAeJ,GAC9B,aAACE,GAAgBtpB,EACjB4qB,EAAgBnB,EAAeH,EAAe,EACpD,IAAIuB,EAAQZ,EAAQX,GACpB,IAAKuB,EAAO,CACV,MAAMpe,EAAS1L,SAASspB,cAAc,UACtC5d,EAAON,MAAQsd,EACfhd,EAAOL,OAAwB,IAAfkd,EAAqBsB,EACrCC,EAAQZ,EAAQX,GAAgB,CAC9BwB,WAAY,EACZxB,eACAyB,UAAWte,EACXue,WAAY,IAAIC,EAAAA,QACdxe,OACAjM,OACAA,OACAA,EACA0qB,EAAAA,aACAA,EAAAA,cAEFC,aAAa,EACbC,aAAc,IAAItmB,KAEpB+lB,EAAMG,WAAWK,iBAAkB,EA0IvC,SAAiCR,GAC/B,MAAMpe,EAASoe,EAAME,UAyBrBte,EAAOnN,iBAAiB,oBAAqBgsB,IAC3CjtB,QAAQ6C,IAAI,eAAgBoqB,GAC5BA,EAAMC,iBACNV,EAAMM,aAAc,CAAI,IAE1B1e,EAAOnN,iBAAiB,wBAAyBgsB,IAC/CjtB,QAAQ6C,IAAI,mBAAoBoqB,GAChCT,EAAMM,aAAc,EAEpB,MAAMK,EAAW,GACjBX,EAAMO,aAAa1d,SAAQuZ,IACzBA,EAASvZ,SAAQ+d,IACfD,EAASlkB,KAAKokB,EAAiBD,EAAOZ,GAAO,GAAM,GACnD,IAEJ3oB,QAAQC,IAAIqpB,GAAUvrB,MAAK,KACzB0rB,GAAsBd,GACtBA,EAAMG,WAAWY,aAAc,CAAI,GACnC,GAEN,CAvLIC,CAAwBhB,EAC1B,CAEA,MAAM,WAACG,EAAU,UAAED,GAAaF,EAChC,IAAIiB,EAAajB,EAAMO,aAAa5lB,IAAIxF,EAAK6nB,MACxCiE,GACHjB,EAAMO,aAAa3lB,IAAIzF,EAAK6nB,KAAMiE,EAAa,IAAIhnB,KAIrDinB,GAAgB/rB,GAAMC,MAAKvB,IACzB,MAAM,SAACopB,EAAQ,eAAEkE,EAAc,SAAExE,EAAQ,WAAEhO,EAAU,QAAEyS,GAAWvtB,EAC5DwtB,EAAa,GACbC,EAAc,IAAIC,aAA+B,EAAlBtE,EAASvnB,QACxC8rB,EAAe7E,EAAWhO,EAChC,IAAI8S,EAAY,EACZC,EAAe,EACnB,MAAMC,EAAa3C,IACnB/B,EAASpa,SAAQ,CAAC+e,EAASxoB,KACzB,IAAIyoB,EAAYZ,EAAWtmB,IAAIinB,GAG/B,IAAKC,EAAW,CACd,MAAM,KAACrgB,EAAI,WAAEsgB,GAAcjuB,EAAOkuB,UAAUH,GAKtCI,EAAkBlkB,KAAK2Z,IAAIqK,EAAW,GAAKA,EAAW,GAAIA,EAAW,GAAKA,EAAW,IACvFrD,GAAgBF,EAAOG,UAAYD,EAAe,IAEhDwD,EAAajC,EAAMC,aACnBiC,EAAa,CACjBJ,EAAW,GAAKE,EAChBF,EAAW,GAAKE,EAChBF,EAAW,GAAKE,EAChBF,EAAW,GAAKE,GAElBf,EAAWrmB,IAAIgnB,EAAUC,EAAY,CAAErgB,OAAMygB,aAAYC,eAGzDb,EAAW5kB,KAAKolB,EAClB,CAIA,MAAM,WAACK,GAAcL,EACfM,EAAOhB,EAAeO,KACtBU,EAAOjB,EAAeO,KAC5BJ,EAAYG,KAAeU,EAAOD,EAAW,GAAKV,EAClDF,EAAYG,KAAeW,EAAOF,EAAW,GAAKV,EAClDF,EAAYG,KAAeU,EAAOD,EAAW,GAAKV,EAClDF,EAAYG,KAAeW,EAAOF,EAAW,GAAKV,EAGlDvE,EAAS7jB,GAAKyoB,EAAUI,UAAU,IAEpCb,EAAQiB,OAASjB,EAAQiB,OAAS,IAAMrD,IAAU2C,GAElD,MAAMW,EAAWtD,IACjBoC,EAAQmB,IAAM,CAAC,EAGf,MAAMC,EAAgBtC,EAAU3e,OAC1BkhB,EAAa3kB,KAAK4kB,KAAK1C,EAAMC,WAAaF,GAC1C4C,EAAe7kB,KAAK6b,IAAI,EAAG7b,KAAK4kB,KAAK5kB,KAAK8kB,KAAKH,EAAahE,KAC9DkE,EAAeH,IAEjBhvB,QAAQqvB,KAAM,+BAA8BL,MAAkBG,KAC9D5f,EAAiCmd,EAAWtB,EAAc+D,GAE1DxC,EAAWvgB,WAGbvI,QAAQC,IAAI+pB,EAAWruB,KAAI6uB,GACzBhB,EAAiBgB,EAAW7B,EAAO7qB,EAAK2tB,kBAAkB1tB,MAAK,EAAE4L,aAC/DogB,EAAQmB,IAAIV,EAAUI,YAAcjhB,CAAM,OAE3C5L,MAAK,KACFisB,EAAW3rB,SAAWsqB,EAAMM,cAC9BQ,GAAsBd,GACtBG,EAAWY,aAAc,GAE3BK,EAAQ2B,SAAW/D,IAAUsD,EAC7BlB,EAAQ4B,MAAQhE,IAAUM,EAI1B5sB,EAASJ,OAAOwtB,OAAO,CACrBmD,WAAY9tB,EACZgrB,aACA1B,eACAE,cACA2C,cACA4B,kBAAmBjG,EACnBkG,YAAatvB,EAAOsvB,YACpBC,eAAgBvvB,EAAOuvB,eACvBC,YAAaxvB,EAAOwvB,YACpBC,cAAezvB,EAAOyvB,cACtBlU,SAAUvb,EAAOub,SACjBC,UAAWxb,EAAOwb,UAClBkU,WAAY1vB,EAAO0vB,WACnBhH,UAAW1oB,EAAO0oB,UAClBC,QAAS3oB,EAAO2oB,QAChBgH,YAAa3vB,EAAO2vB,YACpBC,YAAa5vB,EAAO4vB,YACpBC,cAAe7vB,EAAO6vB,cACtBtC,QAASvtB,EAAOutB,UACf,GACH,IAMJ/pB,QAAQe,UAAUhD,MAAK,KAtkBzB,IAAyBwM,EAukBhBoe,EAAMM,cAvkBU1e,EAwkBHse,GAvkBRyD,QACVvjB,EAAoBU,MAAM8iB,YAAYhiB,GACtCA,EAAO+hB,OAAQ,EAskBf,GAEJ,CAEA,SAAS9C,GAAiB,KAACrf,EAAI,WAAEygB,EAAU,WAAEC,IAAa,aAACzD,EAAY,UAAEyB,EAAS,YAAEI,GAAcuD,GAChG,GAAIvD,EAGF,OAAOjpB,QAAQe,QAAQ,CAAC4I,QAAS,IAEnC,MAAM,aAAC4d,EAAY,YAAED,GAAeJ,EAC9BuF,EAAUhmB,KAAK2Z,IAAIyK,EAAW,GAAKA,EAAW,GAAIA,EAAW,GAAKA,EAAW,IAC7E6B,EAAcjmB,KAAKkmB,MAAM/B,EAAa,GAI5C,OA5sBF,SAAqB3gB,EAAOC,EAAQC,EAAMC,EAASC,EAAUC,EAAUC,EAAQC,EAAGC,EAAG9E,EAASinB,GAAW,GAEvG,OAAKA,EAKEpjB,EAAeS,EAAOC,EAAQC,EAAMC,EAASC,EAAUC,EAAUC,EAAQC,EAAGC,EAAG9E,GAAS5H,KAC7F,MACA1B,IAEO4M,IACH9M,QAAQ2rB,KAAM,kDAAkDzrB,GAChE4M,GAAS,GAEJe,EAAsBC,EAAOC,EAAQC,EAAMC,EAASC,EAAUC,EAAUC,EAAQC,EAAGC,EAAG9E,MAZxFqE,EAAsBC,EAAOC,EAAQC,EAAMC,EAASC,EAAUC,EAAUC,EAAQC,EAAGC,EAAG9E,EAejG,CA0rBSknB,CAAYzF,EAAcA,EAAcjd,EAAM0gB,EAAY4B,EAASnF,EAAauB,EAH7E6D,GAAenF,EAAeH,GAAgBA,EAC9C3gB,KAAKkmB,MAAMD,GAAenF,EAAeH,IAAiBA,EACpDwD,EAAa,EACoF4B,EACnH,CAkEA,SAASM,GAAY,KAACnH,EAAI,WAAEoH,EAAU,aAAE3F,GAAe/rB,GAErD2sB,EAAkB,CAAErC,OAAMyB,eAAc/B,KAD7BlnB,MAAMC,QAAQ2uB,GAAcA,EAAW1nB,KAAK,MAAQ,GAAK0nB,GACpB1xB,EAClD,CAIA,SAAS2G,EAAOgrB,EAAOC,GACrB,IAAK,IAAI1oB,KAAO0oB,EACVA,EAAQ7qB,eAAemC,KACzByoB,EAAMzoB,GAAO0oB,EAAQ1oB,IAGzB,OAAOyoB,CACT,CAGA,IAAI9E,GAcJ,SAASuB,GAAsBd,GAG7B,GAAiC,oBAAtBuE,kBAAkC,CAC3C/wB,QAAQqvB,KAAK,6CACb,MAAM,UAAC3C,EAAS,WAAEC,GAAcH,GAC1B,MAAC1e,EAAK,OAAEC,GAAU2e,EAClBsE,EAAKxE,EAAME,UAAUuE,WAAW,SACtC,IAAIC,EAASvE,EAAWwE,MAAMhwB,KACzB+vB,GAAUA,EAAOhvB,SAAW4L,EAAQC,EAAS,IAChDmjB,EAAS,IAAIhiB,WAAWpB,EAAQC,EAAS,GACzC4e,EAAWwE,MAAQ,CAACrjB,QAAOC,SAAQ5M,KAAM+vB,GACzCvE,EAAWyE,OAAQ,EACnBzE,EAAW0E,eAAgB,GAE7BL,EAAGM,WAAW,EAAG,EAAGxjB,EAAOC,EAAQijB,EAAGO,KAAMP,EAAGQ,cAAeN,EAChE,CACF,CAGA,MAAMO,GAAsCruB,EAAmB,CAC7DhE,KAAM,aACNC,aAAc,CACZ0rB,EACAvc,EA/6CJ,SAA0BkjB,EAAYC,EAAMjG,GAE1C,MAAM,eACJV,GACEU,EAKEkG,EAAQ9yB,OAAOC,OAAO,MAEtB8yB,EAAMrH,IAINsH,EAA0B,iJAG1BC,EAA0B,gBAI1BC,EAAoB,IAAIC,OAAQ,GAAEF,2EA6CxC,SAASG,EAASC,EAASjzB,GACpBizB,IAASA,EAAUnH,GACxB,IAAIxB,EAAOoI,EAAMO,GACb3I,EAEEA,EAAK4I,QACP5I,EAAK4I,QAAQnpB,KAAK/J,GAElBA,EAASsqB,IAGXoI,EAAMO,GAAW,CAACC,QAAS,CAAClzB,IAnDhC,SAAoBuB,EAAKvB,IACvB,SAASmzB,IACP,MAAMC,EAAUpyB,IACdF,QAAQC,MAAO,wBAAuBQ,IAAMA,IAAQuqB,EAAiB,GAAK,sBAAuB9qB,GAC7FO,IAAQuqB,IACVvqB,EAAMuqB,EACNqH,IACF,EAEF,IACE,MAAME,EAAU,IAAIC,eACpBD,EAAQ1Q,KAAK,MAAOphB,GAAK,GACzB8xB,EAAQE,aAAe,cACvBF,EAAQG,OAAS,WACf,GAAIH,EAAQI,QAAU,IACpBL,EAAQ,IAAI1yB,MAAM2yB,EAAQK,kBAEvB,GAAIL,EAAQI,OAAS,EACxB,IACE,MAAM7J,EAAU4I,EAAWa,EAAQztB,UACnC5F,EAAS4pB,EACX,CAAE,MAAO5nB,GACPoxB,EAAQpxB,EACV,CAEJ,EACAqxB,EAAQM,QAAUP,EAClBC,EAAQO,MACV,CAAE,MAAM5yB,GACNoyB,EAAQpyB,EACV,CACF,CACAmyB,EACF,CAmBIU,CAAWZ,GAASrJ,IAClB,IAAIkK,EAAYpB,EAAMO,GAASC,QAC/BR,EAAMO,GAAWrJ,EACjBkK,EAAU3jB,SAAQ4jB,GAAMA,EAAGnK,IAAS,IAG1C,CAQA,SAASoK,GACP,KACEhK,EAAK,GAAE,KACPM,EAAKwB,EAAc,aACnBC,EAAa,GAAE,SACf9B,EAAS,EAAC,cACVC,EAAc,EAAC,WACf2G,EAAW,SAAQ,SACnBoD,EAAStB,EAAG,UACZuB,EAAS,UACTC,EAAU,OAAM,WAChBC,EAAW,EAAC,WACZC,EAAW,SAAQ,aACnBC,EAAa,SAAQ,QACrBC,EAAU,EAAC,QACXC,EAAU,EAAC,sBACXC,GAAsB,EAAK,kBAC3BC,EAAkB,KAAI,YACtBzH,EAAY,MAEdjtB,EACA20B,GAAY,GAEZ,MAAMC,EAAYztB,IACZunB,EAAU,CAACmG,SAAU,EAAGC,YAAa,GAGvC9K,EAAKxV,QAAQ,OAAS,IACxB1T,QAAQqvB,KAAK,2DACbnG,EAAOA,EAAKroB,QAAQ,QAAS,MAAMA,QAAQ,MAAO,OAIpDsoB,GAAYA,EACZC,GAAiBA,EACjB+J,GAAYA,EACZpD,EAAaA,GAAc,SAC3BuD,GAAcA,EAEdpB,EAAS1I,GAAMV,IACb,MAAMmL,EAAcC,SAASf,GAC7B,IAAI1J,EAAW,KACXkE,EAAiB,KACjBY,EAAY,KACZoB,EAAc,KACdC,EAAiB,KACjBM,EAAgB,KAChBJ,EAAgB,KAChBqE,EAAe,EACfC,EAAuB,EACvBC,EAAyB,WAAfd,EACd,MAAM,SAAC3X,EAAQ,UAAEC,EAAS,WAAEV,EAAU,QAAEW,EAAO,UAAEiN,EAAS,QAAEC,GAAWF,EACvE8E,EAAQmG,SAAW1tB,IAAQytB,EAC3B,MAAMQ,EAAejuB,IAIf2nB,EAAe7E,EAAWhO,EAIb,WAAf4U,IACFA,GAAcnU,EAAWC,EAAYC,GAAWX,GAKlD,MAAMoZ,IADNxE,GAA0B5G,IACSvN,EAAWC,GAAamS,GAAgB,EACrEgC,IAAgBpU,EAAWoS,EAAeuG,GAC1C1E,EAAcvlB,KAAKkqB,IAAIzE,GAAanU,EAAWC,GAAamS,GAC5DyG,GAAqB7Y,EAAWC,GAAa,EAAImS,EAAe6B,EAAc,EAGpF,IAAI6E,EAAcpB,EACdqB,EAAc,IAAIC,EACtB,MAAMC,GAAQ,CAACF,GAEf7L,EAAQG,aAAaC,EAAMC,EAAUC,GAAe,CAACiB,EAAUhB,EAAQc,KACrE,MAAM2K,EAAO5L,EAAKtF,OAAOuG,GACnB4K,EAAa1K,EAASI,aAAeuD,EACrCgH,EAAeL,EAAYM,MACjC,IAAIC,EAaJ,GAVM,YAAa7K,IACjBA,EAAS8K,eAAiBL,GAAQ,IAAI7C,OAAOF,GAAwBptB,KAAKmwB,GAC1EzK,EAAS+K,gBAAkBN,GAAQ9C,EAAkBrtB,KAAKmwB,GAC1DzK,EAASgL,QAAUhL,EAAS7S,OAAS6S,EAAS3S,MAAQ2S,EAAS5S,OAAS4S,EAAS1S,MAAQma,EAAwBntB,KAAKmwB,IAEnHzK,EAAS8K,cAAiB9K,EAASgL,SACtCjB,IAIEC,GAAWJ,IAAgB5J,EAAS8K,cAAgB9L,EAAS0L,EAAaL,EAAcvB,GAAY6B,EAAc,CAEpH,GAAIL,EAAYW,QAAQN,EAAe,GAAG3K,SAAS+K,cACjDF,EAAW,IAAIN,EACfF,GAAerL,OAGf,IAAK,IAAIzjB,EAAIovB,EAAcpvB,KAAM,CAE/B,GAAU,IAANA,GAA4B,eAAjB4tB,EAA+B,CAC5C0B,EAAW,IAAIN,EACfF,GAAerL,EACf,KACF,CAEK,GAAIsL,EAAYW,QAAQ1vB,GAAGykB,SAAS+K,cAAe,CACtDF,EAAWP,EAAYY,QAAQ3vB,EAAI,GACnC,MAAM4vB,EAAUN,EAASI,QAAQ,GAAGjnB,EACpCqmB,GAAec,EACf,IAAK,IAAIpR,EAAI8Q,EAASD,MAAO7Q,KAC3B8Q,EAASI,QAAQlR,GAAG/V,GAAKmnB,EAE3B,KACF,CACF,CAEEN,IACFP,EAAYc,eAAgB,EAC5Bd,EAAcO,EACdL,GAAM5rB,KAAK0rB,GACXR,EAAehB,EAEnB,CAEA,IAAIuC,EAAMf,EAAYW,QAAQX,EAAYM,OAC1CS,EAAIrL,SAAWA,EACfqL,EAAIrnB,EAAIgb,EAASqL,EACjBgB,EAAI5nB,MAAQinB,EACZW,EAAIvL,UAAYA,EAGH,OAAT2K,IACFH,EAAc,IAAIC,EAClBC,GAAM5rB,KAAK0rB,GACXD,IAAgBrL,EAAS0L,EAAc3L,EAAgBD,GAAamK,EACtE,IAIFuB,GAAMxlB,SAAQsmB,IACZ,IAAK,IAAI/vB,EAAI+vB,EAAKV,MAAOrvB,KAAM,CAC7B,IAAI,SAACykB,EAAQ,EAAEhc,EAAC,MAAEP,GAAS6nB,EAAKL,QAAQ1vB,GACxC,IAAKykB,EAAS8K,aAKZ,OAJAQ,EAAK7nB,MAAQO,EAAIP,OACb6nB,EAAK7nB,MAAQqmB,IACfA,EAAewB,EAAK7nB,OAI1B,KAIF,IAAI8nB,GAAgB,EAChBC,GAAgB,EAcpB,GAbIpC,IACqB,kBAAZA,EACTmC,IAAiBnC,EAES,kBAAZA,IACdmC,IAAiBzB,GACH,SAAZV,EAAqB,EACT,WAAZA,EAAuB,GACX,UAAZA,EAAsB,EACtBqC,EAAarC,MAIfC,EACF,GAAuB,kBAAZA,EACTmC,IAAiBnC,OAEd,GAAuB,kBAAZA,EAAsB,CACpC,IAAI3lB,EAAS8mB,GAAM3yB,OAAS6tB,EAC5B8F,GAA4B,QAAZnC,EAAoB,EACtB,iBAAZA,GAA8B1D,EAClB,YAAZ0D,GAAyB1D,EAAcjH,EAAYiF,EACvC,WAAZ0F,GAAwB1D,EAAchH,EAAUgF,EACpC,WAAZ0F,EAAuB3lB,EAAS,EACpB,WAAZ2lB,EAAuB3lB,EACX,oBAAZ2lB,EAAgC3lB,EAASwmB,EAAc1Y,EAAYmS,EACnE8H,EAAapC,GAAW3lB,CAC5B,CAGF,IAAK8lB,EAAa,CAEhB,MAAMkC,EAAmBpE,EAAKqE,mBAAmB9M,EAAMkK,GAIvD3J,EAAW,IAAI3F,YAAYsQ,GAC3BzG,EAAiB,IAAII,aAAoC,EAAvBqG,GAClC7F,EAAY,CAAC,EACb2B,EAAgB,CAAC2B,EAAKA,GAAMA,GAAMA,GAClC/B,EAAgB,GAChB,IAAImG,EAAcjG,EACd2D,IACF/D,EAAiB,IAAI7B,aAA2B,EAAd7E,EAAKhnB,SAErCiqB,IACFwD,EAAc,IAAIzgB,WAAkC,EAAvBklB,IAE/B,IAGI3uB,EACAywB,EAJAC,EAAuB,EACvBC,GAAiB,EACjBC,GAAkB,EAsLtB,GAnLAxB,GAAMxlB,SAAQ,CAACsmB,EAAMW,KACnB,IAAKrB,MAAMsB,EAAgBzoB,MAAM0oB,GAAab,EAG9C,GAAIY,EAAiB,EAAG,CAEtB,IAAIE,EAA0B,EAC9B,IAAK,IAAI7wB,EAAI2wB,EAAgB3wB,KAAO+vB,EAAKL,QAAQ1vB,GAAGykB,SAAS8K,cAC3DsB,IAIF,IAAI/B,EAAc,EACdgC,EAAgB,EACpB,GAAkB,WAAdrD,EACFqB,GAAeP,EAAeqC,GAAa,OACtC,GAAkB,UAAdnD,EACTqB,EAAcP,EAAeqC,OACxB,GAAkB,YAAdnD,GAA2BsC,EAAKF,cAAe,CAExD,IAAIkB,EAAkB,EACtB,IAAK,IAAI/wB,EAAI2wB,EAAiBE,EAAyB7wB,KACjD+vB,EAAKL,QAAQ1vB,GAAGykB,SAAS8K,cAC3BwB,IAGJD,GAAiBvC,EAAeqC,GAAaG,CAC/C,CACA,GAAID,GAAiBhC,EAAa,CAChC,IAAIkC,EAAgB,EACpB,IAAK,IAAIhxB,EAAI,EAAGA,EAAI2wB,EAAgB3wB,IAAK,CACvC,IAAIyoB,EAAYsH,EAAKL,QAAQ1vB,GAC7B,MAAMykB,EAAWgE,EAAUhE,SAC3BgE,EAAUhgB,GAAKqmB,EAAckC,EAEP,IAAlBF,GAAuBrM,EAAS8K,cAAgBvvB,EAAI2wB,EAAiBE,IACvEG,GAAiBF,EACjBrI,EAAUvgB,OAAS4oB,EAEvB,CACF,CAGA,MAAMG,EAAQlF,EAAKmF,mBACjB5N,EAAM6M,EAAkBJ,EAAKL,QAAQ,GAAGnL,UAAWwL,EAAKL,QAAQK,EAAKV,MAAQ,GAAG9K,WAElF,IAAK,IAAI4M,EAAK,EAAGA,EAAKF,EAAM30B,OAAQ60B,IAAM,CACxC,MAAO7pB,EAAO8pB,GAAOH,EAAME,GAE3B,IAAIE,EAAOzM,IAAU0M,GAAS1M,IAC9B,IAAK,IAAI5kB,EAAI,EAAGA,EAAI2wB,EAAgB3wB,IAClC,GAAI+vB,EAAKL,QAAQ1vB,GAAGukB,WAAajd,EAAO,CACtC,IAAIiqB,EAAcvxB,EAAGwxB,EAAYxxB,EACjC,KAAOwxB,EAAYb,EAAgBa,IAAa,CAC9C,IAAI/H,EAAOsG,EAAKL,QAAQ8B,GACxB,GAAI/H,EAAKlF,UAAY6M,EACnB,MAEEI,EAAYb,EAAiBE,IAC/BQ,EAAO3sB,KAAKkqB,IAAIyC,EAAM5H,EAAKhhB,GAC3B6oB,EAAQ5sB,KAAK2Z,IAAIiT,EAAO7H,EAAKhhB,EAAIghB,EAAKvhB,OAE1C,CACA,IAAK,IAAIsW,EAAI+S,EAAa/S,EAAIgT,EAAWhT,IAAK,CAC5C,MAAMiK,EAAYsH,EAAKL,QAAQlR,GAC/BiK,EAAUhgB,EAAI6oB,GAAS7I,EAAUhgB,EAAIggB,EAAUvgB,MAAQmpB,EACzD,CACA,KACF,CAEJ,CAGA,IAAI5M,EACJ,MAAMgN,EAActiB,GAAKsV,EAAWtV,EACpC,IAAK,IAAInP,EAAI,EAAGA,EAAI2wB,EAAgB3wB,IAAK,CACvC,IAAIyoB,EAAYsH,EAAKL,QAAQ1vB,GAC7BykB,EAAWgE,EAAUhE,SACrB,MAAM+D,EAAU/D,EAAShhB,MAGnBiuB,EAAqD,EAA/CvB,EAAiBwB,OAAOlJ,EAAUlE,WAC9C,GAAImN,EAAK,CACP,MAAME,EAAW7F,EAAK8F,qBAAqBvO,EAAKmF,EAAUlE,YACtDqN,GACF1O,EAAQG,aAAauO,EAAU,EAAG,EAAGH,EAEzC,CAGA,GAAI1D,EAAuB,CACzB,MAAM,UAACxJ,GAAakE,EACdqJ,EAAYrJ,EAAUhgB,EAAIunB,GAC1B+B,EAAatJ,EAAUhgB,EAAIggB,EAAUvgB,MAAQ8nB,GACnDhG,EAA2B,EAAZzF,GAAiBmN,EAAMK,EAAaD,EACnD9H,EAA2B,EAAZzF,EAAgB,GAAKmN,EAAMI,EAAYC,EACtD/H,EAA2B,EAAZzF,EAAgB,GAAK8L,EAAcxB,EAAoBoB,GAMtE,MAAM+B,EAAWzN,EAAYiM,EACzBwB,EAAW,GACbC,EAA2BjI,EAAgBwG,EAAewB,GAE5DxB,EAAgBjM,CAClB,CAGA,GAAIgC,EAAa,CACf,MAAM,UAAChC,GAAakE,EACpB,KAAMlE,EAAYkM,GAChBA,IACIlK,EAAYlmB,eAAeowB,KAC7BH,EAAe/J,EAAYkK,GAGjC,CAGA,IAAKhM,EAAS8K,eAAiB9K,EAASgL,QAAS,CAC/C,MAAMyC,EAAM3B,IAGP5H,EAAUH,KACbG,EAAUH,GAAW,CACnBpgB,KAAMqc,EAASrc,KACfsgB,WAAY,CAACjE,EAAS7S,KAAM6S,EAAS5S,KAAM4S,EAAS3S,KAAM2S,EAAS1S,QAKvE,MAAM0R,EAASgF,EAAUhgB,EAAIunB,GACvBmC,EAAS9B,EAAcJ,GAC7BlI,EAAqB,EAANmK,GAAWzO,EAC1BsE,EAAqB,EAANmK,EAAU,GAAKC,EAG9B,MAAMC,EAAQ3O,EAASgB,EAAS7S,KAAOwW,EACjCiK,EAAQF,EAAS1N,EAAS5S,KAAOuW,EACjCkK,EAAQ7O,EAASgB,EAAS3S,KAAOsW,EACjCmK,EAAQJ,EAAS1N,EAAS1S,KAAOqW,EACnCgK,EAAQ9H,EAAc,KAAIA,EAAc,GAAK8H,GAC7CC,EAAQ/H,EAAc,KAAIA,EAAc,GAAK+H,GAC7CC,EAAQhI,EAAc,KAAIA,EAAc,GAAKgI,GAC7CC,EAAQjI,EAAc,KAAIA,EAAc,GAAKiI,GAG7CL,EAAMlE,IAAsB,IAC9BnuB,EAAQ,CAACyH,MAAO4qB,EAAKd,IAAKc,EAAKM,KAAM,CAACvG,EAAKA,GAAMA,GAAMA,IACvD/B,EAAc7mB,KAAKxD,IAErBA,EAAMuxB,MACN,MAAMqB,EAAY5yB,EAAM2yB,KAUxB,GATIJ,EAAQK,EAAU,KAAIA,EAAU,GAAKL,GACrCC,EAAQI,EAAU,KAAIA,EAAU,GAAKJ,GACrCC,EAAQG,EAAU,KAAIA,EAAU,GAAKH,GACrCC,EAAQE,EAAU,KAAIA,EAAU,GAAKF,GAGzC1O,EAASqO,GAAO1J,EAGZjC,EAAa,CACf,MAAMjf,EAAc,EAAN4qB,EACdnI,EAAYziB,GAASgpB,GAAgB,GAAK,IAC1CvG,EAAYziB,EAAQ,GAAKgpB,GAAgB,EAAI,IAC7CvG,EAAYziB,EAAQ,GAAoB,IAAfgpB,CAC3B,CACF,CACF,CACF,CAGAD,GAAelG,CAAU,IAIvBH,EAAgB,CAClB,MAAMgI,EAAW1O,EAAKhnB,OAASk0B,EAC3BwB,EAAW,GACbC,EAA2BjI,EAAgBwG,EAAewB,EAE9D,CACF,CAGAhK,EAAQoG,YAAc3tB,IAAQiuB,EAE9Bp1B,EAAS,CACPuqB,WACAkE,iBACAY,YACAqB,iBACAC,cACAF,cACAG,gBACA3G,WACAhO,aACAS,SAAUA,EAAWoS,EACrBnS,UAAWA,EAAYmS,EACvBjF,UAAWA,EAAYiF,EACvBhF,QAASA,EAAUgF,EACnB+B,aACAC,cACAC,YAAa,CACX2F,GACAC,GAAgBhB,GAAM3yB,OAAS6tB,EAC/B6F,GAAgBzB,EAChB0B,IAEF3F,gBACAtC,WACA,GAEN,CAmBA,SAASkI,EAAa11B,GACpB,IAAImF,EAAQnF,EAAImF,MAAM,eAClB+yB,EAAM/yB,EAAQwQ,WAAWxQ,EAAM,IAAMgzB,IACzC,OAAOC,MAAMF,GAAO,EAAIA,EAAM,GAChC,CAEA,SAAST,EAA2BjI,EAAgB6I,EAAeb,GACjE,MAAMc,EAAY9I,EAA+B,EAAhB6I,GAC3BE,EAAU/I,EAA+B,EAAhB6I,EAAoB,GAC7CG,EAAOhJ,EAA+B,EAAhB6I,EAAoB,GAC1CI,GAAmBF,EAAUD,GAAad,EAChD,IAAK,IAAIhyB,EAAI,EAAGA,EAAIgyB,EAAUhyB,IAAK,CACjC,MAAMkzB,EAAmC,GAArBL,EAAgB7yB,GACpCgqB,EAAekJ,GAAcJ,EAAYG,EAAkBjzB,EAC3DgqB,EAAekJ,EAAa,GAAKJ,EAAYG,GAAmBjzB,EAAI,GACpEgqB,EAAekJ,EAAa,GAAKF,CACnC,CACF,CAEA,SAASvyB,IACP,OAAQ/F,KAAKqM,aAAevG,MAAMC,KACpC,CAGA,SAASuuB,IACPhtB,KAAKzG,KAAO,EACd,CACA,MAAM43B,EAAgB,CAAC,WAAY,IAAK,QAAS,aAgCjD,OA/BAnE,EAAS5uB,UAAY,CACnB8H,MAAO,EACP2nB,eAAe,EACf,SAAIR,GACF,OAAO3qB,KAAK4kB,KAAKtnB,KAAKzG,KAAKe,OAAS62B,EAAc72B,OACpD,EACAozB,OAAAA,CAAQ1vB,GACN,IAAI8vB,EAAMd,EAASoE,UAGnB,OAFAtD,EAAIv0B,KAAOyG,KAAKzG,KAChBu0B,EAAIrsB,MAAQzD,EACL8vB,CACT,EACAH,OAAAA,CAAQ3vB,GACN,IAAIqzB,EAAU,IAAIrE,EAElB,OADAqE,EAAQ93B,KAAOyG,KAAKzG,KAAK+3B,OAAOtzB,EAAImzB,EAAc72B,QAC3C+2B,CACT,GAEFrE,EAASoE,UAAYD,EAAcxS,QAAO,CAAC4S,EAAKpzB,EAAMH,EAAG9B,KACvDhF,OAAOqL,eAAegvB,EAAKpzB,EAAM,CAC/BoB,GAAAA,GACE,OAAOS,KAAKzG,KAAKyG,KAAKyB,MAAQ0vB,EAAc72B,OAAS0D,EACvD,EACAwB,GAAAA,CAAIuO,GACF/N,KAAKzG,KAAKyG,KAAKyB,MAAQ0vB,EAAc72B,OAAS0D,GAAK+P,CACrD,IAEKwjB,IACN,CAACh4B,KAAM,KAAMkI,MAAO,IAGhB,CACL6pB,UACAkG,QAvEF,SAAiBz3B,EAAMzC,GACrBg0B,EAAQvxB,GAAOtB,IACb,MAAOg5B,EAAIC,EAAIC,EAAIC,GAAMn5B,EAAO4vB,YAChC/wB,EAAS,CACP4O,MAAOyrB,EAAKF,EACZtrB,OAAQyrB,EAAKF,GACb,GACD,CAACzF,aAAa,GACnB,EAgEE3B,WAEJ,EAq1BIuH,EAAAA,GAEFn6B,IAAAA,CAAKosB,EAAQgG,EAAYgI,EAAkBD,GACzC,MAAM,eAACzO,GAAkBU,EACzB,OAAOgO,EAAiBhI,EAAY+H,IAAe,CAAEzO,kBACvD,IAGI0C,GAA+BtqB,EAAmB,CACtDhE,KAAM,aACNC,aAAc,CACZoyB,IAEFnyB,KAAKq6B,GACI,SAASh4B,GACd,OAAO,IAAIkC,SAAQe,IACjB+0B,EAAWzG,QAAQvxB,EAAMiD,EAAQ,GAErC,EAEFrF,gBAAAA,CAAiBc,GAEf,MAAMgC,EAAgB,CACpBhC,EAAOstB,eAAe9e,OACtBxO,EAAOopB,SAAS5a,QAQlB,OANIxO,EAAOuvB,gBACTvtB,EAAc4G,KAAK5I,EAAOuvB,eAAe/gB,QAEvCxO,EAAOsvB,aACTttB,EAAc4G,KAAK5I,EAAOsvB,YAAY9gB,QAEjCxM,CACT,IAGF,SAASu3B,KACP96B,OAAO+6B,KAAKjO,GAASvc,SAAQuG,IAC3B,MAAMxH,EAASwd,EAAQhW,GAAM8W,WACvB,MAAC5e,EAAK,OAAEC,GAAUK,EACxBpO,QAAQ6C,IAAI,MAAQ,2BACAuL,EAAO0rB,yCACNhsB,OAAWC,4EAGfA,6BACCD,aAChB,GAEN,CAEA,MAAMisB,GAAqB,CAAC,EAgC5B,MACMC,GAAqB,oBAiC3B,MAAMC,WAAuBC,EAAAA,wBAC3BlvB,WAAAA,GACEmvB,QAEAvyB,KAAKwyB,OAAS,EACdxyB,KAAKyyB,YAAc,EAInBzyB,KAAKqP,OAAS,CACZ,CAAC/J,MAAO,EAAG+nB,MAAOzK,IAAU8P,cAAe,GAC3C,CAACptB,MAAO,EAAG+nB,MAAOzK,IAAU8P,cAAe,IAI7C1yB,KAAK2yB,eAAiB,IAAIC,EAAAA,OAC1B5yB,KAAK6yB,YAAc,IAAIC,EAAAA,IACzB,CAEAC,qBAAAA,GACE,CAGFC,kBAAAA,GACE,CAKFC,OAAAA,CAAQC,GACN,MAAMC,EAAQnzB,KAAKozB,WAAW/F,MAC9BrtB,KAAKqzB,aAAaH,IAASI,EAAAA,SAAWH,EAAQ,EAAI,EAAGD,IAASruB,EAAAA,WAAasuB,EAAQA,EAAQ,EAC7F,CAEA,UAAIX,CAAOA,GACT,GAAIA,IAAWxyB,KAAKuzB,QAAS,CAC3BvzB,KAAKuzB,QAAUf,GACO,kBAAXA,GAAuBA,EAAS,KACzCA,EAAS,GAEX,IAAIgB,EAxGV,SAA6BhB,GAC3B,IAAIiB,EAAOtB,GAAmBK,GAC9B,IAAKiB,EAAM,CAKT,MAAMC,EAAQ,IAAIC,EAAAA,cAAc,EAAG,EAAGnB,EAAQA,GACxCoB,EAAOF,EAAMvxB,QACb0xB,EAAaH,EAAMI,WACnBC,EAAYH,EAAKE,WACjBE,EAAW,IAAIC,EAAAA,eACfC,EAAYL,EAAWM,GAAG9G,MAChC,IAAK,IAAIrvB,EAAI,EAAGA,EAAIk2B,EAAWl2B,IAC7B+1B,EAAUK,SAASC,MAAU,EAAJr2B,KAAW,EACpC+1B,EAAUO,OAAOD,MAAU,EAAJr2B,EAAQ,KAAO,EAExC,CAAC,WAAY,SAAU,MAAMyJ,SAAQjQ,IACnCw8B,EAASO,aAAa/8B,EAAM,IAAIg9B,EAAAA,uBAC9B,IAAIX,EAAWr8B,GAAM68B,SAAUN,EAAUv8B,GAAM68B,OAC/CR,EAAWr8B,GAAMi9B,UAClB,IAEHT,EAASU,SAAS,IAAIhB,EAAMjyB,MAAM4yB,SAAUT,EAAKnyB,MAAM4yB,MAAMz8B,KAAIqQ,GAAKA,EAAIisB,MAC1EF,EAASW,UAAU,GAAK,GAAK,GAC7BlB,EAAOtB,GAAmBK,GAAUwB,CACtC,CACA,OAAOP,CACT,CA4EgBmB,CAAoBpC,GAC7B,CAAC,WAAY,SAAU,MAAM/qB,SAAQotB,IACpC70B,KAAK8zB,WAAWe,GAAQrB,EAAIM,WAAWe,GAAM1yB,OAAO,IAEtDnC,KAAK00B,SAASlB,EAAIJ,WAAWjxB,QAC/B,CACF,CACA,UAAIqwB,GACF,OAAOxyB,KAAKuzB,OACd,CAEA,eAAId,CAAY75B,GACVA,IAAMoH,KAAK80B,eACb90B,KAAK80B,aAAel8B,EACpBoH,KAAK+0B,gBAET,CACA,eAAItC,GACF,OAAOzyB,KAAK80B,YACd,CAcAE,YAAAA,CAAa9O,EAAa4B,EAAmBO,EAAaH,EAAeH,GAEvEkN,GAAiBj1B,KA7GO,qBA6GoBkmB,EAAa,GACzD+O,GAAiBj1B,KAAMoyB,GAAoBtK,EAAmB,GAC9DmN,GAAiBj1B,KA7GM,oBA6GoB+nB,EAAa,GACxD/nB,KAAKk1B,aAAe7M,EACpBroB,KAAKm1B,eAAiBjN,EACtBloB,KAAKo1B,cAAgBtN,EAAkBxtB,OACvC0F,KAAK+0B,eACP,CAEAA,aAAAA,GACE,MAAMM,EAASr1B,KAAKk1B,aACpB,GAAIG,EAAQ,CACV,MAAM,YAAE5C,EAAaI,YAAayC,GAASt1B,KAC3C,GAAIyyB,EAAa,CACf,MAAM,GAAE8C,EAAE,MAAE3M,EAAK,IAAEgE,EAAG,IAAEvQ,EAAG,IAAEmZ,EAAG,IAAEC,GAAQ/yB,KACpCgzB,EAASH,EAAK,EACdI,EAAa,EAALJ,EACRK,EAAOlzB,KAAK0Y,IAAIqX,GAChBoD,EAAYR,EAAO,GAAKO,EACxBE,EAAaT,EAAO,GAAKO,EACzBG,EAAOnN,GAAOiN,EAAYH,GAAUC,KAAW/M,GAAOkN,EAAaJ,GAAUC,IAC9EC,EAAOhJ,EAAI4I,EAAIK,GAAaD,EAAMJ,EAAIM,GAAcF,GACnDI,EAAOpN,GAAOiN,EAAYH,GAAUC,KAAW/M,GAAOkN,EAAaJ,GAAUC,GAC/EC,EAAOvZ,EAAImZ,EAAIK,GAAaD,EAAMJ,EAAIM,GAAcF,GAClDK,EAAOrN,GAAOiN,EAAYN,GAAMI,KAAW/M,GAAOkN,EAAaP,GAAMI,GAChE,EAAPC,EAAWvZ,EAAIuZ,EAAOH,EAAII,GAAaD,EAAMA,EAAOH,EAAIK,GAAcF,GAC1EN,EAAK1I,IAAIptB,IAAIu2B,EAAMV,EAAO,GAAI5C,EAAc,GAAKwD,EAAO,GACxDX,EAAKjZ,IAAI7c,IAAIw2B,EAAMX,EAAO,GAAI5C,EAAc,EAAI,EAAIwD,EACtD,MACEX,EAAK1I,IAAIptB,IAAI61B,EAAO,GAAIA,EAAO,GAAI,GACnCC,EAAKjZ,IAAI7c,IAAI61B,EAAO,GAAIA,EAAO,GAAI,GAErCC,EAAKY,kBAAkBl2B,KAAK2yB,eAC9B,CACF,CAeAwD,aAAAA,CAAcC,GACZ,IAAI/I,EAAQrtB,KAAKq2B,aAAajE,IAAoB/E,MAC9CiJ,EAASt2B,KAAKm1B,eAClB,GAAImB,EACF,IAAK,IAAIt4B,EAAIs4B,EAAOh8B,OAAQ0D,KAAM,CAChCqvB,EAAQiJ,EAAOt4B,GAAGoxB,IAClB,IAAIoB,EAAO8F,EAAOt4B,GAAGwyB,KAErB,GAAIA,EAAK,GAAK4F,EAAStkB,GAAK0e,EAAK,GAAK4F,EAAS1vB,GAAK8pB,EAAK,GAAK4F,EAAS3Z,GAAK+T,EAAK,GAAK4F,EAAS3vB,EAC7F,KAEJ,CAEFzG,KAAKo1B,cAAgB/H,CACvB,EAIF,SAAS4H,GAAiBxB,EAAM8C,EAAUC,EAAU/B,GAClD,MAAMI,EAAOpB,EAAK4C,aAAaE,GAC3BC,EAEE3B,GAAQA,EAAKR,MAAM/5B,SAAWk8B,EAASl8B,QACzCu6B,EAAKR,MAAM70B,IAAIg3B,GACf3B,EAAKlP,aAAc,IAEnB8N,EAAKc,aAAagC,EAAU,IAAIE,EAAAA,yBAAyBD,EAAU/B,WAO5DhB,EAAKiD,kBACZjD,EAAKjvB,WAEEqwB,GACTpB,EAAKkD,gBAAgBJ,EAEzB,CAGA,MAAMK,GAAe,6nBAsBfC,GAAoB,w9CAgDpBC,GAAiB,k6EAyGjBC,GAAsB,2wBA6B5B,SAASC,GAA0Bh4B,GACjC,MAAMi4B,EAAel4B,EAAsBC,EAAc,CACvDkD,SAAS,EACTgB,WAAY,CACVg0B,aAAa,GAEfn1B,SAAU,CACRo1B,kBAAmB,CAACl/B,MAAO,MAC3Bm/B,sBAAuB,CAACn/B,MAAO,IAAIo/B,EAAAA,SACnCC,oBAAqB,CAACr/B,MAAO,GAC7Bs/B,mBAAoB,CAACt/B,MAAO,GAC5Bu/B,mBAAoB,CAACv/B,MAAO,IAAIw/B,EAAAA,QAAQ,EAAE,EAAE,EAAE,IAC9CC,gBAAiB,CAACz/B,MAAO,IAAIw/B,EAAAA,QAAQ,EAAE,EAAE,EAAE,IAC3CE,sBAAuB,CAAC1/B,MAAO,GAC/B2/B,sBAAuB,CAAC3/B,MAAO,GAC/B4/B,mBAAoB,CAAC5/B,MAAO,GAC5B6/B,sBAAuB,CAAC7/B,MAAO,IAAIo/B,EAAAA,SACnCU,mBAAoB,CAAC9/B,MAAO,GAC5B+/B,kBAAmB,CAAC//B,MAAO,GAC3BggC,mBAAoB,CAAChgC,MAAO,GAC5BigC,mBAAoB,CAACjgC,MAAO,IAAIyrB,EAAAA,OAChCyU,qBAAsB,CAAClgC,MAAO,GAC9BmgC,cAAe,CAACngC,MAAO,IAAIogC,EAAAA,SAC3BC,sBAAuB,CAACrgC,OAAO,GAC/BsgC,gBAAiB,CAACtgC,OAAO,IAE3BwI,WAAYm2B,GACZh2B,gBAAiBi2B,GACjBh2B,aAAci2B,GACd91B,uBAAwB+1B,GACxB91B,cAAAA,EAAe,aAACd,EAAY,eAAEC,IAC5B,IAAIo4B,EAAa,+BAcjB,OAbIA,EAAWz7B,KAAKqD,KAElBA,EAAiBA,EACdnH,QAAQu/B,EAAY,kCACpBv/B,QAAQ,eAAgB,qBAEtBu/B,EAAWz7B,KAAKoD,KACnBA,EAAeA,EAAalH,QAC1BuE,EACA,mHAIC,CAAE2C,eAAcC,iBACzB,IAqBF,OAjBA62B,EAAawB,aAAc,EAE3BvhC,OAAOwhC,iBAAiBzB,EAAc,CACpC0B,qBAAsB,CAAC1gC,OAAO,GAI9B2gC,WAAY,CACVr5B,GAAAA,GACE,OAAOS,KAAKkzB,IACd,EACA1zB,GAAAA,GACE,KAKCy3B,CACT,CAEA,MAAM4B,GAAgC,IAAIC,EAAAA,kBAAkB,CAC1DC,MAAO,SACP7F,KAAMruB,EAAAA,WACN4zB,aAAa,IAETO,GAAqB,QAErBC,GAAyB,IAAIC,EAAAA,QAC7BC,GAA0B,IAAIC,EAAAA,QAC9BC,GAA0B,IAAID,EAAAA,QAC9BE,GAAY,GACZC,GAAuB,IAAIH,EAAAA,QAC3BI,GAAgB,OAEtB,SAASC,GAAMtxB,GACb,OAAO/N,MAAMC,QAAQ8N,GAAKA,EAAE,GAAKA,CACnC,CAEA,IAAIuxB,GAAqBA,KACvB,MAAMC,EAAO,IAAI70B,EAAAA,KACf,IAAI6uB,EAAAA,cAAc,EAAG,GACrBkF,IAGF,OADAa,GAAqBA,IAAMC,EACpBA,CAAI,EAETC,GAAuBA,KACzB,MAAMD,EAAO,IAAI70B,EAAAA,KACf,IAAI6uB,EAAAA,cAAc,EAAG,EAAG,GAAI,GAC5BkF,IAGF,OADAe,GAAuBA,IAAMD,EACtBA,CAAI,EAGb,MAAME,GAAiB,CAAE3gC,KAAM,aACzB4gC,GAAoB,CAAE5gC,KAAM,gBAE5B6gC,GAAiB,CACrB,OACA,WACA,gBACA,aACA,WACA,eACA,OACA,YACA,YACA,aACA,aACA,UACA,UACA,cACA,gBAGIC,GAAiBD,GAAeE,OACpC,WACA,QACA,cACA,WACA,cACA,cACA,uBASF,MAAMC,WAAap1B,EAAAA,KACjB1B,WAAAA,GAEEmvB,MADiB,IAAIF,GACL,MAQhBryB,KAAKshB,KAAO,GASZthB,KAAK6rB,QAAU,EASf7rB,KAAK8rB,QAAU,EAYf9rB,KAAKyyB,YAAc,EAOnBzyB,KAAKwrB,UAAY,OAOjBxrB,KAAK4hB,KAAO,KAOZ5hB,KAAKuhB,SAAW,GAOhBvhB,KAAKwhB,cAAgB,EAOrBxhB,KAAKmoB,WAAa,SAOlBnoB,KAAKurB,SAAW3I,IAQhB5iB,KAAK4rB,aAAe,SAMpB5rB,KAAKyrB,UAAY,OAMjBzrB,KAAK0rB,WAAa,EASlB1rB,KAAK2rB,WAAa,SAelB3rB,KAAKO,SAAW,KAShBP,KAAK+4B,MAAQ,KAWb/4B,KAAKukB,YAAc,KAUnBvkB,KAAKm6B,aAAe,EAQpBn6B,KAAKo6B,aAAe,EAQpBp6B,KAAKq6B,eAAiB,EAUtBr6B,KAAKs6B,YAAc,EASnBt6B,KAAKu6B,eAAiB,EAStBv6B,KAAKw6B,eAAiB,EAStBx6B,KAAKy6B,YAAc,EAOnBz6B,KAAK06B,YAAc1B,GAOnBh5B,KAAK26B,cAAgB,EASrB36B,KAAK46B,YAAc,EAQnB56B,KAAK66B,YAAc,EAQnB76B,KAAKo2B,SAAW,KAWhBp2B,KAAK86B,YAActB,GAQnBx5B,KAAK+6B,oBAAsB,EAU3B/6B,KAAKqjB,aAAe,KAUpBrjB,KAAK0nB,kBAAmB,EAExB1nB,KAAKg7B,UAAW,CAClB,CAQAC,IAAAA,CAAK3jC,GACC0I,KAAKk7B,aACPl7B,KAAKk7B,YAAa,EAGdl7B,KAAKm7B,YACNn7B,KAAKo7B,eAAiBp7B,KAAKo7B,aAAe,KAAK/5B,KAAK/J,IAErD0I,KAAKm7B,YAAa,EAClBn7B,KAAKq7B,cAAcxB,IAEnB5V,EAAkB,CAChB3C,KAAMthB,KAAKshB,KACXM,KAAM5hB,KAAK4hB,KACXL,SAAUvhB,KAAKuhB,UAAY,GAC3BC,cAAexhB,KAAKwhB,eAAiB,EACrC2G,WAAYnoB,KAAKmoB,YAAc,SAC/BoD,SAAUvrB,KAAKurB,SACfC,UAAWxrB,KAAKwrB,WAAa,OAC7BC,UAAWzrB,KAAKyrB,UAChBC,WAAY1rB,KAAK0rB,WACjBC,WAAY3rB,KAAK2rB,WACjBC,aAAc5rB,KAAK4rB,aACnBC,QAAS7rB,KAAK6rB,QACdC,QAAS9rB,KAAK8rB,QACdvH,YAAavkB,KAAKukB,YAClBwH,uBAAuB,EACvB1I,aAAcrjB,KAAKqjB,aACnBqE,iBAAkB1nB,KAAK0nB,mBACtB4T,IACDt7B,KAAKm7B,YAAa,EAGlBn7B,KAAKu7B,gBAAkBD,EAGvBt7B,KAAKw7B,SAASxG,aACZsG,EAAepV,YACfoV,EAAexT,kBACfwT,EAAejT,YACfiT,EAAepT,cACfoT,EAAevT,aAIjB,MAAM0T,EAASz7B,KAAKo7B,aAChBK,IACFz7B,KAAKo7B,aAAe,KACpBp7B,KAAKk7B,YAAa,EAClBl7B,KAAKi7B,MAAK,KACRQ,EAAOh0B,SAAQ5K,GAAMA,GAAMA,KAAK,KAIpCmD,KAAKq7B,cAAcvB,IACfxiC,GACFA,GACF,KAIR,CAQAokC,cAAAA,CAAe37B,EAAU47B,EAAOC,EAAQJ,EAAUj7B,EAAUs7B,GAC1D77B,KAAKi7B,OAGD16B,EAASo4B,sBACX34B,KAAK87B,kBAAkBv7B,GAMzBA,EAASw7B,YAAcx7B,EAASlC,eAAe,QAC/C2B,KAAKw7B,SAASvI,QAAQ1yB,EAASy7B,YAAcz7B,EAAS2yB,MACtD3yB,EAAS2yB,KAAO+I,EAAAA,SAClB,CAEAC,aAAAA,CAAcn8B,EAAU47B,EAAOC,EAAQJ,EAAUj7B,EAAUs7B,GAErDt7B,EAASw7B,YACXx7B,EAAS2yB,KAAO3yB,EAASy7B,mBAElBz7B,EAAS2yB,IAEpB,CASA1uB,OAAAA,GACExE,KAAKw7B,SAASh3B,SAChB,CASA,kBAAI82B,GACF,OAAOt7B,KAAKu7B,iBAAmB,IACjC,CAIA,YAAIh7B,GACF,IAAI47B,EAAkBn8B,KAAKo8B,iBAC3B,MAAMp9B,EAAegB,KAAKq8B,eAAiBr8B,KAAKs8B,mBAAqBt8B,KAAKs8B,iBAAmBzD,GAAgB12B,SAa7G,GAZKg6B,GAAmBA,EAAgBn9B,eAAiBA,IACvDm9B,EAAkBn8B,KAAKo8B,iBAAmBpF,GAA0Bh4B,GAEpEA,EAAa3F,iBAAiB,WAAW,SAASkjC,IAChDv9B,EAAaw9B,oBAAoB,UAAWD,GAC5CJ,EAAgB33B,SAClB,KAMExE,KAAKm6B,cAAgBn6B,KAAKs6B,aAAet6B,KAAKu6B,gBAAkBv6B,KAAKw6B,eAAgB,CACvF,IAAIiC,EAAkBN,EAAgBO,YAatC,OAZKD,IACHA,EAAkBN,EAAgBO,YAAcxlC,OAAOC,OAAOglC,EAAiB,CAC7E5kC,GAAI,CAACU,MAAOkkC,EAAgB5kC,GAAK,MAEnCklC,EAAgBE,uBAAwB,EACxCF,EAAgBG,YAAa,EAC7BH,EAAgB7kC,IAAM,KACtBukC,EAAgB9iC,iBAAiB,WAAW,SAASkjC,IACnDJ,EAAgBK,oBAAoB,UAAWD,GAC/CE,EAAgBj4B,SAClB,KAEK,CACLi4B,EACAN,EAEJ,CACE,OAAOA,CAEX,CACA,YAAI57B,CAASvB,GACPA,GAAgBA,EAAa25B,sBAC/B34B,KAAKo8B,iBAAmBp9B,EACxBgB,KAAKq8B,cAAgBr9B,EAAaA,cAElCgB,KAAKq8B,cAAgBr9B,CAEzB,CAEA,uBAAI+7B,GACF,OAAO/6B,KAAKw7B,SAAShJ,MACvB,CACA,uBAAIuI,CAAoBvI,GACtBxyB,KAAKw7B,SAAShJ,OAASA,CACzB,CAEA,eAAIC,GACF,OAAOzyB,KAAKw7B,SAAS/I,WACvB,CACA,eAAIA,CAAY75B,GACdoH,KAAKw7B,SAAS/I,YAAc75B,CAC9B,CAGA,uBAAIikC,GACF,OAAOpD,GAAMz5B,KAAKO,UAAUqD,kBAC9B,CACA,0BAAIk5B,GACF,OAAOrD,GAAMz5B,KAAKO,UAAU4D,qBAC9B,CAEA23B,iBAAAA,CAAkBv7B,GAChB,MAAMw8B,EAAYx8B,EAASo8B,sBACrB56B,EAAWxB,EAASwB,SACpBi7B,EAAWh9B,KAAKs7B,eACtB,GAAI0B,EAAU,CACZ,MAAM,WAACjY,EAAU,YAAEsD,GAAe2U,EAClCj7B,EAASo1B,kBAAkBl/B,MAAQ8sB,EACnChjB,EAASq1B,sBAAsBn/B,MAAMuH,IAAIulB,EAAWwE,MAAMrjB,MAAO6e,EAAWwE,MAAMpjB,QAClFpE,EAASu1B,oBAAoBr/B,MAAQ+kC,EAAS3Z,aAC9CthB,EAASw1B,mBAAmBt/B,MAAQ+kC,EAASzZ,YAC7CxhB,EAASy1B,mBAAmBv/B,MAAMglC,UAAU5U,GAC5CtmB,EAASu2B,sBAAsBrgC,OAAS8kC,KAAeC,EAASjV,YAEhE,IAGI6S,EACAD,EACAD,EALAwC,EAAiB,EACjBC,EAAa,EACb1C,EAAc,EAId2C,EAAU,EACVC,EAAU,EAEd,GAAIN,EAAW,CACb,IAAI,aAAC5C,EAAY,eAAEI,EAAc,eAAEC,EAAc,YAAEF,EAAW,eAAED,GAAkBr6B,KAClFk9B,EAAiBl9B,KAAKs9B,cAAcnD,IAAiB,EACrDgD,EAAaz6B,KAAK2Z,IAAI,EAAGrc,KAAKs9B,cAAchD,IAAgB,GAC5DM,EAAcP,EACd+C,EAAUp9B,KAAKs9B,cAAc/C,IAAmB,EAChD8C,EAAUr9B,KAAKs9B,cAAc9C,IAAmB,CAClD,MACEC,EAAc/3B,KAAK2Z,IAAI,EAAGrc,KAAKs9B,cAAct9B,KAAKy6B,cAAgB,GAC9DA,IACFC,EAAc16B,KAAK06B,YACnB34B,EAASm2B,mBAAmBjgC,MAAMuH,IAAmB,MAAfk7B,EAAsB1B,GAAqB0B,GACjFC,EAAgB36B,KAAK26B,cACA,MAAjBA,IAAuBA,EAAgB,IAE7CC,EAAc56B,KAAK46B,YAGrB74B,EAAS41B,sBAAsB1/B,MAAQilC,EACvCn7B,EAAS+1B,sBAAsB7/B,MAAMuH,IAAI49B,EAASC,GAClDt7B,EAASi2B,kBAAkB//B,MAAQklC,EACnCp7B,EAASk2B,mBAAmBhgC,MAAQwiC,EACpC14B,EAASo2B,qBAAqBlgC,MAAQ0iC,EACtC54B,EAAS81B,mBAAmB5/B,MAAuB,MAAf2iC,EAAsB,EAAIA,EAC9D74B,EAASg2B,mBAAmB9/B,MAAQ+H,KAAKyyB,aAAe,EAExD,IAAI2D,EAAWp2B,KAAKo2B,SACpB,GAAIA,GAAYh8B,MAAMC,QAAQ+7B,IAAiC,IAApBA,EAAS97B,OAClDyH,EAAS21B,gBAAgBz/B,MAAMglC,UAAU7G,OACpC,CAEL,MAAMmH,EAA+B,KAAxBv9B,KAAKuhB,UAAY,IAC9Bxf,EAAS21B,gBAAgBz/B,MAAMuH,IAC7B6oB,EAAY,GAAKkV,EACjBlV,EAAY,GAAKkV,EACjBlV,EAAY,GAAKkV,EACjBlV,EAAY,GAAKkV,EAErB,CACAv9B,KAAKw7B,SAASrF,cAAcp0B,EAAS21B,gBAAgBz/B,MACvD,CACA8J,EAASw2B,gBAAgBtgC,QAAU+H,KAAKg7B,SACxCz6B,EAASi9B,gBAAkBx9B,KAAK66B,YAChCt6B,EAASk9B,oBAAsBl9B,EAASm9B,mBAAqB19B,KAAK66B,aAAe,EAIjF,MAAM9B,EAAQgE,EAAa/8B,KAAKo6B,cAAgB,EAAKp6B,KAAK+4B,MAE1D,GAAa,MAATA,SACKx4B,EAASw4B,UACX,CACL,MAAM4E,EAAWp9B,EAASlC,eAAe,SAAWkC,EAASw4B,MAASx4B,EAASw4B,MAAQ,IAAIrV,EAAAA,MACvFqV,IAAU4E,EAASC,QAA2B,kBAAV7E,GACtC4E,EAASn+B,IAAIm+B,EAASC,OAAS7E,EAEnC,CAGA,IAAI8E,EAAS79B,KAAK86B,aAAetB,GACjC,GAAIqE,IAAWt9B,EAASu9B,aAAc,CACpC,IAAIC,EAASh8B,EAASq2B,cAAcngC,MACpC4lC,EAASA,EAAO5kC,QAAQ,YAAa,IACrC,IAAI0E,EAAQkgC,IAAWrE,IAAiBqE,EAAOlgC,MAAM,gCACrD,GAAIA,EAAO,CACT,IAAK,CAAEqgC,EAAOC,EAAOC,EAAOC,GAASxgC,EACrCw7B,GAAU35B,IAAI,EAAG,EAAG,GAAGy+B,GAAmB,MAAVD,EAAgB,GAAK,EACrD3E,GAAU75B,IAAI,EAAG,EAAG,GAAG2+B,GAAmB,MAAVD,GAAiB,EAAI,EACrDjF,GAASmF,OAAO7E,GAAQJ,GAAUkF,MAAMhF,IAAYA,IACpD0E,EAAOO,eAAerF,GACxB,MACE8E,EAAOQ,WAETh+B,EAASu9B,aAAeD,CAC1B,CACF,CAEAP,aAAAA,CAAcrlC,GACZ,GAAqB,kBAAVA,EAAoB,CAC7B,IAAI0F,EAAQ1F,EAAM0F,MAAM,iBACpB+yB,EAAM/yB,EAAQwQ,WAAWxQ,EAAM,IAAMgzB,IACzC14B,GAAS24B,MAAMF,GAAO,EAAIA,EAAM,KAAO1wB,KAAKuhB,QAC9C,CACA,OAAOtpB,CACT,CAKAumC,yBAAAA,CAA0BpK,EAAUl2B,EAAS,IAAIm5B,EAAAA,SAC/Cn5B,EAAOsF,KAAK4wB,GACZ,MAAMx7B,EAAIoH,KAAKyyB,YAIf,OAHI75B,IACFsF,EAAOuI,EAAI/D,KAAK+7B,MAAMrK,EAAS3tB,EAAG/D,KAAK0Y,IAAIxiB,GAAK8J,KAAK0Y,IAAIgZ,EAAS3X,IAAM/Z,KAAK0Y,IAAIxiB,IAE5EsF,CACT,CAKAwgC,yBAAAA,CAA0BtK,EAAUl2B,EAAS,IAAIm5B,EAAAA,SAE/C,OADA8B,GAAU31B,KAAK4wB,GACRp0B,KAAKw+B,0BAA0Bx+B,KAAK2+B,aAAaxF,IAAYj7B,EACtE,CAMA0gC,OAAAA,CAAQC,EAAWC,GACjB,MAAM,eAACxD,EAAc,YAAE7I,GAAezyB,KACtC,GAAIs7B,EAAgB,CAClB,MAAMjG,EAASiG,EAAejT,YACxB0W,EAActM,EAAcmH,KAAyBF,KACrDjG,EAAOsL,EAAYvD,UACnB,SAACpH,EAAQ,GAAED,GAAMV,EAAKK,WAC5B,IAAK,IAAI91B,EAAI,EAAGA,EAAIm2B,EAAG9G,MAAOrvB,IAAK,CACjC,IAAIyI,EAAI4uB,EAAO,GAAMlB,EAAG6K,KAAKhhC,IAAMq3B,EAAO,GAAKA,EAAO,IACtD,MAAM3uB,EAAI2uB,EAAO,GAAMlB,EAAG8K,KAAKjhC,IAAMq3B,EAAO,GAAKA,EAAO,IACxD,IAAI5Y,EAAI,EACJgW,IACFhW,EAAIgW,EAAc/vB,KAAK+yB,IAAIhvB,EAAIgsB,GAAeA,EAC9ChsB,EAAI/D,KAAK8yB,IAAI/uB,EAAIgsB,GAAeA,GAElC2B,EAAS8K,OAAOlhC,EAAGyI,EAAGC,EAAG+V,EAC3B,CACAgX,EAAKd,eAAiB3yB,KAAKw7B,SAAS7I,eACpCc,EAAKZ,YAAc7yB,KAAKw7B,SAAS3I,YACjCkM,EAAYI,YAAcn/B,KAAKm/B,YAC/BJ,EAAYx+B,SAAS2yB,KAAOlzB,KAAKO,SAAS2yB,KAC1CoG,GAAUh/B,OAAS,EACnBykC,EAAYH,QAAQC,EAAWvF,IAC/B,IAAK,IAAIt7B,EAAI,EAAGA,EAAIs7B,GAAUh/B,OAAQ0D,IACpCs7B,GAAUt7B,GAAGohC,OAASp/B,KACtB8+B,EAAWz9B,KAAKi4B,GAAUt7B,GAE9B,CACF,CAEAwF,IAAAA,CAAK9F,GAEH,MAAM+1B,EAAOzzB,KAAKw7B,SAOlB,OANAjJ,MAAM/uB,KAAK9F,GACXsC,KAAKw7B,SAAW/H,EAEhBuG,GAAevyB,SAAQtJ,IACrB6B,KAAK7B,GAAQT,EAAOS,EAAK,IAEpB6B,IACT,CAEAmC,KAAAA,GACE,OAAO,IAAInC,KAAKoD,aAAcI,KAAKxD,KACrC,EAsCF,SAASq/B,GAAgB/D,EAAgB70B,EAAGC,GAC1C,IAAI44B,EAAe,KACnB,MAAM,YAACrX,GAAeqT,EAChBiE,EA4FR,SAA0BjE,GAExB,IAAIiE,EAAcC,GAAkBjgC,IAAI+7B,GACxC,IAAKiE,EAAa,CAChB,MAAM,eAACvX,EAAc,YAAEC,GAAeqT,EACtCiE,EAAc,IAAI1gC,IAClB,IAAK,IAAIb,EAAI,EAAGA,EAAIgqB,EAAe1tB,OAAQ0D,GAAK,EAAG,CACjD,MAAMyhC,EAAOzX,EAAehqB,EAAI,GAChC,IAAI0hC,EAAYH,EAAYhgC,IAAIkgC,GAC3BC,GACHH,EAAY//B,IAAIigC,EAAMC,EAAY,IAEpCA,EAAUr+B,KAAK,CACboF,EAAGuhB,EAAehqB,GAClB0I,EAAG+4B,EACHt5B,OAAQ8hB,EACR1F,UAAWvkB,EAAI,IAGbA,EAAI,GAAKgqB,EAAe1tB,QAC1BolC,EAAUr+B,KAAK,CACboF,EAAGuhB,EAAehqB,EAAI,GACtB0I,EAAG+4B,EACHt5B,OAAQ8hB,EACR1F,UAAWvkB,EAAI,EAAI,GAGzB,CACF,CAEA,OADAwhC,GAAkBhgC,IAAI87B,EAAgBiE,GAC/BA,CACT,CA3HsBI,CAAiBrE,GAGrC,IAAIsE,EAAchd,IAalB,OAZA2c,EAAY93B,SAAQ,CAACo4B,EAAQJ,KACvB/8B,KAAK0Y,IAAI1U,GAAK+4B,EAAOxX,EAAc,IAAMvlB,KAAK0Y,IAAI1U,GAAKk5B,EAAc3X,EAAc,MACrF2X,EAAcH,EAChB,IAIFF,EAAYhgC,IAAIqgC,GAAan4B,SAAQq4B,MAC9BR,GAAgB58B,KAAK0Y,IAAI3U,EAAIq5B,EAAMr5B,GAAK/D,KAAK0Y,IAAI3U,EAAI64B,EAAa74B,MACrE64B,EAAeQ,EACjB,IAEKR,CACT,CArDAvF,GAAetyB,SAAQtJ,IACrB,MAAM4hC,EAAa,YAAc5hC,EACjCjH,OAAOqL,eAAe23B,GAAK97B,UAAWD,EAAM,CAC1CoB,GAAAA,GACE,OAAOS,KAAK+/B,EACd,EACAvgC,GAAAA,CAAIvH,GACEA,IAAU+H,KAAK+/B,KACjB//B,KAAK+/B,GAAc9nC,EACnB+H,KAAKk7B,YAAa,EAEtB,GACA,IA4CJ,MAAM8E,GAAc,IAAIrhC,QAUxB,SAASshC,GAAkB3E,EAAgBh2B,EAAO8pB,GAChD,IAAI8Q,EACJ,GAAI5E,EAAgB,CAElB,IAAI6E,EAAaH,GAAYzgC,IAAI+7B,GACjC,GAAI6E,GAAcA,EAAW76B,QAAUA,GAAS66B,EAAW/Q,MAAQA,EACjE,OAAO+Q,EAAWD,MAGpB,MAAM,eAAClY,EAAc,YAAEC,GAAeqT,EAGtC,GAAIlM,EAAM9pB,EAAO,CACf,MAAM+C,EAAI/C,EACVA,EAAQ8pB,EACRA,EAAM/mB,CACR,CACA/C,EAAQ5C,KAAK2Z,IAAI/W,EAAO,GACxB8pB,EAAM1sB,KAAKkqB,IAAIwC,EAAKpH,EAAe1tB,OAAS,GAI5C4lC,EAAQ,GACR,IAAIE,EAAc,KAClB,IAAK,IAAIpiC,EAAIsH,EAAOtH,EAAIoxB,EAAKpxB,IAAK,CAChC,MAAM2zB,EAAK3J,EAAmB,EAAJhqB,GACpBqiC,EAAKrY,EAAmB,EAAJhqB,EAAQ,GAC5BqxB,EAAO3sB,KAAKkqB,IAAI+E,EAAI0O,GACpB/Q,EAAQ5sB,KAAK2Z,IAAIsV,EAAI0O,GACrBC,EAAStY,EAAmB,EAAJhqB,EAAQ,KACjCoiC,GAAeE,IAAWF,EAAYE,QAAUjR,EAAO+Q,EAAY9Q,OAASA,EAAQ8Q,EAAY/Q,QACnG+Q,EAAc,CACZ/Q,KAAMzM,IACN0M,OAAQ1M,IACR0d,OAAQA,EACRC,IAAKD,EAASrY,GAEhBiY,EAAM7+B,KAAK++B,IAEbA,EAAY/Q,KAAO3sB,KAAKkqB,IAAIyC,EAAM+Q,EAAY/Q,MAC9C+Q,EAAY9Q,MAAQ5sB,KAAK2Z,IAAIiT,EAAO8Q,EAAY9Q,MAClD,CAGA4Q,EAAMM,MAAK,CAACz4B,EAAGwI,IAAMA,EAAE+vB,OAASv4B,EAAEu4B,QAAUv4B,EAAEsnB,KAAO9e,EAAE8e,OACvD,IAAK,IAAIrxB,EAAIkiC,EAAM5lC,OAAS,EAAG0D,KAAM,GAAI,CACvC,MAAMyiC,EAAQP,EAAMliC,GACd0iC,EAAQR,EAAMliC,EAAI,GACpByiC,EAAMH,SAAWI,EAAMJ,QAAUG,EAAMpR,MAAQqR,EAAMpR,OAASmR,EAAMnR,OAASoR,EAAMrR,OACrFqR,EAAMrR,KAAO3sB,KAAKkqB,IAAI8T,EAAMrR,KAAMoR,EAAMpR,MACxCqR,EAAMpR,MAAQ5sB,KAAK2Z,IAAIqkB,EAAMpR,MAAOmR,EAAMnR,OAC1C4Q,EAAM5O,OAAOtzB,EAAG,GAEpB,CAEAgiC,GAAYxgC,IAAI87B,EAAgB,CAACh2B,QAAO8pB,MAAK8Q,SAC/C,CACA,OAAOA,CACT,CAEA,MAAMV,GAAoB,IAAI7gC","sources":["../node_modules/troika-worker-utils/dist/troika-worker-utils.esm.js","../node_modules/troika-three-utils/dist/troika-three-utils.esm.js","../node_modules/troika-three-text/dist/troika-three-text.esm.js"],"sourcesContent":["/**\n * Main content for the worker that handles the loading and execution of\n * modules within it.\n */\nfunction workerBootstrap() {\n  var modules = Object.create(null);\n\n  // Handle messages for registering a module\n  function registerModule(ref, callback) {\n    var id = ref.id;\n    var name = ref.name;\n    var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\n    var init = ref.init; if ( init === void 0 ) init = function(){};\n    var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\n\n    // Only register once\n    if (modules[id]) { return }\n\n    try {\n      // If any dependencies are modules, ensure they're registered and grab their value\n      dependencies = dependencies.map(function (dep) {\n        if (dep && dep.isWorkerModule) {\n          registerModule(dep, function (depResult) {\n            if (depResult instanceof Error) { throw depResult }\n          });\n          dep = modules[dep.id].value;\n        }\n        return dep\n      });\n\n      // Rehydrate functions\n      init = rehydrate((\"<\" + name + \">.init\"), init);\n      if (getTransferables) {\n        getTransferables = rehydrate((\"<\" + name + \">.getTransferables\"), getTransferables);\n      }\n\n      // Initialize the module and store its value\n      var value = null;\n      if (typeof init === 'function') {\n        value = init.apply(void 0, dependencies);\n      } else {\n        console.error('worker module init function failed to rehydrate');\n      }\n      modules[id] = {\n        id: id,\n        value: value,\n        getTransferables: getTransferables\n      };\n      callback(value);\n    } catch(err) {\n      if (!(err && err.noLog)) {\n        console.error(err);\n      }\n      callback(err);\n    }\n  }\n\n  // Handle messages for calling a registered module's result function\n  function callModule(ref, callback) {\n    var ref$1;\n\n    var id = ref.id;\n    var args = ref.args;\n    if (!modules[id] || typeof modules[id].value !== 'function') {\n      callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\n    }\n    try {\n      var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n      if (result && typeof result.then === 'function') {\n        result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\n      } else {\n        handleResult(result);\n      }\n    } catch(err) {\n      callback(err);\n    }\n    function handleResult(result) {\n      try {\n        var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n        if (!tx || !Array.isArray(tx) || !tx.length) {\n          tx = undefined; //postMessage is very picky about not passing null or empty transferables\n        }\n        callback(result, tx);\n      } catch(err) {\n        console.error(err);\n        callback(err);\n      }\n    }\n  }\n\n  function rehydrate(name, str) {\n    var result = void 0;\n    self.troikaDefine = function (r) { return result = r; };\n    var url = URL.createObjectURL(\n      new Blob(\n        [(\"/** \" + (name.replace(/\\*/g, '')) + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\")],\n        {type: 'application/javascript'}\n      )\n    );\n    try {\n      importScripts(url);\n    } catch(err) {\n      console.error(err);\n    }\n    URL.revokeObjectURL(url);\n    delete self.troikaDefine;\n    return result\n  }\n\n  // Handler for all messages within the worker\n  self.addEventListener('message', function (e) {\n    var ref = e.data;\n    var messageId = ref.messageId;\n    var action = ref.action;\n    var data = ref.data;\n    try {\n      // Module registration\n      if (action === 'registerModule') {\n        registerModule(data, function (result) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: {isCallable: typeof result === 'function'}\n            });\n          }\n        });\n      }\n      // Invocation\n      if (action === 'callModule') {\n        callModule(data, function (result, transferables) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: result\n            }, transferables || undefined);\n          }\n        });\n      }\n    } catch(err) {\n      postMessage({\n        messageId: messageId,\n        success: false,\n        error: err.stack\n      });\n    }\n  });\n}\n\n/**\n * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n * thread, for when the execution environment doesn't support web workers or they\n * are disallowed due to e.g. CSP security restrictions.\n */\nfunction defineMainThreadModule(options) {\n  var moduleFunc = function() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return moduleFunc._getInitResult().then(function (initResult) {\n      if (typeof initResult === 'function') {\n        return initResult.apply(void 0, args)\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  };\n  moduleFunc._getInitResult = function() {\n    // We can ignore getTransferables in main thread. TODO workerId?\n    var dependencies = options.dependencies;\n    var init = options.init;\n\n    // Resolve dependencies\n    dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) { return dep && dep._getInitResult ? dep._getInitResult() : dep; }\n    ) : [];\n\n    // Invoke init with the resolved dependencies\n    var initPromise = Promise.all(dependencies).then(function (deps) {\n      return init.apply(null, deps)\n    });\n\n    // Cache the resolved promise for subsequent calls\n    moduleFunc._getInitResult = function () { return initPromise; };\n\n    return initPromise\n  };\n  return moduleFunc\n}\n\nvar supportsWorkers = function () {\n  var supported = false;\n\n  // Only attempt worker initialization in browsers; elsewhere it would just be\n  // noise e.g. loading into a Node environment for SSR.\n  if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n    try {\n      // TODO additional checks for things like importScripts within the worker?\n      //  Would need to be an async check.\n      var worker = new Worker(\n        URL.createObjectURL(new Blob([''], { type: 'application/javascript' }))\n      );\n      worker.terminate();\n      supported = true;\n    } catch (err) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') ; else {\n        console.log(\n          (\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + (err.message) + \"]\")\n        );\n      }\n    }\n  }\n\n  // Cached result\n  supportsWorkers = function () { return supported; };\n  return supported\n};\n\nvar _workerModuleId = 0;\nvar _messageId = 0;\nvar _allowInitAsString = false;\nvar workers = Object.create(null);\nvar registeredModules = Object.create(null); //workerId -> Set<unregisterFn>\nvar openRequests = Object.create(null);\n\n\n/**\n * Define a module of code that will be executed with a web worker. This provides a simple\n * interface for moving chunks of logic off the main thread, and managing their dependencies\n * among one another.\n *\n * @param {object} options\n * @param {function} options.init\n * @param {array} [options.dependencies]\n * @param {function} [options.getTransferables]\n * @param {string} [options.name]\n * @param {string} [options.workerId]\n * @return {function(...[*]): {then}}\n */\nfunction defineWorkerModule(options) {\n  if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n    throw new Error('requires `options.init` function')\n  }\n  var dependencies = options.dependencies;\n  var init = options.init;\n  var getTransferables = options.getTransferables;\n  var workerId = options.workerId;\n\n  if (!supportsWorkers()) {\n    return defineMainThreadModule(options)\n  }\n\n  if (workerId == null) {\n    workerId = '#default';\n  }\n  var id = \"workerModule\" + (++_workerModuleId);\n  var name = options.name || id;\n  var registrationPromise = null;\n\n  dependencies = dependencies && dependencies.map(function (dep) {\n    // Wrap raw functions as worker modules with no dependencies\n    if (typeof dep === 'function' && !dep.workerModuleData) {\n      _allowInitAsString = true;\n      dep = defineWorkerModule({\n        workerId: workerId,\n        name: (\"<\" + name + \"> function dependency: \" + (dep.name)),\n        init: (\"function(){return (\\n\" + (stringifyFunction(dep)) + \"\\n)}\")\n      });\n      _allowInitAsString = false;\n    }\n    // Grab postable data for worker modules\n    if (dep && dep.workerModuleData) {\n      dep = dep.workerModuleData;\n    }\n    return dep\n  });\n\n  function moduleFunc() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    // Register this module if needed\n    if (!registrationPromise) {\n      registrationPromise = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\n      var unregister = function () {\n        registrationPromise = null;\n        registeredModules[workerId].delete(unregister);\n      }\n      ;(registeredModules[workerId] || (registeredModules[workerId] = new Set())).add(unregister);\n    }\n\n    // Invoke the module, returning a promise\n    return registrationPromise.then(function (ref) {\n      var isCallable = ref.isCallable;\n\n      if (isCallable) {\n        return callWorker(workerId,'callModule', {id: id, args: args})\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  }\n  moduleFunc.workerModuleData = {\n    isWorkerModule: true,\n    id: id,\n    name: name,\n    dependencies: dependencies,\n    init: stringifyFunction(init),\n    getTransferables: getTransferables && stringifyFunction(getTransferables)\n  };\n  return moduleFunc\n}\n\n/**\n * Terminate an active Worker by a workerId that was passed to defineWorkerModule.\n * This only terminates the Worker itself; the worker module will remain available\n * and if you call it again its Worker will be respawned.\n * @param {string} workerId\n */\nfunction terminateWorker(workerId) {\n  // Unregister all modules that were registered in that worker\n  if (registeredModules[workerId]) {\n    registeredModules[workerId].forEach(function (unregister) {\n      unregister();\n    });\n  }\n  // Terminate the Worker object\n  if (workers[workerId]) {\n    workers[workerId].terminate();\n    delete workers[workerId];\n  }\n}\n\n/**\n * Stringifies a function into a form that can be deserialized in the worker\n * @param fn\n */\nfunction stringifyFunction(fn) {\n  var str = fn.toString();\n  // If it was defined in object method/property format, it needs to be modified\n  if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n    str = 'function ' + str;\n  }\n  return str\n}\n\n\nfunction getWorker(workerId) {\n  var worker = workers[workerId];\n  if (!worker) {\n    // Bootstrap the worker's content\n    var bootstrap = stringifyFunction(workerBootstrap);\n\n    // Create the worker from the bootstrap function content\n    worker = workers[workerId] = new Worker(\n      URL.createObjectURL(\n        new Blob(\n          [(\"/** Worker Module Bootstrap: \" + (workerId.replace(/\\*/g, '')) + \" **/\\n\\n;(\" + bootstrap + \")()\")],\n          {type: 'application/javascript'}\n        )\n      )\n    );\n\n    // Single handler for response messages from the worker\n    worker.onmessage = function (e) {\n      var response = e.data;\n      var msgId = response.messageId;\n      var callback = openRequests[msgId];\n      if (!callback) {\n        throw new Error('WorkerModule response with empty or unknown messageId')\n      }\n      delete openRequests[msgId];\n      callback(response);\n    };\n  }\n  return worker\n}\n\n// Issue a call to the worker with a callback to handle the response\nfunction callWorker(workerId, action, data) {\n  return new Promise(function (resolve, reject) {\n    var messageId = ++_messageId;\n    openRequests[messageId] = function (response) {\n      if (response.success) {\n        resolve(response.result);\n      } else {\n        reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\n      }\n    };\n    getWorker(workerId).postMessage({\n      messageId: messageId,\n      action: action,\n      data: data\n    });\n  })\n}\n\nexport { defineWorkerModule, stringifyFunction, terminateWorker };\n","import { ShaderChunk, UniformsUtils, MeshDepthMaterial, RGBADepthPacking, MeshDistanceMaterial, ShaderLib, Matrix4, Vector3, Mesh, CylinderGeometry, Vector2, MeshStandardMaterial, DoubleSide } from 'three';\n\n/**\n * Regular expression for matching the `void main() {` opener line in GLSL.\n * @type {RegExp}\n */\nconst voidMainRegExp = /\\bvoid\\s+main\\s*\\(\\s*\\)\\s*{/g;\n\n/**\n * Recursively expands all `#include <xyz>` statements within string of shader code.\n * Copied from three's WebGLProgram#parseIncludes for external use.\n *\n * @param {string} source - The GLSL source code to evaluate\n * @return {string} The GLSL code with all includes expanded\n */\nfunction expandShaderIncludes( source ) {\n  const pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n  function replace(match, include) {\n    let chunk = ShaderChunk[include];\n    return chunk ? expandShaderIncludes(chunk) : match\n  }\n  return source.replace( pattern, replace )\n}\n\n/*\n * This is a direct copy of MathUtils.generateUUID from Three.js, to preserve compatibility with three\n * versions before 0.113.0 as it was changed from Math to MathUtils in that version.\n * https://github.com/mrdoob/three.js/blob/dd8b5aa3b270c17096b90945cd2d6d1b13aaec53/src/math/MathUtils.js#L16\n */\n\nconst _lut = [];\n\nfor (let i = 0; i < 256; i++) {\n  _lut[i] = (i < 16 ? '0' : '') + (i).toString(16);\n}\n\nfunction generateUUID() {\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n  const d0 = Math.random() * 0xffffffff | 0;\n  const d1 = Math.random() * 0xffffffff | 0;\n  const d2 = Math.random() * 0xffffffff | 0;\n  const d3 = Math.random() * 0xffffffff | 0;\n  const uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' +\n    _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' +\n    _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] +\n    _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff];\n\n  // .toUpperCase() here flattens concatenated strings to save heap memory space.\n  return uuid.toUpperCase()\n\n}\n\n// Local assign polyfill to avoid importing troika-core\nconst assign = Object.assign || function(/*target, ...sources*/) {\n  let target = arguments[0];\n  for (let i = 1, len = arguments.length; i < len; i++) {\n    let source = arguments[i];\n    if (source) {\n      for (let prop in source) {\n        if (Object.prototype.hasOwnProperty.call(source, prop)) {\n          target[prop] = source[prop];\n        }\n      }\n    }\n  }\n  return target\n};\n\n\nconst epoch = Date.now();\nconst CONSTRUCTOR_CACHE = new WeakMap();\nconst SHADER_UPGRADE_CACHE = new Map();\n\n// Material ids must be integers, but we can't access the increment from Three's `Material` module,\n// so let's choose a sufficiently large starting value that should theoretically never collide.\nlet materialInstanceId = 1e10;\n\n/**\n * A utility for creating a custom shader material derived from another material's\n * shaders. This allows you to inject custom shader logic and transforms into the\n * builtin ThreeJS materials without having to recreate them from scratch.\n *\n * @param {THREE.Material} baseMaterial - the original material to derive from\n *\n * @param {Object} options - How the base material should be modified.\n * @param {Object} options.defines - Custom `defines` for the material\n * @param {Object} options.extensions - Custom `extensions` for the material, e.g. `{derivatives: true}`\n * @param {Object} options.uniforms - Custom `uniforms` for use in the modified shader. These can\n *        be accessed and manipulated via the resulting material's `uniforms` property, just like\n *        in a ShaderMaterial. You do not need to repeat the base material's own uniforms here.\n * @param {String} options.timeUniform - If specified, a uniform of this name will be injected into\n *        both shaders, and it will automatically be updated on each render frame with a number of\n *        elapsed milliseconds. The \"zero\" epoch time is not significant so don't rely on this as a\n *        true calendar time.\n * @param {String} options.vertexDefs - Custom GLSL code to inject into the vertex shader's top-level\n *        definitions, above the `void main()` function.\n * @param {String} options.vertexMainIntro - Custom GLSL code to inject at the top of the vertex\n *        shader's `void main` function.\n * @param {String} options.vertexMainOutro - Custom GLSL code to inject at the end of the vertex\n *        shader's `void main` function.\n * @param {String} options.vertexTransform - Custom GLSL code to manipulate the `position`, `normal`,\n *        and/or `uv` vertex attributes. This code will be wrapped within a standalone function with\n *        those attributes exposed by their normal names as read/write values.\n * @param {String} options.fragmentDefs - Custom GLSL code to inject into the fragment shader's top-level\n *        definitions, above the `void main()` function.\n * @param {String} options.fragmentMainIntro - Custom GLSL code to inject at the top of the fragment\n *        shader's `void main` function.\n * @param {String} options.fragmentMainOutro - Custom GLSL code to inject at the end of the fragment\n *        shader's `void main` function. You can manipulate `gl_FragColor` here but keep in mind it goes\n *        after any of ThreeJS's color postprocessing shader chunks (tonemapping, fog, etc.), so if you\n *        want those to apply to your changes use `fragmentColorTransform` instead.\n * @param {String} options.fragmentColorTransform - Custom GLSL code to manipulate the `gl_FragColor`\n *        output value. Will be injected near the end of the `void main` function, but before any\n *        of ThreeJS's color postprocessing shader chunks (tonemapping, fog, etc.), and before the\n *        `fragmentMainOutro`.\n * @param {function<{vertexShader,fragmentShader}>:{vertexShader,fragmentShader}} options.customRewriter - A function\n *        for performing custom rewrites of the full shader code. Useful if you need to do something\n *        special that's not covered by the other builtin options. This function will be executed before\n *        any other transforms are applied.\n * @param {boolean} options.chained - Set to `true` to prototype-chain the derived material to the base\n *        material, rather than the default behavior of copying it. This allows the derived material to\n *        automatically pick up changes made to the base material and its properties. This can be useful\n *        where the derived material is hidden from the user as an implementation detail, allowing them\n *        to work with the original material like normal. But it can result in unexpected behavior if not\n *        handled carefully.\n *\n * @return {THREE.Material}\n *\n * The returned material will also have two new methods, `getDepthMaterial()` and `getDistanceMaterial()`,\n * which can be called to get a variant of the derived material for use in shadow casting. If the\n * target mesh is expected to cast shadows, then you can assign these to the mesh's `customDepthMaterial`\n * (for directional and spot lights) and/or `customDistanceMaterial` (for point lights) properties to\n * allow the cast shadow to honor your derived shader's vertex transforms and discarded fragments. These\n * will also set a custom `#define IS_DEPTH_MATERIAL` or `#define IS_DISTANCE_MATERIAL` that you can look\n * for in your derived shaders with `#ifdef` to customize their behavior for the depth or distance\n * scenarios, e.g. skipping antialiasing or expensive shader logic.\n */\nfunction createDerivedMaterial(baseMaterial, options) {\n  // Generate a key that is unique to the content of these `options`. We'll use this\n  // throughout for caching and for generating the upgraded shader code. This increases\n  // the likelihood that the resulting shaders will line up across multiple calls so\n  // their GL programs can be shared and cached.\n  const optionsKey = getKeyForOptions(options);\n\n  // First check to see if we've already derived from this baseMaterial using this\n  // unique set of options, and if so reuse the constructor to avoid some allocations.\n  let ctorsByDerivation = CONSTRUCTOR_CACHE.get(baseMaterial);\n  if (!ctorsByDerivation) {\n    CONSTRUCTOR_CACHE.set(baseMaterial, (ctorsByDerivation = Object.create(null)));\n  }\n  if (ctorsByDerivation[optionsKey]) {\n    return new ctorsByDerivation[optionsKey]()\n  }\n\n  const privateBeforeCompileProp = `_onBeforeCompile${optionsKey}`;\n\n  // Private onBeforeCompile handler that injects the modified shaders and uniforms when\n  // the renderer switches to this material's program\n  const onBeforeCompile = function (shaderInfo, renderer) {\n    baseMaterial.onBeforeCompile.call(this, shaderInfo, renderer);\n\n    // Upgrade the shaders, caching the result by incoming source code\n    const cacheKey = this.customProgramCacheKey() + '|' + shaderInfo.vertexShader + '|' + shaderInfo.fragmentShader;\n    let upgradedShaders = SHADER_UPGRADE_CACHE[cacheKey];\n    if (!upgradedShaders) {\n      const upgraded = upgradeShaders(this, shaderInfo, options, optionsKey);\n      upgradedShaders = SHADER_UPGRADE_CACHE[cacheKey] = upgraded;\n    }\n\n    // Inject upgraded shaders and uniforms into the program\n    shaderInfo.vertexShader = upgradedShaders.vertexShader;\n    shaderInfo.fragmentShader = upgradedShaders.fragmentShader;\n    assign(shaderInfo.uniforms, this.uniforms);\n\n    // Inject auto-updating time uniform if requested\n    if (options.timeUniform) {\n      shaderInfo.uniforms[options.timeUniform] = {\n        get value() {return Date.now() - epoch}\n      };\n    }\n\n    // Users can still add their own handlers on top of ours\n    if (this[privateBeforeCompileProp]) {\n      this[privateBeforeCompileProp](shaderInfo);\n    }\n  };\n\n  const DerivedMaterial = function DerivedMaterial() {\n    return derive(options.chained ? baseMaterial : baseMaterial.clone())\n  };\n\n  const derive = function(base) {\n    // Prototype chain to the base material\n    const derived = Object.create(base, descriptor);\n\n    // Store the baseMaterial for reference; this is always the original even when cloning\n    Object.defineProperty(derived, 'baseMaterial', { value: baseMaterial });\n\n    // Needs its own ids\n    Object.defineProperty(derived, 'id', { value: materialInstanceId++ });\n    derived.uuid = generateUUID();\n\n    // Merge uniforms, defines, and extensions\n    derived.uniforms = assign({}, base.uniforms, options.uniforms);\n    derived.defines = assign({}, base.defines, options.defines);\n    derived.defines[`TROIKA_DERIVED_MATERIAL_${optionsKey}`] = ''; //force a program change from the base material\n    derived.extensions = assign({}, base.extensions, options.extensions);\n\n    // Don't inherit EventDispatcher listeners\n    derived._listeners = undefined;\n\n    return derived\n  };\n\n  const descriptor = {\n    constructor: {value: DerivedMaterial},\n    isDerivedMaterial: {value: true},\n\n    customProgramCacheKey: {\n      writable: true,\n      configurable: true,\n      value: function () {\n        return baseMaterial.customProgramCacheKey() + '|' + optionsKey\n      }\n    },\n\n    onBeforeCompile: {\n      get() {\n        return onBeforeCompile\n      },\n      set(fn) {\n        this[privateBeforeCompileProp] = fn;\n      }\n    },\n\n    copy: {\n      writable: true,\n      configurable: true,\n      value: function (source) {\n        baseMaterial.copy.call(this, source);\n        if (!baseMaterial.isShaderMaterial && !baseMaterial.isDerivedMaterial) {\n          assign(this.extensions, source.extensions);\n          assign(this.defines, source.defines);\n          assign(this.uniforms, UniformsUtils.clone(source.uniforms));\n        }\n        return this\n      }\n    },\n\n    clone: {\n      writable: true,\n      configurable: true,\n      value: function () {\n        const newBase = new baseMaterial.constructor();\n        return derive(newBase).copy(this)\n      }\n    },\n\n    /**\n     * Utility to get a MeshDepthMaterial that will honor this derived material's vertex\n     * transformations and discarded fragments.\n     */\n    getDepthMaterial: {\n      writable: true,\n      configurable: true,\n      value: function() {\n        let depthMaterial = this._depthMaterial;\n        if (!depthMaterial) {\n          depthMaterial = this._depthMaterial = createDerivedMaterial(\n            baseMaterial.isDerivedMaterial\n              ? baseMaterial.getDepthMaterial()\n              : new MeshDepthMaterial({ depthPacking: RGBADepthPacking }),\n            options\n          );\n          depthMaterial.defines.IS_DEPTH_MATERIAL = '';\n          depthMaterial.uniforms = this.uniforms; //automatically recieve same uniform values\n        }\n        return depthMaterial\n      }\n    },\n\n    /**\n     * Utility to get a MeshDistanceMaterial that will honor this derived material's vertex\n     * transformations and discarded fragments.\n     */\n    getDistanceMaterial: {\n      writable: true,\n      configurable: true,\n      value: function() {\n        let distanceMaterial = this._distanceMaterial;\n        if (!distanceMaterial) {\n          distanceMaterial = this._distanceMaterial = createDerivedMaterial(\n            baseMaterial.isDerivedMaterial\n              ? baseMaterial.getDistanceMaterial()\n              : new MeshDistanceMaterial(),\n            options\n          );\n          distanceMaterial.defines.IS_DISTANCE_MATERIAL = '';\n          distanceMaterial.uniforms = this.uniforms; //automatically recieve same uniform values\n        }\n        return distanceMaterial\n      }\n    },\n\n    dispose: {\n      writable: true,\n      configurable: true,\n      value() {\n        const {_depthMaterial, _distanceMaterial} = this;\n        if (_depthMaterial) _depthMaterial.dispose();\n        if (_distanceMaterial) _distanceMaterial.dispose();\n        baseMaterial.dispose.call(this);\n      }\n    }\n  };\n\n  ctorsByDerivation[optionsKey] = DerivedMaterial;\n  return new DerivedMaterial()\n}\n\n\nfunction upgradeShaders(material, {vertexShader, fragmentShader}, options, key) {\n  let {\n    vertexDefs,\n    vertexMainIntro,\n    vertexMainOutro,\n    vertexTransform,\n    fragmentDefs,\n    fragmentMainIntro,\n    fragmentMainOutro,\n    fragmentColorTransform,\n    customRewriter,\n    timeUniform\n  } = options;\n\n  vertexDefs = vertexDefs || '';\n  vertexMainIntro = vertexMainIntro || '';\n  vertexMainOutro = vertexMainOutro || '';\n  fragmentDefs = fragmentDefs || '';\n  fragmentMainIntro = fragmentMainIntro || '';\n  fragmentMainOutro = fragmentMainOutro || '';\n\n  // Expand includes if needed\n  if (vertexTransform || customRewriter) {\n    vertexShader = expandShaderIncludes(vertexShader);\n  }\n  if (fragmentColorTransform || customRewriter) {\n    // We need to be able to find postprocessing chunks after include expansion in order to\n    // put them after the fragmentColorTransform, so mark them with comments first. Even if\n    // this particular derivation doesn't have a fragmentColorTransform, other derivations may,\n    // so we still mark them.\n    fragmentShader = fragmentShader.replace(\n      /^[ \\t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,\n      '\\n//!BEGIN_POST_CHUNK $1\\n$&\\n//!END_POST_CHUNK\\n'\n    );\n    fragmentShader = expandShaderIncludes(fragmentShader);\n  }\n\n  // Apply custom rewriter function\n  if (customRewriter) {\n    let res = customRewriter({vertexShader, fragmentShader});\n    vertexShader = res.vertexShader;\n    fragmentShader = res.fragmentShader;\n  }\n\n  // The fragmentColorTransform needs to go before any postprocessing chunks, so extract\n  // those and re-insert them into the outro in the correct place:\n  if (fragmentColorTransform) {\n    let postChunks = [];\n    fragmentShader = fragmentShader.replace(\n      /^\\/\\/!BEGIN_POST_CHUNK[^]+?^\\/\\/!END_POST_CHUNK/gm, // [^]+? = non-greedy match of any chars including newlines\n      match => {\n        postChunks.push(match);\n        return ''\n      }\n    );\n    fragmentMainOutro = `${fragmentColorTransform}\\n${postChunks.join('\\n')}\\n${fragmentMainOutro}`;\n  }\n\n  // Inject auto-updating time uniform if requested\n  if (timeUniform) {\n    const code = `\\nuniform float ${timeUniform};\\n`;\n    vertexDefs = code + vertexDefs;\n    fragmentDefs = code + fragmentDefs;\n  }\n\n  // Inject a function for the vertexTransform and rename all usages of position/normal/uv\n  if (vertexTransform) {\n    // Hoist these defs to the very top so they work in other function defs\n    vertexShader = `vec3 troika_position_${key};\nvec3 troika_normal_${key};\nvec2 troika_uv_${key};\n${vertexShader}\n`;\n    vertexDefs = `${vertexDefs}\nvoid troikaVertexTransform${key}(inout vec3 position, inout vec3 normal, inout vec2 uv) {\n  ${vertexTransform}\n}\n`;\n    vertexMainIntro = `\ntroika_position_${key} = vec3(position);\ntroika_normal_${key} = vec3(normal);\ntroika_uv_${key} = vec2(uv);\ntroikaVertexTransform${key}(troika_position_${key}, troika_normal_${key}, troika_uv_${key});\n${vertexMainIntro}\n`;\n    vertexShader = vertexShader.replace(/\\b(position|normal|uv)\\b/g, (match, match1, index, fullStr) => {\n      return /\\battribute\\s+vec[23]\\s+$/.test(fullStr.substr(0, index)) ? match1 : `troika_${match1}_${key}`\n    });\n\n    // Three r152 introduced the MAP_UV token, replace it too if it's pointing to the main 'uv'\n    // Perhaps the other textures too going forward?\n    if (!(material.map && material.map.channel > 0)) {\n      vertexShader = vertexShader.replace(/\\bMAP_UV\\b/g, `troika_uv_${key}`);\n    }\n  }\n\n  // Inject defs and intro/outro snippets\n  vertexShader = injectIntoShaderCode(vertexShader, key, vertexDefs, vertexMainIntro, vertexMainOutro);\n  fragmentShader = injectIntoShaderCode(fragmentShader, key, fragmentDefs, fragmentMainIntro, fragmentMainOutro);\n\n  return {\n    vertexShader,\n    fragmentShader\n  }\n}\n\nfunction injectIntoShaderCode(shaderCode, id, defs, intro, outro) {\n  if (intro || outro || defs) {\n    shaderCode = shaderCode.replace(voidMainRegExp, `\n${defs}\nvoid troikaOrigMain${id}() {`\n    );\n    shaderCode += `\nvoid main() {\n  ${intro}\n  troikaOrigMain${id}();\n  ${outro}\n}`;\n  }\n  return shaderCode\n}\n\n\nfunction optionsJsonReplacer(key, value) {\n  return key === 'uniforms' ? undefined : typeof value === 'function' ? value.toString() : value\n}\n\nlet _idCtr = 0;\nconst optionsHashesToIds = new Map();\nfunction getKeyForOptions(options) {\n  const optionsHash = JSON.stringify(options, optionsJsonReplacer);\n  let id = optionsHashesToIds.get(optionsHash);\n  if (id == null) {\n    optionsHashesToIds.set(optionsHash, (id = ++_idCtr));\n  }\n  return id\n}\n\n// Copied from threejs WebGLPrograms.js so we can resolve builtin materials to their shaders\n// TODO how can we keep this from getting stale?\nconst MATERIAL_TYPES_TO_SHADERS = {\n  MeshDepthMaterial: 'depth',\n  MeshDistanceMaterial: 'distanceRGBA',\n  MeshNormalMaterial: 'normal',\n  MeshBasicMaterial: 'basic',\n  MeshLambertMaterial: 'lambert',\n  MeshPhongMaterial: 'phong',\n  MeshToonMaterial: 'toon',\n  MeshStandardMaterial: 'physical',\n  MeshPhysicalMaterial: 'physical',\n  MeshMatcapMaterial: 'matcap',\n  LineBasicMaterial: 'basic',\n  LineDashedMaterial: 'dashed',\n  PointsMaterial: 'points',\n  ShadowMaterial: 'shadow',\n  SpriteMaterial: 'sprite'\n};\n\n/**\n * Given a Three.js `Material` instance, find the shaders/uniforms that will be\n * used to render that material.\n *\n * @param material - the Material instance\n * @return {object} - the material's shader info: `{uniforms:{}, fragmentShader:'', vertexShader:''}`\n */\nfunction getShadersForMaterial(material) {\n  let builtinType = MATERIAL_TYPES_TO_SHADERS[material.type];\n  return builtinType ? ShaderLib[builtinType] : material //TODO fallback for unknown type?\n}\n\n/**\n * Find all uniforms and their types within a shader code string.\n *\n * @param {string} shader - The shader code to parse\n * @return {object} mapping of uniform names to their glsl type\n */\nfunction getShaderUniformTypes(shader) {\n  let uniformRE = /\\buniform\\s+(int|float|vec[234]|mat[34])\\s+([A-Za-z_][\\w]*)/g;\n  let uniforms = Object.create(null);\n  let match;\n  while ((match = uniformRE.exec(shader)) !== null) {\n    uniforms[match[2]] = match[1];\n  }\n  return uniforms\n}\n\n/**\n * Helper for smoothing out the `m.getInverse(x)` --> `m.copy(x).invert()` conversion\n * that happened in ThreeJS r123.\n * @param {Matrix4} srcMatrix\n * @param {Matrix4} [tgtMatrix]\n */\nfunction invertMatrix4(srcMatrix, tgtMatrix = new Matrix4()) {\n  if (typeof tgtMatrix.invert === 'function') {\n    tgtMatrix.copy(srcMatrix).invert();\n  } else {\n    tgtMatrix.getInverse(srcMatrix);\n  }\n  return tgtMatrix\n}\n\n/*\nInput geometry is a cylinder with r=1, height in y dimension from 0 to 1,\ndivided into a reasonable number of height segments.\n*/\n\nconst vertexDefs = `\nuniform vec3 pointA;\nuniform vec3 controlA;\nuniform vec3 controlB;\nuniform vec3 pointB;\nuniform float radius;\nvarying float bezierT;\n\nvec3 cubicBezier(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\n  float t2 = 1.0 - t;\n  float b0 = t2 * t2 * t2;\n  float b1 = 3.0 * t * t2 * t2;\n  float b2 = 3.0 * t * t * t2;\n  float b3 = t * t * t;\n  return b0 * p1 + b1 * c1 + b2 * c2 + b3 * p2;\n}\n\nvec3 cubicBezierDerivative(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\n  float t2 = 1.0 - t;\n  return -3.0 * p1 * t2 * t2 +\n    c1 * (3.0 * t2 * t2 - 6.0 * t2 * t) +\n    c2 * (6.0 * t2 * t - 3.0 * t * t) +\n    3.0 * p2 * t * t;\n}\n`;\n\nconst vertexTransform = `\nfloat t = position.y;\nbezierT = t;\nvec3 bezierCenterPos = cubicBezier(pointA, controlA, controlB, pointB, t);\nvec3 bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t));\n\n// Make \"sideways\" always perpendicular to the camera ray; this ensures that any twists\n// in the cylinder occur where you won't see them: \nvec3 viewDirection = normalMatrix * vec3(0.0, 0.0, 1.0);\nif (bezierDir == viewDirection) {\n  bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t == 1.0 ? t - 0.0001 : t + 0.0001));\n}\nvec3 sideways = normalize(cross(bezierDir, viewDirection));\nvec3 upish = normalize(cross(sideways, bezierDir));\n\n// Build a matrix for transforming this disc in the cylinder:\nmat4 discTx;\ndiscTx[0].xyz = sideways * radius;\ndiscTx[1].xyz = bezierDir * radius;\ndiscTx[2].xyz = upish * radius;\ndiscTx[3].xyz = bezierCenterPos;\ndiscTx[3][3] = 1.0;\n\n// Apply transform, ignoring original y\nposition = (discTx * vec4(position.x, 0.0, position.z, 1.0)).xyz;\nnormal = normalize(mat3(discTx) * normal);\n`;\n\nconst fragmentDefs = `\nuniform vec3 dashing;\nvarying float bezierT;\n`;\n\nconst fragmentMainIntro = `\nif (dashing.x + dashing.y > 0.0) {\n  float dashFrac = mod(bezierT - dashing.z, dashing.x + dashing.y);\n  if (dashFrac > dashing.x) {\n    discard;\n  }\n}\n`;\n\n// Debugging: separate color for each of the 6 sides:\n// const fragmentColorTransform = `\n// float sideNum = floor(vUV.x * 6.0);\n// vec3 mixColor = sideNum < 1.0 ? vec3(1.0, 0.0, 0.0) :\n//   sideNum < 2.0 ? vec3(0.0, 1.0, 1.0) :\n//   sideNum < 3.0 ? vec3(1.0, 1.0, 0.0) :\n//   sideNum < 4.0 ? vec3(0.0, 0.0, 1.0) :\n//   sideNum < 5.0 ? vec3(0.0, 1.0, 0.0) :\n//   vec3(1.0, 0.0, 1.0);\n// gl_FragColor.xyz = mix(gl_FragColor.xyz, mixColor, 0.5);\n// `\n\n\n\nfunction createBezierMeshMaterial(baseMaterial) {\n  return createDerivedMaterial(\n    baseMaterial,\n    {\n      chained: true,\n      uniforms: {\n        pointA: {value: new Vector3()},\n        controlA: {value: new Vector3()},\n        controlB: {value: new Vector3()},\n        pointB: {value: new Vector3()},\n        radius: {value: 0.01},\n        dashing: {value: new Vector3()} //on, off, offset\n      },\n      vertexDefs,\n      vertexTransform,\n      fragmentDefs,\n      fragmentMainIntro\n    }\n  )\n}\n\nlet geometry = null;\n\nconst defaultBaseMaterial = /*#__PURE__*/new MeshStandardMaterial({color: 0xffffff, side: DoubleSide});\n\n\n/**\n * A ThreeJS `Mesh` that bends a tube shape along a 3D cubic bezier path. The bending is done\n * by deforming a straight cylindrical geometry in the vertex shader based on a set of four\n * control point uniforms. It patches the necessary GLSL into the mesh's assigned `material`\n * automatically.\n *\n * The cubiz bezier path is determined by its four `Vector3` properties:\n * - `pointA`\n * - `controlA`\n * - `controlB`\n * - `pointB`\n *\n * The tube's radius is controlled by its `radius` property, which defaults to `0.01`.\n *\n * You can also give the tube a dashed appearance with two properties:\n *\n * - `dashArray` - an array of two numbers, defining the length of \"on\" and \"off\" parts of\n *   the dash. Each is a 0-1 ratio of the entire path's length. (Actually this is the `t` length\n *   used as input to the cubic bezier function, not its visible length.)\n * - `dashOffset` - offset of where the dash starts. You can animate this to make the dashes move.\n *\n * Note that the dashes will appear like a hollow tube, not solid. This will be more apparent on\n * thicker tubes.\n *\n * TODO: proper geometry bounding sphere and raycasting\n * TODO: allow control of the geometry's segment counts\n */\nclass BezierMesh extends Mesh {\n  static getGeometry() {\n    return geometry || (geometry =\n      new CylinderGeometry(1, 1, 1, 6, 64).translate(0, 0.5, 0)\n    )\n  }\n\n  constructor() {\n    super(\n      BezierMesh.getGeometry(),\n      defaultBaseMaterial\n    );\n\n    this.pointA = new Vector3();\n    this.controlA = new Vector3();\n    this.controlB = new Vector3();\n    this.pointB = new Vector3();\n    this.radius = 0.01;\n    this.dashArray = new Vector2();\n    this.dashOffset = 0;\n\n    // TODO - disabling frustum culling until I figure out how to customize the\n    //  geometry's bounding sphere that gets used\n    this.frustumCulled = false;\n  }\n\n  // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n  // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n  get material() {\n    let derivedMaterial = this._derivedMaterial;\n    const baseMaterial = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = defaultBaseMaterial.clone());\n    if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n      derivedMaterial = this._derivedMaterial = createBezierMeshMaterial(baseMaterial);\n      // dispose the derived material when its base material is disposed:\n      baseMaterial.addEventListener('dispose', function onDispose() {\n        baseMaterial.removeEventListener('dispose', onDispose);\n        derivedMaterial.dispose();\n      });\n    }\n    return derivedMaterial\n  }\n  set material(baseMaterial) {\n    this._baseMaterial = baseMaterial;\n  }\n\n  // Create and update material for shadows upon request:\n  get customDepthMaterial() {\n    return this.material.getDepthMaterial()\n  }\n  get customDistanceMaterial() {\n    return this.material.getDistanceMaterial()\n  }\n\n  onBeforeRender() {\n    const {uniforms} = this.material;\n    const {pointA, controlA, controlB, pointB, radius, dashArray, dashOffset} = this;\n    uniforms.pointA.value.copy(pointA);\n    uniforms.controlA.value.copy(controlA);\n    uniforms.controlB.value.copy(controlB);\n    uniforms.pointB.value.copy(pointB);\n    uniforms.radius.value = radius;\n    uniforms.dashing.value.set(dashArray.x, dashArray.y, dashOffset || 0);\n  }\n\n  raycast(/*raycaster, intersects*/) {\n    // TODO - just fail for now\n  }\n}\n\nexport { BezierMesh, createDerivedMaterial, expandShaderIncludes, getShaderUniformTypes, getShadersForMaterial, invertMatrix4, voidMainRegExp };\n","import { Texture, LinearFilter, Color, InstancedBufferGeometry, Sphere, Box3, BackSide, DoubleSide, InstancedBufferAttribute, PlaneGeometry, BufferGeometry, Float32BufferAttribute, Vector2, Vector4, Matrix3, Mesh, FrontSide, MeshBasicMaterial, Matrix4, Vector3 } from 'three';\nimport { terminateWorker, defineWorkerModule } from 'troika-worker-utils';\nimport createSDFGenerator from 'webgl-sdf-generator';\nimport bidiFactory from 'bidi-js';\nimport { createDerivedMaterial, voidMainRegExp } from 'troika-three-utils';\n\n/**\n * Factory function that creates a self-contained environment for processing text typesetting requests.\n *\n * It is important that this function has no closure dependencies, so that it can be easily injected\n * into the source for a Worker without requiring a build step or complex dependency loading. All its\n * dependencies must be passed in at initialization.\n *\n * @param {function} fontParser - a function that accepts an ArrayBuffer of the font data and returns\n * a standardized structure giving access to the font and its glyphs:\n *   {\n *     unitsPerEm: number,\n *     ascender: number,\n *     descender: number,\n *     capHeight: number,\n *     xHeight: number,\n *     lineGap: number,\n *     forEachGlyph(string, fontSize, letterSpacing, callback) {\n *       //invokes callback for each glyph to render, passing it an object:\n *       callback({\n *         index: number,\n *         advanceWidth: number,\n *         xMin: number,\n *         yMin: number,\n *         xMax: number,\n *         yMax: number,\n *         path: string,\n *         pathCommandCount: number\n *       })\n *     }\n *   }\n * @param {object} bidi - the bidi.js implementation object\n * @param {Object} config\n * @return {Object}\n */\nfunction createTypesetter(fontParser, bidi, config) {\n\n  const {\n    defaultFontURL\n  } = config;\n\n  /**\n   * Holds parsed font objects by url\n   */\n  const fonts = Object.create(null);\n\n  const INF = Infinity;\n\n  // Set of Unicode Default_Ignorable_Code_Point characters, these will not produce visible glyphs\n  // eslint-disable-next-line no-misleading-character-class\n  const DEFAULT_IGNORABLE_CHARS = /[\\u00AD\\u034F\\u061C\\u115F-\\u1160\\u17B4-\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8]/;\n\n  // This regex (instead of /\\s/) allows us to select all whitespace EXCEPT for non-breaking white spaces\n  const lineBreakingWhiteSpace = `[^\\\\S\\\\u00A0]`;\n\n  // Incomplete set of characters that allow line breaking after them\n  // In the future we may consider a full Unicode line breaking algorithm impl: https://www.unicode.org/reports/tr14\n  const BREAK_AFTER_CHARS = new RegExp(`${lineBreakingWhiteSpace}|[\\\\-\\\\u007C\\\\u00AD\\\\u2010\\\\u2012-\\\\u2014\\\\u2027\\\\u2056\\\\u2E17\\\\u2E40]`);\n\n  /**\n   * Load a given font url\n   */\n  function doLoadFont(url, callback) {\n    function tryLoad() {\n      const onError = err => {\n        console.error(`Failure loading font ${url}${url === defaultFontURL ? '' : '; trying fallback'}`, err);\n        if (url !== defaultFontURL) {\n          url = defaultFontURL;\n          tryLoad();\n        }\n      };\n      try {\n        const request = new XMLHttpRequest();\n        request.open('get', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function () {\n          if (request.status >= 400) {\n            onError(new Error(request.statusText));\n          }\n          else if (request.status > 0) {\n            try {\n              const fontObj = fontParser(request.response);\n              callback(fontObj);\n            } catch (e) {\n              onError(e);\n            }\n          }\n        };\n        request.onerror = onError;\n        request.send();\n      } catch(err) {\n        onError(err);\n      }\n    }\n    tryLoad();\n  }\n\n\n  /**\n   * Load a given font url if needed, invoking a callback when it's loaded. If already\n   * loaded, the callback will be called synchronously.\n   */\n  function loadFont(fontUrl, callback) {\n    if (!fontUrl) fontUrl = defaultFontURL;\n    let font = fonts[fontUrl];\n    if (font) {\n      // if currently loading font, add to callbacks, otherwise execute immediately\n      if (font.pending) {\n        font.pending.push(callback);\n      } else {\n        callback(font);\n      }\n    } else {\n      fonts[fontUrl] = {pending: [callback]};\n      doLoadFont(fontUrl, fontObj => {\n        let callbacks = fonts[fontUrl].pending;\n        fonts[fontUrl] = fontObj;\n        callbacks.forEach(cb => cb(fontObj));\n      });\n    }\n  }\n\n\n  /**\n   * Main entry point.\n   * Process a text string with given font and formatting parameters, and return all info\n   * necessary to render all its glyphs.\n   */\n  function typeset(\n    {\n      text='',\n      font=defaultFontURL,\n      sdfGlyphSize=64,\n      fontSize=1,\n      letterSpacing=0,\n      lineHeight='normal',\n      maxWidth=INF,\n      direction,\n      textAlign='left',\n      textIndent=0,\n      whiteSpace='normal',\n      overflowWrap='normal',\n      anchorX = 0,\n      anchorY = 0,\n      includeCaretPositions=false,\n      chunkedBoundsSize=8192,\n      colorRanges=null\n    },\n    callback,\n    metricsOnly=false\n  ) {\n    const mainStart = now();\n    const timings = {fontLoad: 0, typesetting: 0};\n\n    // Ensure newlines are normalized\n    if (text.indexOf('\\r') > -1) {\n      console.info('Typesetter: got text with \\\\r chars; normalizing to \\\\n');\n      text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    }\n\n    // Ensure we've got numbers not strings\n    fontSize = +fontSize;\n    letterSpacing = +letterSpacing;\n    maxWidth = +maxWidth;\n    lineHeight = lineHeight || 'normal';\n    textIndent = +textIndent;\n\n    loadFont(font, fontObj => {\n      const hasMaxWidth = isFinite(maxWidth);\n      let glyphIds = null;\n      let glyphPositions = null;\n      let glyphData = null;\n      let glyphColors = null;\n      let caretPositions = null;\n      let visibleBounds = null;\n      let chunkedBounds = null;\n      let maxLineWidth = 0;\n      let renderableGlyphCount = 0;\n      let canWrap = whiteSpace !== 'nowrap';\n      const {ascender, descender, unitsPerEm, lineGap, capHeight, xHeight} = fontObj;\n      timings.fontLoad = now() - mainStart;\n      const typesetStart = now();\n\n      // Find conversion between native font units and fontSize units; this will already be done\n      // for the gx/gy values below but everything else we'll need to convert\n      const fontSizeMult = fontSize / unitsPerEm;\n\n      // Determine appropriate value for 'normal' line height based on the font's actual metrics\n      // TODO this does not guarantee individual glyphs won't exceed the line height, e.g. Roboto; should we use yMin/Max instead?\n      if (lineHeight === 'normal') {\n        lineHeight = (ascender - descender + lineGap) / unitsPerEm;\n      }\n\n      // Determine line height and leading adjustments\n      lineHeight = lineHeight * fontSize;\n      const halfLeading = (lineHeight - (ascender - descender) * fontSizeMult) / 2;\n      const topBaseline = -(ascender * fontSizeMult + halfLeading);\n      const caretHeight = Math.min(lineHeight, (ascender - descender) * fontSizeMult);\n      const caretBottomOffset = (ascender + descender) / 2 * fontSizeMult - caretHeight / 2;\n\n      // Distribute glyphs into lines based on wrapping\n      let lineXOffset = textIndent;\n      let currentLine = new TextLine();\n      const lines = [currentLine];\n\n      fontObj.forEachGlyph(text, fontSize, letterSpacing, (glyphObj, glyphX, charIndex) => {\n        const char = text.charAt(charIndex);\n        const glyphWidth = glyphObj.advanceWidth * fontSizeMult;\n        const curLineCount = currentLine.count;\n        let nextLine;\n\n        // Calc isWhitespace and isEmpty once per glyphObj\n        if (!('isEmpty' in glyphObj)) {\n          glyphObj.isWhitespace = !!char && new RegExp(lineBreakingWhiteSpace).test(char);\n          glyphObj.canBreakAfter = !!char && BREAK_AFTER_CHARS.test(char);\n          glyphObj.isEmpty = glyphObj.xMin === glyphObj.xMax || glyphObj.yMin === glyphObj.yMax || DEFAULT_IGNORABLE_CHARS.test(char);\n        }\n        if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n          renderableGlyphCount++;\n        }\n\n        // If a non-whitespace character overflows the max width, we need to soft-wrap\n        if (canWrap && hasMaxWidth && !glyphObj.isWhitespace && glyphX + glyphWidth + lineXOffset > maxWidth && curLineCount) {\n          // If it's the first char after a whitespace, start a new line\n          if (currentLine.glyphAt(curLineCount - 1).glyphObj.canBreakAfter) {\n            nextLine = new TextLine();\n            lineXOffset = -glyphX;\n          } else {\n            // Back up looking for a whitespace character to wrap at\n            for (let i = curLineCount; i--;) {\n              // If we got the start of the line there's no soft break point; make hard break if overflowWrap='break-word'\n              if (i === 0 && overflowWrap === 'break-word') {\n                nextLine = new TextLine();\n                lineXOffset = -glyphX;\n                break\n              }\n              // Found a soft break point; move all chars since it to a new line\n              else if (currentLine.glyphAt(i).glyphObj.canBreakAfter) {\n                nextLine = currentLine.splitAt(i + 1);\n                const adjustX = nextLine.glyphAt(0).x;\n                lineXOffset -= adjustX;\n                for (let j = nextLine.count; j--;) {\n                  nextLine.glyphAt(j).x -= adjustX;\n                }\n                break\n              }\n            }\n          }\n          if (nextLine) {\n            currentLine.isSoftWrapped = true;\n            currentLine = nextLine;\n            lines.push(currentLine);\n            maxLineWidth = maxWidth; //after soft wrapping use maxWidth as calculated width\n          }\n        }\n\n        let fly = currentLine.glyphAt(currentLine.count);\n        fly.glyphObj = glyphObj;\n        fly.x = glyphX + lineXOffset;\n        fly.width = glyphWidth;\n        fly.charIndex = charIndex;\n\n        // Handle hard line breaks\n        if (char === '\\n') {\n          currentLine = new TextLine();\n          lines.push(currentLine);\n          lineXOffset = -(glyphX + glyphWidth + (letterSpacing * fontSize)) + textIndent;\n        }\n      });\n\n      // Calculate width of each line (excluding trailing whitespace) and maximum block width\n      lines.forEach(line => {\n        for (let i = line.count; i--;) {\n          let {glyphObj, x, width} = line.glyphAt(i);\n          if (!glyphObj.isWhitespace) {\n            line.width = x + width;\n            if (line.width > maxLineWidth) {\n              maxLineWidth = line.width;\n            }\n            return\n          }\n        }\n      });\n\n      // Find overall position adjustments for anchoring\n      let anchorXOffset = 0;\n      let anchorYOffset = 0;\n      if (anchorX) {\n        if (typeof anchorX === 'number') {\n          anchorXOffset = -anchorX;\n        }\n        else if (typeof anchorX === 'string') {\n          anchorXOffset = -maxLineWidth * (\n            anchorX === 'left' ? 0 :\n            anchorX === 'center' ? 0.5 :\n            anchorX === 'right' ? 1 :\n            parsePercent(anchorX)\n          );\n        }\n      }\n      if (anchorY) {\n        if (typeof anchorY === 'number') {\n          anchorYOffset = -anchorY;\n        }\n        else if (typeof anchorY === 'string') {\n          let height = lines.length * lineHeight;\n          anchorYOffset = anchorY === 'top' ? 0 :\n            anchorY === 'top-baseline' ? -topBaseline :\n            anchorY === 'top-cap' ? -topBaseline - capHeight * fontSizeMult :\n            anchorY === 'top-ex' ? -topBaseline - xHeight * fontSizeMult :\n            anchorY === 'middle' ? height / 2 :\n            anchorY === 'bottom' ? height :\n            anchorY === 'bottom-baseline' ? height - halfLeading + descender * fontSizeMult :\n            parsePercent(anchorY) * height;\n        }\n      }\n\n      if (!metricsOnly) {\n        // Resolve bidi levels\n        const bidiLevelsResult = bidi.getEmbeddingLevels(text, direction);\n\n        // Process each line, applying alignment offsets, adding each glyph to the atlas, and\n        // collecting all renderable glyphs into a single collection.\n        glyphIds = new Uint16Array(renderableGlyphCount);\n        glyphPositions = new Float32Array(renderableGlyphCount * 2);\n        glyphData = {};\n        visibleBounds = [INF, INF, -INF, -INF];\n        chunkedBounds = [];\n        let lineYOffset = topBaseline;\n        if (includeCaretPositions) {\n          caretPositions = new Float32Array(text.length * 3);\n        }\n        if (colorRanges) {\n          glyphColors = new Uint8Array(renderableGlyphCount * 3);\n        }\n        let renderableGlyphIndex = 0;\n        let prevCharIndex = -1;\n        let colorCharIndex = -1;\n        let chunk;\n        let currentColor;\n        lines.forEach((line, lineIndex) => {\n          let {count:lineGlyphCount, width:lineWidth} = line;\n\n          // Ignore empty lines\n          if (lineGlyphCount > 0) {\n            // Count trailing whitespaces, we want to ignore these for certain things\n            let trailingWhitespaceCount = 0;\n            for (let i = lineGlyphCount; i-- && line.glyphAt(i).glyphObj.isWhitespace;) {\n              trailingWhitespaceCount++;\n            }\n\n            // Apply horizontal alignment adjustments\n            let lineXOffset = 0;\n            let justifyAdjust = 0;\n            if (textAlign === 'center') {\n              lineXOffset = (maxLineWidth - lineWidth) / 2;\n            } else if (textAlign === 'right') {\n              lineXOffset = maxLineWidth - lineWidth;\n            } else if (textAlign === 'justify' && line.isSoftWrapped) {\n              // count non-trailing whitespace characters, and we'll adjust the offsets per character in the next loop\n              let whitespaceCount = 0;\n              for (let i = lineGlyphCount - trailingWhitespaceCount; i--;) {\n                if (line.glyphAt(i).glyphObj.isWhitespace) {\n                  whitespaceCount++;\n                }\n              }\n              justifyAdjust = (maxLineWidth - lineWidth) / whitespaceCount;\n            }\n            if (justifyAdjust || lineXOffset) {\n              let justifyOffset = 0;\n              for (let i = 0; i < lineGlyphCount; i++) {\n                let glyphInfo = line.glyphAt(i);\n                const glyphObj = glyphInfo.glyphObj;\n                glyphInfo.x += lineXOffset + justifyOffset;\n                // Expand non-trailing whitespaces for justify alignment\n                if (justifyAdjust !== 0 && glyphObj.isWhitespace && i < lineGlyphCount - trailingWhitespaceCount) {\n                  justifyOffset += justifyAdjust;\n                  glyphInfo.width += justifyAdjust;\n                }\n              }\n            }\n\n            // Perform bidi range flipping\n            const flips = bidi.getReorderSegments(\n              text, bidiLevelsResult, line.glyphAt(0).charIndex, line.glyphAt(line.count - 1).charIndex\n            );\n            for (let fi = 0; fi < flips.length; fi++) {\n              const [start, end] = flips[fi];\n              // Map start/end string indices to indices in the line\n              let left = Infinity, right = -Infinity;\n              for (let i = 0; i < lineGlyphCount; i++) {\n                if (line.glyphAt(i).charIndex >= start) { // gte to handle removed characters\n                  let startInLine = i, endInLine = i;\n                  for (; endInLine < lineGlyphCount; endInLine++) {\n                    let info = line.glyphAt(endInLine);\n                    if (info.charIndex > end) {\n                      break\n                    }\n                    if (endInLine < lineGlyphCount - trailingWhitespaceCount) { //don't include trailing ws in flip width\n                      left = Math.min(left, info.x);\n                      right = Math.max(right, info.x + info.width);\n                    }\n                  }\n                  for (let j = startInLine; j < endInLine; j++) {\n                    const glyphInfo = line.glyphAt(j);\n                    glyphInfo.x = right - (glyphInfo.x + glyphInfo.width - left);\n                  }\n                  break\n                }\n              }\n            }\n\n            // Assemble final data arrays\n            let glyphObj;\n            const setGlyphObj = g => glyphObj = g;\n            for (let i = 0; i < lineGlyphCount; i++) {\n              let glyphInfo = line.glyphAt(i);\n              glyphObj = glyphInfo.glyphObj;\n              const glyphId = glyphObj.index;\n\n              // Replace mirrored characters in rtl\n              const rtl = bidiLevelsResult.levels[glyphInfo.charIndex] & 1; //odd level means rtl\n              if (rtl) {\n                const mirrored = bidi.getMirroredCharacter(text[glyphInfo.charIndex]);\n                if (mirrored) {\n                  fontObj.forEachGlyph(mirrored, 0, 0, setGlyphObj);\n                }\n              }\n\n              // Add caret positions\n              if (includeCaretPositions) {\n                const {charIndex} = glyphInfo;\n                const caretLeft = glyphInfo.x + anchorXOffset;\n                const caretRight = glyphInfo.x + glyphInfo.width + anchorXOffset;\n                caretPositions[charIndex * 3] = rtl ? caretRight : caretLeft; //start edge x\n                caretPositions[charIndex * 3 + 1] = rtl ? caretLeft : caretRight; //end edge x\n                caretPositions[charIndex * 3 + 2] = lineYOffset + caretBottomOffset + anchorYOffset; //common bottom y\n\n                // If we skipped any chars from the previous glyph (due to ligature subs), fill in caret\n                // positions for those missing char indices; currently this uses a best-guess by dividing\n                // the ligature's width evenly. In the future we may try to use the font's LigatureCaretList\n                // table to get better interior caret positions.\n                const ligCount = charIndex - prevCharIndex;\n                if (ligCount > 1) {\n                  fillLigatureCaretPositions(caretPositions, prevCharIndex, ligCount);\n                }\n                prevCharIndex = charIndex;\n              }\n\n              // Track current color range\n              if (colorRanges) {\n                const {charIndex} = glyphInfo;\n                while(charIndex > colorCharIndex) {\n                  colorCharIndex++;\n                  if (colorRanges.hasOwnProperty(colorCharIndex)) {\n                    currentColor = colorRanges[colorCharIndex];\n                  }\n                }\n              }\n\n              // Get atlas data for renderable glyphs\n              if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n                const idx = renderableGlyphIndex++;\n\n                // Add this glyph's path data\n                if (!glyphData[glyphId]) {\n                  glyphData[glyphId] = {\n                    path: glyphObj.path,\n                    pathBounds: [glyphObj.xMin, glyphObj.yMin, glyphObj.xMax, glyphObj.yMax]\n                  };\n                }\n\n                // Determine final glyph position and add to glyphPositions array\n                const glyphX = glyphInfo.x + anchorXOffset;\n                const glyphY = lineYOffset + anchorYOffset;\n                glyphPositions[idx * 2] = glyphX;\n                glyphPositions[idx * 2 + 1] = glyphY;\n\n                // Track total visible bounds\n                const visX0 = glyphX + glyphObj.xMin * fontSizeMult;\n                const visY0 = glyphY + glyphObj.yMin * fontSizeMult;\n                const visX1 = glyphX + glyphObj.xMax * fontSizeMult;\n                const visY1 = glyphY + glyphObj.yMax * fontSizeMult;\n                if (visX0 < visibleBounds[0]) visibleBounds[0] = visX0;\n                if (visY0 < visibleBounds[1]) visibleBounds[1] = visY0;\n                if (visX1 > visibleBounds[2]) visibleBounds[2] = visX1;\n                if (visY1 > visibleBounds[3]) visibleBounds[3] = visY1;\n\n                // Track bounding rects for each chunk of N glyphs\n                if (idx % chunkedBoundsSize === 0) {\n                  chunk = {start: idx, end: idx, rect: [INF, INF, -INF, -INF]};\n                  chunkedBounds.push(chunk);\n                }\n                chunk.end++;\n                const chunkRect = chunk.rect;\n                if (visX0 < chunkRect[0]) chunkRect[0] = visX0;\n                if (visY0 < chunkRect[1]) chunkRect[1] = visY0;\n                if (visX1 > chunkRect[2]) chunkRect[2] = visX1;\n                if (visY1 > chunkRect[3]) chunkRect[3] = visY1;\n\n                // Add to glyph ids array\n                glyphIds[idx] = glyphId;\n\n                // Add colors\n                if (colorRanges) {\n                  const start = idx * 3;\n                  glyphColors[start] = currentColor >> 16 & 255;\n                  glyphColors[start + 1] = currentColor >> 8 & 255;\n                  glyphColors[start + 2] = currentColor & 255;\n                }\n              }\n            }\n          }\n\n          // Increment y offset for next line\n          lineYOffset -= lineHeight;\n        });\n\n        // Fill in remaining caret positions in case the final character was a ligature\n        if (caretPositions) {\n          const ligCount = text.length - prevCharIndex;\n          if (ligCount > 1) {\n            fillLigatureCaretPositions(caretPositions, prevCharIndex, ligCount);\n          }\n        }\n      }\n\n      // Timing stats\n      timings.typesetting = now() - typesetStart;\n\n      callback({\n        glyphIds, //font indices for each glyph\n        glyphPositions, //x,y of each glyph's origin in layout\n        glyphData, //dict holding data about each glyph appearing in the text\n        caretPositions, //startX,endX,bottomY caret positions for each char\n        caretHeight, //height of cursor from bottom to top\n        glyphColors, //color for each glyph, if color ranges supplied\n        chunkedBounds, //total rects per (n=chunkedBoundsSize) consecutive glyphs\n        fontSize, //calculated em height\n        unitsPerEm, //font units per em\n        ascender: ascender * fontSizeMult, //font ascender\n        descender: descender * fontSizeMult, //font descender\n        capHeight: capHeight * fontSizeMult, //font cap-height\n        xHeight: xHeight * fontSizeMult, //font x-height\n        lineHeight, //computed line height\n        topBaseline, //y coordinate of the top line's baseline\n        blockBounds: [ //bounds for the whole block of text, including vertical padding for lineHeight\n          anchorXOffset,\n          anchorYOffset - lines.length * lineHeight,\n          anchorXOffset + maxLineWidth,\n          anchorYOffset\n        ],\n        visibleBounds, //total bounds of visible text paths, may be larger or smaller than blockBounds\n        timings\n      });\n    });\n  }\n\n\n  /**\n   * For a given text string and font parameters, determine the resulting block dimensions\n   * after wrapping for the given maxWidth.\n   * @param args\n   * @param callback\n   */\n  function measure(args, callback) {\n    typeset(args, (result) => {\n      const [x0, y0, x1, y1] = result.blockBounds;\n      callback({\n        width: x1 - x0,\n        height: y1 - y0\n      });\n    }, {metricsOnly: true});\n  }\n\n  function parsePercent(str) {\n    let match = str.match(/^([\\d.]+)%$/);\n    let pct = match ? parseFloat(match[1]) : NaN;\n    return isNaN(pct) ? 0 : pct / 100\n  }\n\n  function fillLigatureCaretPositions(caretPositions, ligStartIndex, ligCount) {\n    const ligStartX = caretPositions[ligStartIndex * 3];\n    const ligEndX = caretPositions[ligStartIndex * 3 + 1];\n    const ligY = caretPositions[ligStartIndex * 3 + 2];\n    const guessedAdvanceX = (ligEndX - ligStartX) / ligCount;\n    for (let i = 0; i < ligCount; i++) {\n      const startIndex = (ligStartIndex + i) * 3;\n      caretPositions[startIndex] = ligStartX + guessedAdvanceX * i;\n      caretPositions[startIndex + 1] = ligStartX + guessedAdvanceX * (i + 1);\n      caretPositions[startIndex + 2] = ligY;\n    }\n  }\n\n  function now() {\n    return (self.performance || Date).now()\n  }\n\n  // Array-backed structure for a single line's glyphs data\n  function TextLine() {\n    this.data = [];\n  }\n  const textLineProps = ['glyphObj', 'x', 'width', 'charIndex'];\n  TextLine.prototype = {\n    width: 0,\n    isSoftWrapped: false,\n    get count() {\n      return Math.ceil(this.data.length / textLineProps.length)\n    },\n    glyphAt(i) {\n      let fly = TextLine.flyweight;\n      fly.data = this.data;\n      fly.index = i;\n      return fly\n    },\n    splitAt(i) {\n      let newLine = new TextLine();\n      newLine.data = this.data.splice(i * textLineProps.length);\n      return newLine\n    }\n  };\n  TextLine.flyweight = textLineProps.reduce((obj, prop, i, all) => {\n    Object.defineProperty(obj, prop, {\n      get() {\n        return this.data[this.index * textLineProps.length + i]\n      },\n      set(val) {\n        this.data[this.index * textLineProps.length + i] = val;\n      }\n    });\n    return obj\n  }, {data: null, index: 0});\n\n\n  return {\n    typeset,\n    measure,\n    loadFont\n  }\n}\n\nconst now = () => (self.performance || Date).now();\n\nconst mainThreadGenerator = /*#__PURE__*/ createSDFGenerator();\n\nlet warned;\n\n/**\n * Generate an SDF texture image for a single glyph path, placing the result into a webgl canvas at a\n * given location and channel. Utilizes the webgl-sdf-generator external package for GPU-accelerated SDF\n * generation when supported.\n */\nfunction generateSDF(width, height, path, viewBox, distance, exponent, canvas, x, y, channel, useWebGL = true) {\n  // Allow opt-out\n  if (!useWebGL) {\n    return generateSDF_JS_Worker(width, height, path, viewBox, distance, exponent, canvas, x, y, channel)\n  }\n\n  // Attempt GPU-accelerated generation first\n  return generateSDF_GL(width, height, path, viewBox, distance, exponent, canvas, x, y, channel).then(\n    null,\n    err => {\n      // WebGL failed either due to a hard error or unexpected results; fall back to JS in workers\n      if (!warned) {\n        console.warn(`WebGL SDF generation failed, falling back to JS`, err);\n        warned = true;\n      }\n      return generateSDF_JS_Worker(width, height, path, viewBox, distance, exponent, canvas, x, y, channel)\n    }\n  )\n}\n\nconst queue = [];\nconst chunkTimeBudget = 5; // ms\nlet timer = 0;\n\nfunction nextChunk() {\n  const start = now();\n  while (queue.length && now() - start < chunkTimeBudget) {\n    queue.shift()();\n  }\n  timer = queue.length ? setTimeout(nextChunk, 0) : 0;\n}\n\n/**\n * WebGL-based implementation executed on the main thread. Requests are executed in time-bounded\n * macrotask chunks to allow render frames to execute in between.\n */\nconst generateSDF_GL = (...args) => {\n  return new Promise((resolve, reject) => {\n    queue.push(() => {\n      const start = now();\n      try {\n        mainThreadGenerator.webgl.generateIntoCanvas(...args);\n        resolve({ timing: now() - start });\n      } catch (err) {\n        reject(err);\n      }\n    });\n    if (!timer) {\n      timer = setTimeout(nextChunk, 0);\n    }\n  })\n};\n\nconst threadCount = 4; // how many workers to spawn\nconst idleTimeout = 2000; // workers will be terminated after being idle this many milliseconds\nconst threads = {};\nlet callNum = 0;\n\n/**\n * Fallback JS-based implementation, fanned out to a number of worker threads for parallelism\n */\nfunction generateSDF_JS_Worker(width, height, path, viewBox, distance, exponent, canvas, x, y, channel) {\n  const workerId = 'TroikaTextSDFGenerator_JS_' + ((callNum++) % threadCount);\n  let thread = threads[workerId];\n  if (!thread) {\n    thread = threads[workerId] = {\n      workerModule: defineWorkerModule({\n        name: workerId,\n        workerId,\n        dependencies: [\n          createSDFGenerator,\n          now\n        ],\n        init(_createSDFGenerator, now) {\n          const generate = _createSDFGenerator().javascript.generate;\n          return function (...args) {\n            const start = now();\n            const textureData = generate(...args);\n            return {\n              textureData,\n              timing: now() - start\n            }\n          }\n        },\n        getTransferables(result) {\n          return [result.textureData.buffer]\n        }\n      }),\n      requests: 0,\n      idleTimer: null\n    };\n  }\n\n  thread.requests++;\n  clearTimeout(thread.idleTimer);\n  return thread.workerModule(width, height, path, viewBox, distance, exponent)\n    .then(({ textureData, timing }) => {\n      // copy result data into the canvas\n      const start = now();\n      // expand single-channel data into rgba\n      const imageData = new Uint8Array(textureData.length * 4);\n      for (let i = 0; i < textureData.length; i++) {\n        imageData[i * 4 + channel] = textureData[i];\n      }\n      mainThreadGenerator.webglUtils.renderImageData(canvas, imageData, x, y, width, height, 1 << (3 - channel));\n      timing += now() - start;\n\n      // clean up workers after a while\n      if (--thread.requests === 0) {\n        thread.idleTimer = setTimeout(() => { terminateWorker(workerId); }, idleTimeout);\n      }\n      return { timing }\n    })\n}\n\nfunction warmUpSDFCanvas(canvas) {\n  if (!canvas._warm) {\n    mainThreadGenerator.webgl.isSupported(canvas);\n    canvas._warm = true;\n  }\n}\n\nconst resizeWebGLCanvasWithoutClearing = mainThreadGenerator.webglUtils.resizeWebGLCanvasWithoutClearing;\n\n/*!\nCustom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.\nOriginal MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE\n*/\nfunction typrFactory(){return \"undefined\"==typeof window&&(self.window=self),function(r){var e={parse:function(r){var t=e._bin,a=new Uint8Array(r);if(\"ttcf\"==t.readASCII(a,0,4)){var n=4;t.readUshort(a,n),n+=2,t.readUshort(a,n),n+=2;var o=t.readUint(a,n);n+=4;for(var s=[],i=0;i<o;i++){var h=t.readUint(a,n);n+=4,s.push(e._readFont(a,h));}return s}return [e._readFont(a,0)]},_readFont:function(r,t){var a=e._bin,n=t;a.readFixed(r,t),t+=4;var o=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2;for(var s=[\"cmap\",\"head\",\"hhea\",\"maxp\",\"hmtx\",\"name\",\"OS/2\",\"post\",\"loca\",\"glyf\",\"kern\",\"CFF \",\"GPOS\",\"GSUB\",\"SVG \"],i={_data:r,_offset:n},h={},f=0;f<o;f++){var d=a.readASCII(r,t,4);t+=4,a.readUint(r,t),t+=4;var u=a.readUint(r,t);t+=4;var l=a.readUint(r,t);t+=4,h[d]={offset:u,length:l};}for(f=0;f<s.length;f++){var v=s[f];h[v]&&(i[v.trim()]=e[v.trim()].parse(r,h[v].offset,h[v].length,i));}return i},_tabOffset:function(r,t,a){for(var n=e._bin,o=n.readUshort(r,a+4),s=a+12,i=0;i<o;i++){var h=n.readASCII(r,s,4);s+=4,n.readUint(r,s),s+=4;var f=n.readUint(r,s);if(s+=4,n.readUint(r,s),s+=4,h==t)return f}return 0}};e._bin={readFixed:function(r,e){return (r[e]<<8|r[e+1])+(r[e+2]<<8|r[e+3])/65540},readF2dot14:function(r,t){return e._bin.readShort(r,t)/16384},readInt:function(r,t){return e._bin._view(r).getInt32(t)},readInt8:function(r,t){return e._bin._view(r).getInt8(t)},readShort:function(r,t){return e._bin._view(r).getInt16(t)},readUshort:function(r,t){return e._bin._view(r).getUint16(t)},readUshorts:function(r,t,a){for(var n=[],o=0;o<a;o++)n.push(e._bin.readUshort(r,t+2*o));return n},readUint:function(r,t){return e._bin._view(r).getUint32(t)},readUint64:function(r,t){return 4294967296*e._bin.readUint(r,t)+e._bin.readUint(r,t+4)},readASCII:function(r,e,t){for(var a=\"\",n=0;n<t;n++)a+=String.fromCharCode(r[e+n]);return a},readUnicode:function(r,e,t){for(var a=\"\",n=0;n<t;n++){var o=r[e++]<<8|r[e++];a+=String.fromCharCode(o);}return a},_tdec:\"undefined\"!=typeof window&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(r,t,a){var n=e._bin._tdec;return n&&0==t&&a==r.length?n.decode(r):e._bin.readASCII(r,t,a)},readBytes:function(r,e,t){for(var a=[],n=0;n<t;n++)a.push(r[e+n]);return a},readASCIIArray:function(r,e,t){for(var a=[],n=0;n<t;n++)a.push(String.fromCharCode(r[e+n]));return a},_view:function(r){return r._dataView||(r._dataView=r.buffer?new DataView(r.buffer,r.byteOffset,r.byteLength):new DataView(new Uint8Array(r).buffer))}},e._lctf={},e._lctf.parse=function(r,t,a,n,o){var s=e._bin,i={},h=t;s.readFixed(r,t),t+=4;var f=s.readUshort(r,t);t+=2;var d=s.readUshort(r,t);t+=2;var u=s.readUshort(r,t);return t+=2,i.scriptList=e._lctf.readScriptList(r,h+f),i.featureList=e._lctf.readFeatureList(r,h+d),i.lookupList=e._lctf.readLookupList(r,h+u,o),i},e._lctf.readLookupList=function(r,t,a){var n=e._bin,o=t,s=[],i=n.readUshort(r,t);t+=2;for(var h=0;h<i;h++){var f=n.readUshort(r,t);t+=2;var d=e._lctf.readLookupTable(r,o+f,a);s.push(d);}return s},e._lctf.readLookupTable=function(r,t,a){var n=e._bin,o=t,s={tabs:[]};s.ltype=n.readUshort(r,t),t+=2,s.flag=n.readUshort(r,t),t+=2;var i=n.readUshort(r,t);t+=2;for(var h=s.ltype,f=0;f<i;f++){var d=n.readUshort(r,t);t+=2;var u=a(r,h,o+d,s);s.tabs.push(u);}return s},e._lctf.numOfOnes=function(r){for(var e=0,t=0;t<32;t++)0!=(r>>>t&1)&&e++;return e},e._lctf.readClassDef=function(r,t){var a=e._bin,n=[],o=a.readUshort(r,t);if(t+=2,1==o){var s=a.readUshort(r,t);t+=2;var i=a.readUshort(r,t);t+=2;for(var h=0;h<i;h++)n.push(s+h),n.push(s+h),n.push(a.readUshort(r,t)),t+=2;}if(2==o){var f=a.readUshort(r,t);t+=2;for(h=0;h<f;h++)n.push(a.readUshort(r,t)),t+=2,n.push(a.readUshort(r,t)),t+=2,n.push(a.readUshort(r,t)),t+=2;}return n},e._lctf.getInterval=function(r,e){for(var t=0;t<r.length;t+=3){var a=r[t],n=r[t+1];if(r[t+2],a<=e&&e<=n)return t}return -1},e._lctf.readCoverage=function(r,t){var a=e._bin,n={};n.fmt=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);return t+=2,1==n.fmt&&(n.tab=a.readUshorts(r,t,o)),2==n.fmt&&(n.tab=a.readUshorts(r,t,3*o)),n},e._lctf.coverageIndex=function(r,t){var a=r.tab;if(1==r.fmt)return a.indexOf(t);if(2==r.fmt){var n=e._lctf.getInterval(a,t);if(-1!=n)return a[n+2]+(t-a[n])}return -1},e._lctf.readFeatureList=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readASCII(r,t,4);t+=4;var f=a.readUshort(r,t);t+=2;var d=e._lctf.readFeatureTable(r,n+f);d.tag=h.trim(),o.push(d);}return o},e._lctf.readFeatureTable=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2,s>0&&(o.featureParams=n+s);var i=a.readUshort(r,t);t+=2,o.tab=[];for(var h=0;h<i;h++)o.tab.push(a.readUshort(r,t+2*h));return o},e._lctf.readScriptList=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readASCII(r,t,4);t+=4;var f=a.readUshort(r,t);t+=2,o[h.trim()]=e._lctf.readScriptTable(r,n+f);}return o},e._lctf.readScriptTable=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2,o.default=e._lctf.readLangSysTable(r,n+s);var i=a.readUshort(r,t);t+=2;for(var h=0;h<i;h++){var f=a.readASCII(r,t,4);t+=4;var d=a.readUshort(r,t);t+=2,o[f.trim()]=e._lctf.readLangSysTable(r,n+d);}return o},e._lctf.readLangSysTable=function(r,t){var a=e._bin,n={};a.readUshort(r,t),t+=2,n.reqFeature=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);return t+=2,n.features=a.readUshorts(r,t,o),n},e.CFF={},e.CFF.parse=function(r,t,a){var n=e._bin;(r=new Uint8Array(r.buffer,t,a))[t=0],r[++t],r[++t],r[++t],t++;var o=[];t=e.CFF.readIndex(r,t,o);for(var s=[],i=0;i<o.length-1;i++)s.push(n.readASCII(r,t+o[i],o[i+1]-o[i]));t+=o[o.length-1];var h=[];t=e.CFF.readIndex(r,t,h);var f=[];for(i=0;i<h.length-1;i++)f.push(e.CFF.readDict(r,t+h[i],t+h[i+1]));t+=h[h.length-1];var d=f[0],u=[];t=e.CFF.readIndex(r,t,u);var l=[];for(i=0;i<u.length-1;i++)l.push(n.readASCII(r,t+u[i],u[i+1]-u[i]));if(t+=u[u.length-1],e.CFF.readSubrs(r,t,d),d.CharStrings){t=d.CharStrings;u=[];t=e.CFF.readIndex(r,t,u);var v=[];for(i=0;i<u.length-1;i++)v.push(n.readBytes(r,t+u[i],u[i+1]-u[i]));d.CharStrings=v;}if(d.ROS){t=d.FDArray;var c=[];t=e.CFF.readIndex(r,t,c),d.FDArray=[];for(i=0;i<c.length-1;i++){var p=e.CFF.readDict(r,t+c[i],t+c[i+1]);e.CFF._readFDict(r,p,l),d.FDArray.push(p);}t+=c[c.length-1],t=d.FDSelect,d.FDSelect=[];var U=r[t];if(t++,3!=U)throw U;var g=n.readUshort(r,t);t+=2;for(i=0;i<g+1;i++)d.FDSelect.push(n.readUshort(r,t),r[t+2]),t+=3;}return d.Encoding&&(d.Encoding=e.CFF.readEncoding(r,d.Encoding,d.CharStrings.length)),d.charset&&(d.charset=e.CFF.readCharset(r,d.charset,d.CharStrings.length)),e.CFF._readFDict(r,d,l),d},e.CFF._readFDict=function(r,t,a){var n;for(var o in t.Private&&(n=t.Private[1],t.Private=e.CFF.readDict(r,n,n+t.Private[0]),t.Private.Subrs&&e.CFF.readSubrs(r,n+t.Private.Subrs,t.Private)),t)-1!=[\"FamilyName\",\"FontName\",\"FullName\",\"Notice\",\"version\",\"Copyright\"].indexOf(o)&&(t[o]=a[t[o]-426+35]);},e.CFF.readSubrs=function(r,t,a){var n=e._bin,o=[];t=e.CFF.readIndex(r,t,o);var s,i=o.length;s=i<1240?107:i<33900?1131:32768,a.Bias=s,a.Subrs=[];for(var h=0;h<o.length-1;h++)a.Subrs.push(n.readBytes(r,t+o[h],o[h+1]-o[h]));},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(r,e){for(var t=0;t<r.charset.length;t++)if(r.charset[t]==e)return t;return -1},e.CFF.glyphBySE=function(r,t){return t<0||t>255?-1:e.CFF.glyphByUnicode(r,e.CFF.tableSE[t])},e.CFF.readEncoding=function(r,t,a){e._bin;var n=[\".notdef\"],o=r[t];if(t++,0!=o)throw \"error: unknown encoding format: \"+o;var s=r[t];t++;for(var i=0;i<s;i++)n.push(r[t+i]);return n},e.CFF.readCharset=function(r,t,a){var n=e._bin,o=[\".notdef\"],s=r[t];if(t++,0==s)for(var i=0;i<a;i++){var h=n.readUshort(r,t);t+=2,o.push(h);}else {if(1!=s&&2!=s)throw \"error: format: \"+s;for(;o.length<a;){h=n.readUshort(r,t);t+=2;var f=0;1==s?(f=r[t],t++):(f=n.readUshort(r,t),t+=2);for(i=0;i<=f;i++)o.push(h),h++;}}return o},e.CFF.readIndex=function(r,t,a){var n=e._bin,o=n.readUshort(r,t)+1,s=r[t+=2];if(t++,1==s)for(var i=0;i<o;i++)a.push(r[t+i]);else if(2==s)for(i=0;i<o;i++)a.push(n.readUshort(r,t+2*i));else if(3==s)for(i=0;i<o;i++)a.push(16777215&n.readUint(r,t+3*i-1));else if(1!=o)throw \"unsupported offset size: \"+s+\", count: \"+o;return (t+=o*s)-1},e.CFF.getCharString=function(r,t,a){var n=e._bin,o=r[t],s=r[t+1];r[t+2],r[t+3],r[t+4];var i=1,h=null,f=null;o<=20&&(h=o,i=1),12==o&&(h=100*o+s,i=2),21<=o&&o<=27&&(h=o,i=1),28==o&&(f=n.readShort(r,t+1),i=3),29<=o&&o<=31&&(h=o,i=1),32<=o&&o<=246&&(f=o-139,i=1),247<=o&&o<=250&&(f=256*(o-247)+s+108,i=2),251<=o&&o<=254&&(f=256*-(o-251)-s-108,i=2),255==o&&(f=n.readInt(r,t+1)/65535,i=5),a.val=null!=f?f:\"o\"+h,a.size=i;},e.CFF.readCharString=function(r,t,a){for(var n=t+a,o=e._bin,s=[];t<n;){var i=r[t],h=r[t+1];r[t+2],r[t+3],r[t+4];var f=1,d=null,u=null;i<=20&&(d=i,f=1),12==i&&(d=100*i+h,f=2),19!=i&&20!=i||(d=i,f=2),21<=i&&i<=27&&(d=i,f=1),28==i&&(u=o.readShort(r,t+1),f=3),29<=i&&i<=31&&(d=i,f=1),32<=i&&i<=246&&(u=i-139,f=1),247<=i&&i<=250&&(u=256*(i-247)+h+108,f=2),251<=i&&i<=254&&(u=256*-(i-251)-h-108,f=2),255==i&&(u=o.readInt(r,t+1)/65535,f=5),s.push(null!=u?u:\"o\"+d),t+=f;}return s},e.CFF.readDict=function(r,t,a){for(var n=e._bin,o={},s=[];t<a;){var i=r[t],h=r[t+1];r[t+2],r[t+3],r[t+4];var f=1,d=null,u=null;if(28==i&&(u=n.readShort(r,t+1),f=3),29==i&&(u=n.readInt(r,t+1),f=5),32<=i&&i<=246&&(u=i-139,f=1),247<=i&&i<=250&&(u=256*(i-247)+h+108,f=2),251<=i&&i<=254&&(u=256*-(i-251)-h-108,f=2),255==i)throw u=n.readInt(r,t+1)/65535,f=5,\"unknown number\";if(30==i){var l=[];for(f=1;;){var v=r[t+f];f++;var c=v>>4,p=15&v;if(15!=c&&l.push(c),15!=p&&l.push(p),15==p)break}for(var U=\"\",g=[0,1,2,3,4,5,6,7,8,9,\".\",\"e\",\"e-\",\"reserved\",\"-\",\"endOfNumber\"],S=0;S<l.length;S++)U+=g[l[S]];u=parseFloat(U);}if(i<=21)if(d=[\"version\",\"Notice\",\"FullName\",\"FamilyName\",\"Weight\",\"FontBBox\",\"BlueValues\",\"OtherBlues\",\"FamilyBlues\",\"FamilyOtherBlues\",\"StdHW\",\"StdVW\",\"escape\",\"UniqueID\",\"XUID\",\"charset\",\"Encoding\",\"CharStrings\",\"Private\",\"Subrs\",\"defaultWidthX\",\"nominalWidthX\"][i],f=1,12==i)d=[\"Copyright\",\"isFixedPitch\",\"ItalicAngle\",\"UnderlinePosition\",\"UnderlineThickness\",\"PaintType\",\"CharstringType\",\"FontMatrix\",\"StrokeWidth\",\"BlueScale\",\"BlueShift\",\"BlueFuzz\",\"StemSnapH\",\"StemSnapV\",\"ForceBold\",0,0,\"LanguageGroup\",\"ExpansionFactor\",\"initialRandomSeed\",\"SyntheticBase\",\"PostScript\",\"BaseFontName\",\"BaseFontBlend\",0,0,0,0,0,0,\"ROS\",\"CIDFontVersion\",\"CIDFontRevision\",\"CIDFontType\",\"CIDCount\",\"UIDBase\",\"FDArray\",\"FDSelect\",\"FontName\"][h],f=2;null!=d?(o[d]=1==s.length?s[0]:s,s=[]):s.push(u),t+=f;}return o},e.cmap={},e.cmap.parse=function(r,t,a){r=new Uint8Array(r.buffer,t,a),t=0;var n=e._bin,o={};n.readUshort(r,t),t+=2;var s=n.readUshort(r,t);t+=2;var i=[];o.tables=[];for(var h=0;h<s;h++){var f=n.readUshort(r,t);t+=2;var d=n.readUshort(r,t);t+=2;var u=n.readUint(r,t);t+=4;var l=\"p\"+f+\"e\"+d,v=i.indexOf(u);if(-1==v){var c;v=o.tables.length,i.push(u);var p=n.readUshort(r,u);0==p?c=e.cmap.parse0(r,u):4==p?c=e.cmap.parse4(r,u):6==p?c=e.cmap.parse6(r,u):12==p?c=e.cmap.parse12(r,u):console.debug(\"unknown format: \"+p,f,d,u),o.tables.push(c);}if(null!=o[l])throw \"multiple tables for one platform+encoding\";o[l]=v;}return o},e.cmap.parse0=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2,n.map=[];for(var s=0;s<o-6;s++)n.map.push(r[t+s]);return n},e.cmap.parse4=function(r,t){var a=e._bin,n=t,o={};o.format=a.readUshort(r,t),t+=2;var s=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2;var i=a.readUshort(r,t);t+=2;var h=i/2;o.searchRange=a.readUshort(r,t),t+=2,o.entrySelector=a.readUshort(r,t),t+=2,o.rangeShift=a.readUshort(r,t),t+=2,o.endCount=a.readUshorts(r,t,h),t+=2*h,t+=2,o.startCount=a.readUshorts(r,t,h),t+=2*h,o.idDelta=[];for(var f=0;f<h;f++)o.idDelta.push(a.readShort(r,t)),t+=2;for(o.idRangeOffset=a.readUshorts(r,t,h),t+=2*h,o.glyphIdArray=[];t<n+s;)o.glyphIdArray.push(a.readUshort(r,t)),t+=2;return o},e.cmap.parse6=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,n.firstCode=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2,n.glyphIdArray=[];for(var s=0;s<o;s++)n.glyphIdArray.push(a.readUshort(r,t)),t+=2;return n},e.cmap.parse12=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2,t+=2,a.readUint(r,t),t+=4,a.readUint(r,t),t+=4;var o=a.readUint(r,t);t+=4,n.groups=[];for(var s=0;s<o;s++){var i=t+12*s,h=a.readUint(r,i+0),f=a.readUint(r,i+4),d=a.readUint(r,i+8);n.groups.push([h,f,d]);}return n},e.glyf={},e.glyf.parse=function(r,e,t,a){for(var n=[],o=0;o<a.maxp.numGlyphs;o++)n.push(null);return n},e.glyf._parseGlyf=function(r,t){var a=e._bin,n=r._data,o=e._tabOffset(n,\"glyf\",r._offset)+r.loca[t];if(r.loca[t]==r.loca[t+1])return null;var s={};if(s.noc=a.readShort(n,o),o+=2,s.xMin=a.readShort(n,o),o+=2,s.yMin=a.readShort(n,o),o+=2,s.xMax=a.readShort(n,o),o+=2,s.yMax=a.readShort(n,o),o+=2,s.xMin>=s.xMax||s.yMin>=s.yMax)return null;if(s.noc>0){s.endPts=[];for(var i=0;i<s.noc;i++)s.endPts.push(a.readUshort(n,o)),o+=2;var h=a.readUshort(n,o);if(o+=2,n.length-o<h)return null;s.instructions=a.readBytes(n,o,h),o+=h;var f=s.endPts[s.noc-1]+1;s.flags=[];for(i=0;i<f;i++){var d=n[o];if(o++,s.flags.push(d),0!=(8&d)){var u=n[o];o++;for(var l=0;l<u;l++)s.flags.push(d),i++;}}s.xs=[];for(i=0;i<f;i++){var v=0!=(2&s.flags[i]),c=0!=(16&s.flags[i]);v?(s.xs.push(c?n[o]:-n[o]),o++):c?s.xs.push(0):(s.xs.push(a.readShort(n,o)),o+=2);}s.ys=[];for(i=0;i<f;i++){v=0!=(4&s.flags[i]),c=0!=(32&s.flags[i]);v?(s.ys.push(c?n[o]:-n[o]),o++):c?s.ys.push(0):(s.ys.push(a.readShort(n,o)),o+=2);}var p=0,U=0;for(i=0;i<f;i++)p+=s.xs[i],U+=s.ys[i],s.xs[i]=p,s.ys[i]=U;}else {var g;s.parts=[];do{g=a.readUshort(n,o),o+=2;var S={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(s.parts.push(S),S.glyphIndex=a.readUshort(n,o),o+=2,1&g){var m=a.readShort(n,o);o+=2;var b=a.readShort(n,o);o+=2;}else {m=a.readInt8(n,o);o++;b=a.readInt8(n,o);o++;}2&g?(S.m.tx=m,S.m.ty=b):(S.p1=m,S.p2=b),8&g?(S.m.a=S.m.d=a.readF2dot14(n,o),o+=2):64&g?(S.m.a=a.readF2dot14(n,o),o+=2,S.m.d=a.readF2dot14(n,o),o+=2):128&g&&(S.m.a=a.readF2dot14(n,o),o+=2,S.m.b=a.readF2dot14(n,o),o+=2,S.m.c=a.readF2dot14(n,o),o+=2,S.m.d=a.readF2dot14(n,o),o+=2);}while(32&g);if(256&g){var y=a.readUshort(n,o);o+=2,s.instr=[];for(i=0;i<y;i++)s.instr.push(n[o]),o++;}}return s},e.GPOS={},e.GPOS.parse=function(r,t,a,n){return e._lctf.parse(r,t,a,n,e.GPOS.subt)},e.GPOS.subt=function(r,t,a,n){var o=e._bin,s=a,i={};if(i.fmt=o.readUshort(r,a),a+=2,1==t||2==t||3==t||7==t||8==t&&i.fmt<=2){var h=o.readUshort(r,a);a+=2,i.coverage=e._lctf.readCoverage(r,h+s);}if(1==t&&1==i.fmt){var f=o.readUshort(r,a);a+=2;var d=e._lctf.numOfOnes(f);0!=f&&(i.pos=e.GPOS.readValueRecord(r,a,f));}else if(2==t&&i.fmt>=1&&i.fmt<=2){f=o.readUshort(r,a);a+=2;var u=o.readUshort(r,a);a+=2;d=e._lctf.numOfOnes(f);var l=e._lctf.numOfOnes(u);if(1==i.fmt){i.pairsets=[];var v=o.readUshort(r,a);a+=2;for(var c=0;c<v;c++){var p=s+o.readUshort(r,a);a+=2;var U=o.readUshort(r,p);p+=2;for(var g=[],S=0;S<U;S++){var m=o.readUshort(r,p);p+=2,0!=f&&(x=e.GPOS.readValueRecord(r,p,f),p+=2*d),0!=u&&(P=e.GPOS.readValueRecord(r,p,u),p+=2*l),g.push({gid2:m,val1:x,val2:P});}i.pairsets.push(g);}}if(2==i.fmt){var b=o.readUshort(r,a);a+=2;var y=o.readUshort(r,a);a+=2;var F=o.readUshort(r,a);a+=2;var _=o.readUshort(r,a);a+=2,i.classDef1=e._lctf.readClassDef(r,s+b),i.classDef2=e._lctf.readClassDef(r,s+y),i.matrix=[];for(c=0;c<F;c++){var C=[];for(S=0;S<_;S++){var x=null,P=null;0!=f&&(x=e.GPOS.readValueRecord(r,a,f),a+=2*d),0!=u&&(P=e.GPOS.readValueRecord(r,a,u),a+=2*l),C.push({val1:x,val2:P});}i.matrix.push(C);}}}else {if(9==t&&1==i.fmt){var I=o.readUshort(r,a);a+=2;var w=o.readUint(r,a);if(a+=4,9==n.ltype)n.ltype=I;else if(n.ltype!=I)throw \"invalid extension substitution\";return e.GPOS.subt(r,n.ltype,s+w)}console.debug(\"unsupported GPOS table LookupType\",t,\"format\",i.fmt);}return i},e.GPOS.readValueRecord=function(r,t,a){var n=e._bin,o=[];return o.push(1&a?n.readShort(r,t):0),t+=1&a?2:0,o.push(2&a?n.readShort(r,t):0),t+=2&a?2:0,o.push(4&a?n.readShort(r,t):0),t+=4&a?2:0,o.push(8&a?n.readShort(r,t):0),t+=8&a?2:0,o},e.GSUB={},e.GSUB.parse=function(r,t,a,n){return e._lctf.parse(r,t,a,n,e.GSUB.subt)},e.GSUB.subt=function(r,t,a,n){var o=e._bin,s=a,i={};if(i.fmt=o.readUshort(r,a),a+=2,1!=t&&4!=t&&5!=t&&6!=t)return null;if(1==t||4==t||5==t&&i.fmt<=2||6==t&&i.fmt<=2){var h=o.readUshort(r,a);a+=2,i.coverage=e._lctf.readCoverage(r,s+h);}if(1==t&&i.fmt>=1&&i.fmt<=2){if(1==i.fmt)i.delta=o.readShort(r,a),a+=2;else if(2==i.fmt){var f=o.readUshort(r,a);a+=2,i.newg=o.readUshorts(r,a,f),a+=2*i.newg.length;}}else if(4==t){i.vals=[];f=o.readUshort(r,a);a+=2;for(var d=0;d<f;d++){var u=o.readUshort(r,a);a+=2,i.vals.push(e.GSUB.readLigatureSet(r,s+u));}}else if(5==t&&2==i.fmt){if(2==i.fmt){var l=o.readUshort(r,a);a+=2,i.cDef=e._lctf.readClassDef(r,s+l),i.scset=[];var v=o.readUshort(r,a);a+=2;for(d=0;d<v;d++){var c=o.readUshort(r,a);a+=2,i.scset.push(0==c?null:e.GSUB.readSubClassSet(r,s+c));}}}else if(6==t&&3==i.fmt){if(3==i.fmt){for(d=0;d<3;d++){f=o.readUshort(r,a);a+=2;for(var p=[],U=0;U<f;U++)p.push(e._lctf.readCoverage(r,s+o.readUshort(r,a+2*U)));a+=2*f,0==d&&(i.backCvg=p),1==d&&(i.inptCvg=p),2==d&&(i.ahedCvg=p);}f=o.readUshort(r,a);a+=2,i.lookupRec=e.GSUB.readSubstLookupRecords(r,a,f);}}else {if(7==t&&1==i.fmt){var g=o.readUshort(r,a);a+=2;var S=o.readUint(r,a);if(a+=4,9==n.ltype)n.ltype=g;else if(n.ltype!=g)throw \"invalid extension substitution\";return e.GSUB.subt(r,n.ltype,s+S)}console.debug(\"unsupported GSUB table LookupType\",t,\"format\",i.fmt);}return i},e.GSUB.readSubClassSet=function(r,t){var a=e._bin.readUshort,n=t,o=[],s=a(r,t);t+=2;for(var i=0;i<s;i++){var h=a(r,t);t+=2,o.push(e.GSUB.readSubClassRule(r,n+h));}return o},e.GSUB.readSubClassRule=function(r,t){var a=e._bin.readUshort,n={},o=a(r,t),s=a(r,t+=2);t+=2,n.input=[];for(var i=0;i<o-1;i++)n.input.push(a(r,t)),t+=2;return n.substLookupRecords=e.GSUB.readSubstLookupRecords(r,t,s),n},e.GSUB.readSubstLookupRecords=function(r,t,a){for(var n=e._bin.readUshort,o=[],s=0;s<a;s++)o.push(n(r,t),n(r,t+2)),t+=4;return o},e.GSUB.readChainSubClassSet=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readUshort(r,t);t+=2,o.push(e.GSUB.readChainSubClassRule(r,n+h));}return o},e.GSUB.readChainSubClassRule=function(r,t){for(var a=e._bin,n={},o=[\"backtrack\",\"input\",\"lookahead\"],s=0;s<o.length;s++){var i=a.readUshort(r,t);t+=2,1==s&&i--,n[o[s]]=a.readUshorts(r,t,i),t+=2*n[o[s]].length;}i=a.readUshort(r,t);return t+=2,n.subst=a.readUshorts(r,t,2*i),t+=2*n.subst.length,n},e.GSUB.readLigatureSet=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readUshort(r,t);t+=2,o.push(e.GSUB.readLigature(r,n+h));}return o},e.GSUB.readLigature=function(r,t){var a=e._bin,n={chain:[]};n.nglyph=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2;for(var s=0;s<o-1;s++)n.chain.push(a.readUshort(r,t)),t+=2;return n},e.head={},e.head.parse=function(r,t,a){var n=e._bin,o={};return n.readFixed(r,t),t+=4,o.fontRevision=n.readFixed(r,t),t+=4,n.readUint(r,t),t+=4,n.readUint(r,t),t+=4,o.flags=n.readUshort(r,t),t+=2,o.unitsPerEm=n.readUshort(r,t),t+=2,o.created=n.readUint64(r,t),t+=8,o.modified=n.readUint64(r,t),t+=8,o.xMin=n.readShort(r,t),t+=2,o.yMin=n.readShort(r,t),t+=2,o.xMax=n.readShort(r,t),t+=2,o.yMax=n.readShort(r,t),t+=2,o.macStyle=n.readUshort(r,t),t+=2,o.lowestRecPPEM=n.readUshort(r,t),t+=2,o.fontDirectionHint=n.readShort(r,t),t+=2,o.indexToLocFormat=n.readShort(r,t),t+=2,o.glyphDataFormat=n.readShort(r,t),t+=2,o},e.hhea={},e.hhea.parse=function(r,t,a){var n=e._bin,o={};return n.readFixed(r,t),t+=4,o.ascender=n.readShort(r,t),t+=2,o.descender=n.readShort(r,t),t+=2,o.lineGap=n.readShort(r,t),t+=2,o.advanceWidthMax=n.readUshort(r,t),t+=2,o.minLeftSideBearing=n.readShort(r,t),t+=2,o.minRightSideBearing=n.readShort(r,t),t+=2,o.xMaxExtent=n.readShort(r,t),t+=2,o.caretSlopeRise=n.readShort(r,t),t+=2,o.caretSlopeRun=n.readShort(r,t),t+=2,o.caretOffset=n.readShort(r,t),t+=2,t+=8,o.metricDataFormat=n.readShort(r,t),t+=2,o.numberOfHMetrics=n.readUshort(r,t),t+=2,o},e.hmtx={},e.hmtx.parse=function(r,t,a,n){for(var o=e._bin,s={aWidth:[],lsBearing:[]},i=0,h=0,f=0;f<n.maxp.numGlyphs;f++)f<n.hhea.numberOfHMetrics&&(i=o.readUshort(r,t),t+=2,h=o.readShort(r,t),t+=2),s.aWidth.push(i),s.lsBearing.push(h);return s},e.kern={},e.kern.parse=function(r,t,a,n){var o=e._bin,s=o.readUshort(r,t);if(t+=2,1==s)return e.kern.parseV1(r,t-2,a,n);var i=o.readUshort(r,t);t+=2;for(var h={glyph1:[],rval:[]},f=0;f<i;f++){t+=2;a=o.readUshort(r,t);t+=2;var d=o.readUshort(r,t);t+=2;var u=d>>>8;if(0!=(u&=15))throw \"unknown kern table format: \"+u;t=e.kern.readFormat0(r,t,h);}return h},e.kern.parseV1=function(r,t,a,n){var o=e._bin;o.readFixed(r,t),t+=4;var s=o.readUint(r,t);t+=4;for(var i={glyph1:[],rval:[]},h=0;h<s;h++){o.readUint(r,t),t+=4;var f=o.readUshort(r,t);t+=2,o.readUshort(r,t),t+=2;var d=f>>>8;if(0!=(d&=15))throw \"unknown kern table format: \"+d;t=e.kern.readFormat0(r,t,i);}return i},e.kern.readFormat0=function(r,t,a){var n=e._bin,o=-1,s=n.readUshort(r,t);t+=2,n.readUshort(r,t),t+=2,n.readUshort(r,t),t+=2,n.readUshort(r,t),t+=2;for(var i=0;i<s;i++){var h=n.readUshort(r,t);t+=2;var f=n.readUshort(r,t);t+=2;var d=n.readShort(r,t);t+=2,h!=o&&(a.glyph1.push(h),a.rval.push({glyph2:[],vals:[]}));var u=a.rval[a.rval.length-1];u.glyph2.push(f),u.vals.push(d),o=h;}return t},e.loca={},e.loca.parse=function(r,t,a,n){var o=e._bin,s=[],i=n.head.indexToLocFormat,h=n.maxp.numGlyphs+1;if(0==i)for(var f=0;f<h;f++)s.push(o.readUshort(r,t+(f<<1))<<1);if(1==i)for(f=0;f<h;f++)s.push(o.readUint(r,t+(f<<2)));return s},e.maxp={},e.maxp.parse=function(r,t,a){var n=e._bin,o={},s=n.readUint(r,t);return t+=4,o.numGlyphs=n.readUshort(r,t),t+=2,65536==s&&(o.maxPoints=n.readUshort(r,t),t+=2,o.maxContours=n.readUshort(r,t),t+=2,o.maxCompositePoints=n.readUshort(r,t),t+=2,o.maxCompositeContours=n.readUshort(r,t),t+=2,o.maxZones=n.readUshort(r,t),t+=2,o.maxTwilightPoints=n.readUshort(r,t),t+=2,o.maxStorage=n.readUshort(r,t),t+=2,o.maxFunctionDefs=n.readUshort(r,t),t+=2,o.maxInstructionDefs=n.readUshort(r,t),t+=2,o.maxStackElements=n.readUshort(r,t),t+=2,o.maxSizeOfInstructions=n.readUshort(r,t),t+=2,o.maxComponentElements=n.readUshort(r,t),t+=2,o.maxComponentDepth=n.readUshort(r,t),t+=2),o},e.name={},e.name.parse=function(r,t,a){var n=e._bin,o={};n.readUshort(r,t),t+=2;var s=n.readUshort(r,t);t+=2,n.readUshort(r,t);for(var i,h=[\"copyright\",\"fontFamily\",\"fontSubfamily\",\"ID\",\"fullName\",\"version\",\"postScriptName\",\"trademark\",\"manufacturer\",\"designer\",\"description\",\"urlVendor\",\"urlDesigner\",\"licence\",\"licenceURL\",\"---\",\"typoFamilyName\",\"typoSubfamilyName\",\"compatibleFull\",\"sampleText\",\"postScriptCID\",\"wwsFamilyName\",\"wwsSubfamilyName\",\"lightPalette\",\"darkPalette\"],f=t+=2,d=0;d<s;d++){var u=n.readUshort(r,t);t+=2;var l=n.readUshort(r,t);t+=2;var v=n.readUshort(r,t);t+=2;var c=n.readUshort(r,t);t+=2;var p=n.readUshort(r,t);t+=2;var U=n.readUshort(r,t);t+=2;var g,S=h[c],m=f+12*s+U;if(0==u)g=n.readUnicode(r,m,p/2);else if(3==u&&0==l)g=n.readUnicode(r,m,p/2);else if(0==l)g=n.readASCII(r,m,p);else if(1==l)g=n.readUnicode(r,m,p/2);else if(3==l)g=n.readUnicode(r,m,p/2);else {if(1!=u)throw \"unknown encoding \"+l+\", platformID: \"+u;g=n.readASCII(r,m,p),console.debug(\"reading unknown MAC encoding \"+l+\" as ASCII\");}var b=\"p\"+u+\",\"+v.toString(16);null==o[b]&&(o[b]={}),o[b][void 0!==S?S:c]=g,o[b]._lang=v;}for(var y in o)if(null!=o[y].postScriptName&&1033==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName&&0==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName&&3084==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName)return o[y];for(var y in o){i=y;break}return console.debug(\"returning name table with languageID \"+o[i]._lang),o[i]},e[\"OS/2\"]={},e[\"OS/2\"].parse=function(r,t,a){var n=e._bin.readUshort(r,t);t+=2;var o={};if(0==n)e[\"OS/2\"].version0(r,t,o);else if(1==n)e[\"OS/2\"].version1(r,t,o);else if(2==n||3==n||4==n)e[\"OS/2\"].version2(r,t,o);else {if(5!=n)throw \"unknown OS/2 table version: \"+n;e[\"OS/2\"].version5(r,t,o);}return o},e[\"OS/2\"].version0=function(r,t,a){var n=e._bin;return a.xAvgCharWidth=n.readShort(r,t),t+=2,a.usWeightClass=n.readUshort(r,t),t+=2,a.usWidthClass=n.readUshort(r,t),t+=2,a.fsType=n.readUshort(r,t),t+=2,a.ySubscriptXSize=n.readShort(r,t),t+=2,a.ySubscriptYSize=n.readShort(r,t),t+=2,a.ySubscriptXOffset=n.readShort(r,t),t+=2,a.ySubscriptYOffset=n.readShort(r,t),t+=2,a.ySuperscriptXSize=n.readShort(r,t),t+=2,a.ySuperscriptYSize=n.readShort(r,t),t+=2,a.ySuperscriptXOffset=n.readShort(r,t),t+=2,a.ySuperscriptYOffset=n.readShort(r,t),t+=2,a.yStrikeoutSize=n.readShort(r,t),t+=2,a.yStrikeoutPosition=n.readShort(r,t),t+=2,a.sFamilyClass=n.readShort(r,t),t+=2,a.panose=n.readBytes(r,t,10),t+=10,a.ulUnicodeRange1=n.readUint(r,t),t+=4,a.ulUnicodeRange2=n.readUint(r,t),t+=4,a.ulUnicodeRange3=n.readUint(r,t),t+=4,a.ulUnicodeRange4=n.readUint(r,t),t+=4,a.achVendID=[n.readInt8(r,t),n.readInt8(r,t+1),n.readInt8(r,t+2),n.readInt8(r,t+3)],t+=4,a.fsSelection=n.readUshort(r,t),t+=2,a.usFirstCharIndex=n.readUshort(r,t),t+=2,a.usLastCharIndex=n.readUshort(r,t),t+=2,a.sTypoAscender=n.readShort(r,t),t+=2,a.sTypoDescender=n.readShort(r,t),t+=2,a.sTypoLineGap=n.readShort(r,t),t+=2,a.usWinAscent=n.readUshort(r,t),t+=2,a.usWinDescent=n.readUshort(r,t),t+=2},e[\"OS/2\"].version1=function(r,t,a){var n=e._bin;return t=e[\"OS/2\"].version0(r,t,a),a.ulCodePageRange1=n.readUint(r,t),t+=4,a.ulCodePageRange2=n.readUint(r,t),t+=4},e[\"OS/2\"].version2=function(r,t,a){var n=e._bin;return t=e[\"OS/2\"].version1(r,t,a),a.sxHeight=n.readShort(r,t),t+=2,a.sCapHeight=n.readShort(r,t),t+=2,a.usDefault=n.readUshort(r,t),t+=2,a.usBreak=n.readUshort(r,t),t+=2,a.usMaxContext=n.readUshort(r,t),t+=2},e[\"OS/2\"].version5=function(r,t,a){var n=e._bin;return t=e[\"OS/2\"].version2(r,t,a),a.usLowerOpticalPointSize=n.readUshort(r,t),t+=2,a.usUpperOpticalPointSize=n.readUshort(r,t),t+=2},e.post={},e.post.parse=function(r,t,a){var n=e._bin,o={};return o.version=n.readFixed(r,t),t+=4,o.italicAngle=n.readFixed(r,t),t+=4,o.underlinePosition=n.readShort(r,t),t+=2,o.underlineThickness=n.readShort(r,t),t+=2,o},null==e&&(e={}),null==e.U&&(e.U={}),e.U.codeToGlyph=function(r,e){var t=r.cmap,a=-1;if(null!=t.p0e4?a=t.p0e4:null!=t.p3e1?a=t.p3e1:null!=t.p1e0?a=t.p1e0:null!=t.p0e3&&(a=t.p0e3),-1==a)throw \"no familiar platform and encoding!\";var n=t.tables[a];if(0==n.format)return e>=n.map.length?0:n.map[e];if(4==n.format){for(var o=-1,s=0;s<n.endCount.length;s++)if(e<=n.endCount[s]){o=s;break}if(-1==o)return 0;if(n.startCount[o]>e)return 0;return 65535&(0!=n.idRangeOffset[o]?n.glyphIdArray[e-n.startCount[o]+(n.idRangeOffset[o]>>1)-(n.idRangeOffset.length-o)]:e+n.idDelta[o])}if(12==n.format){if(e>n.groups[n.groups.length-1][1])return 0;for(s=0;s<n.groups.length;s++){var i=n.groups[s];if(i[0]<=e&&e<=i[1])return i[2]+(e-i[0])}return 0}throw \"unknown cmap table format \"+n.format},e.U.glyphToPath=function(r,t){var a={cmds:[],crds:[]};if(r.SVG&&r.SVG.entries[t]){var n=r.SVG.entries[t];return null==n?a:(\"string\"==typeof n&&(n=e.SVG.toPath(n),r.SVG.entries[t]=n),n)}if(r.CFF){var o={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:r.CFF.Private?r.CFF.Private.defaultWidthX:0,open:!1},s=r.CFF,i=r.CFF.Private;if(s.ROS){for(var h=0;s.FDSelect[h+2]<=t;)h+=2;i=s.FDArray[s.FDSelect[h+1]].Private;}e.U._drawCFF(r.CFF.CharStrings[t],o,s,i,a);}else r.glyf&&e.U._drawGlyf(t,r,a);return a},e.U._drawGlyf=function(r,t,a){var n=t.glyf[r];null==n&&(n=t.glyf[r]=e.glyf._parseGlyf(t,r)),null!=n&&(n.noc>-1?e.U._simpleGlyph(n,a):e.U._compoGlyph(n,t,a));},e.U._simpleGlyph=function(r,t){for(var a=0;a<r.noc;a++){for(var n=0==a?0:r.endPts[a-1]+1,o=r.endPts[a],s=n;s<=o;s++){var i=s==n?o:s-1,h=s==o?n:s+1,f=1&r.flags[s],d=1&r.flags[i],u=1&r.flags[h],l=r.xs[s],v=r.ys[s];if(s==n)if(f){if(!d){e.U.P.moveTo(t,l,v);continue}e.U.P.moveTo(t,r.xs[i],r.ys[i]);}else d?e.U.P.moveTo(t,r.xs[i],r.ys[i]):e.U.P.moveTo(t,(r.xs[i]+l)/2,(r.ys[i]+v)/2);f?d&&e.U.P.lineTo(t,l,v):u?e.U.P.qcurveTo(t,l,v,r.xs[h],r.ys[h]):e.U.P.qcurveTo(t,l,v,(l+r.xs[h])/2,(v+r.ys[h])/2);}e.U.P.closePath(t);}},e.U._compoGlyph=function(r,t,a){for(var n=0;n<r.parts.length;n++){var o={cmds:[],crds:[]},s=r.parts[n];e.U._drawGlyf(s.glyphIndex,t,o);for(var i=s.m,h=0;h<o.crds.length;h+=2){var f=o.crds[h],d=o.crds[h+1];a.crds.push(f*i.a+d*i.b+i.tx),a.crds.push(f*i.c+d*i.d+i.ty);}for(h=0;h<o.cmds.length;h++)a.cmds.push(o.cmds[h]);}},e.U._getGlyphClass=function(r,t){var a=e._lctf.getInterval(t,r);return -1==a?0:t[a+2]},e.U.getPairAdjustment=function(r,t,a){var n=!1;if(r.GPOS)for(var o=r.GPOS,s=o.lookupList,i=o.featureList,h=[],f=0;f<i.length;f++){var d=i[f];if(\"kern\"==d.tag){n=!0;for(var u=0;u<d.tab.length;u++)if(!h[d.tab[u]]){h[d.tab[u]]=!0;for(var l=s[d.tab[u]],v=0;v<l.tabs.length;v++)if(null!=l.tabs[v]){var c,p=l.tabs[v];if(!p.coverage||-1!=(c=e._lctf.coverageIndex(p.coverage,t)))if(1==l.ltype);else if(2==l.ltype){var U=null;if(1==p.fmt){var g=p.pairsets[c];for(f=0;f<g.length;f++)g[f].gid2==a&&(U=g[f]);}else if(2==p.fmt){var S=e.U._getGlyphClass(t,p.classDef1),m=e.U._getGlyphClass(a,p.classDef2);U=p.matrix[S][m];}if(U){var b=0;return U.val1&&U.val1[2]&&(b+=U.val1[2]),U.val2&&U.val2[0]&&(b+=U.val2[0]),b}}}}}}if(r.kern&&!n){var y=r.kern.glyph1.indexOf(t);if(-1!=y){var F=r.kern.rval[y].glyph2.indexOf(a);if(-1!=F)return r.kern.rval[y].vals[F]}}return 0},e.U._applySubs=function(r,t,a,n){for(var o=r.length-t-1,s=0;s<a.tabs.length;s++)if(null!=a.tabs[s]){var i,h=a.tabs[s];if(!h.coverage||-1!=(i=e._lctf.coverageIndex(h.coverage,r[t])))if(1==a.ltype)r[t],1==h.fmt?r[t]=r[t]+h.delta:r[t]=h.newg[i];else if(4==a.ltype)for(var f=h.vals[i],d=0;d<f.length;d++){var u=f[d],l=u.chain.length;if(!(l>o)){for(var v=!0,c=0,p=0;p<l;p++){for(;-1==r[t+c+(1+p)];)c++;u.chain[p]!=r[t+c+(1+p)]&&(v=!1);}if(v){r[t]=u.nglyph;for(p=0;p<l+c;p++)r[t+p+1]=-1;break}}}else if(5==a.ltype&&2==h.fmt)for(var U=e._lctf.getInterval(h.cDef,r[t]),g=h.cDef[U+2],S=h.scset[g],m=0;m<S.length;m++){var b=S[m],y=b.input;if(!(y.length>o)){for(v=!0,p=0;p<y.length;p++){var F=e._lctf.getInterval(h.cDef,r[t+1+p]);if(-1==U&&h.cDef[F+2]!=y[p]){v=!1;break}}if(v){var _=b.substLookupRecords;for(d=0;d<_.length;d+=2)_[d],_[d+1];}}}else if(6==a.ltype&&3==h.fmt){if(!e.U._glsCovered(r,h.backCvg,t-h.backCvg.length))continue;if(!e.U._glsCovered(r,h.inptCvg,t))continue;if(!e.U._glsCovered(r,h.ahedCvg,t+h.inptCvg.length))continue;var C=h.lookupRec;for(m=0;m<C.length;m+=2){U=C[m];var x=n[C[m+1]];e.U._applySubs(r,t+U,x,n);}}}},e.U._glsCovered=function(r,t,a){for(var n=0;n<t.length;n++){if(-1==e._lctf.coverageIndex(t[n],r[a+n]))return !1}return !0},e.U.glyphsToPath=function(r,t,a){for(var n={cmds:[],crds:[]},o=0,s=0;s<t.length;s++){var i=t[s];if(-1!=i){for(var h=s<t.length-1&&-1!=t[s+1]?t[s+1]:0,f=e.U.glyphToPath(r,i),d=0;d<f.crds.length;d+=2)n.crds.push(f.crds[d]+o),n.crds.push(f.crds[d+1]);a&&n.cmds.push(a);for(d=0;d<f.cmds.length;d++)n.cmds.push(f.cmds[d]);a&&n.cmds.push(\"X\"),o+=r.hmtx.aWidth[i],s<t.length-1&&(o+=e.U.getPairAdjustment(r,i,h));}}return n},e.U.P={},e.U.P.moveTo=function(r,e,t){r.cmds.push(\"M\"),r.crds.push(e,t);},e.U.P.lineTo=function(r,e,t){r.cmds.push(\"L\"),r.crds.push(e,t);},e.U.P.curveTo=function(r,e,t,a,n,o,s){r.cmds.push(\"C\"),r.crds.push(e,t,a,n,o,s);},e.U.P.qcurveTo=function(r,e,t,a,n){r.cmds.push(\"Q\"),r.crds.push(e,t,a,n);},e.U.P.closePath=function(r){r.cmds.push(\"Z\");},e.U._drawCFF=function(r,t,a,n,o){for(var s=t.stack,i=t.nStems,h=t.haveWidth,f=t.width,d=t.open,u=0,l=t.x,v=t.y,c=0,p=0,U=0,g=0,S=0,m=0,b=0,y=0,F=0,_=0,C={val:0,size:0};u<r.length;){e.CFF.getCharString(r,u,C);var x=C.val;if(u+=C.size,\"o1\"==x||\"o18\"==x)s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0;else if(\"o3\"==x||\"o23\"==x){s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0;}else if(\"o4\"==x)s.length>1&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),d&&e.U.P.closePath(o),v+=s.pop(),e.U.P.moveTo(o,l,v),d=!0;else if(\"o5\"==x)for(;s.length>0;)l+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,l,v);else if(\"o6\"==x||\"o7\"==x)for(var P=s.length,I=\"o6\"==x,w=0;w<P;w++){var O=s.shift();I?l+=O:v+=O,I=!I,e.U.P.lineTo(o,l,v);}else if(\"o8\"==x||\"o24\"==x){P=s.length;for(var T=0;T+6<=P;)c=l+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),l=U+s.shift(),v=g+s.shift(),e.U.P.curveTo(o,c,p,U,g,l,v),T+=6;\"o24\"==x&&(l+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,l,v));}else {if(\"o11\"==x)break;if(\"o1234\"==x||\"o1235\"==x||\"o1236\"==x||\"o1237\"==x)\"o1234\"==x&&(p=v,U=(c=l+s.shift())+s.shift(),_=g=p+s.shift(),m=g,y=v,l=(b=(S=(F=U+s.shift())+s.shift())+s.shift())+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,l,v)),\"o1235\"==x&&(c=l+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),F=U+s.shift(),_=g+s.shift(),S=F+s.shift(),m=_+s.shift(),b=S+s.shift(),y=m+s.shift(),l=b+s.shift(),v=y+s.shift(),s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,l,v)),\"o1236\"==x&&(c=l+s.shift(),p=v+s.shift(),U=c+s.shift(),_=g=p+s.shift(),m=g,b=(S=(F=U+s.shift())+s.shift())+s.shift(),y=m+s.shift(),l=b+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,l,v)),\"o1237\"==x&&(c=l+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),F=U+s.shift(),_=g+s.shift(),S=F+s.shift(),m=_+s.shift(),b=S+s.shift(),y=m+s.shift(),Math.abs(b-l)>Math.abs(y-v)?l=b+s.shift():v=y+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,l,v));else if(\"o14\"==x){if(s.length>0&&!h&&(f=s.shift()+a.nominalWidthX,h=!0),4==s.length){var k=s.shift(),G=s.shift(),D=s.shift(),B=s.shift(),L=e.CFF.glyphBySE(a,D),R=e.CFF.glyphBySE(a,B);e.U._drawCFF(a.CharStrings[L],t,a,n,o),t.x=k,t.y=G,e.U._drawCFF(a.CharStrings[R],t,a,n,o);}d&&(e.U.P.closePath(o),d=!1);}else if(\"o19\"==x||\"o20\"==x){s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0,u+=i+7>>3;}else if(\"o21\"==x)s.length>2&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),v+=s.pop(),l+=s.pop(),d&&e.U.P.closePath(o),e.U.P.moveTo(o,l,v),d=!0;else if(\"o22\"==x)s.length>1&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),l+=s.pop(),d&&e.U.P.closePath(o),e.U.P.moveTo(o,l,v),d=!0;else if(\"o25\"==x){for(;s.length>6;)l+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,l,v);c=l+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),l=U+s.shift(),v=g+s.shift(),e.U.P.curveTo(o,c,p,U,g,l,v);}else if(\"o26\"==x)for(s.length%2&&(l+=s.shift());s.length>0;)c=l,p=v+s.shift(),l=U=c+s.shift(),v=(g=p+s.shift())+s.shift(),e.U.P.curveTo(o,c,p,U,g,l,v);else if(\"o27\"==x)for(s.length%2&&(v+=s.shift());s.length>0;)p=v,U=(c=l+s.shift())+s.shift(),g=p+s.shift(),l=U+s.shift(),v=g,e.U.P.curveTo(o,c,p,U,g,l,v);else if(\"o10\"==x||\"o29\"==x){var A=\"o10\"==x?n:a;if(0==s.length)console.debug(\"error: empty stack\");else {var W=s.pop(),M=A.Subrs[W+A.Bias];t.x=l,t.y=v,t.nStems=i,t.haveWidth=h,t.width=f,t.open=d,e.U._drawCFF(M,t,a,n,o),l=t.x,v=t.y,i=t.nStems,h=t.haveWidth,f=t.width,d=t.open;}}else if(\"o30\"==x||\"o31\"==x){var V=s.length,N=(T=0,\"o31\"==x);for(T+=V-(P=-3&V);T<P;)N?(p=v,U=(c=l+s.shift())+s.shift(),v=(g=p+s.shift())+s.shift(),P-T==5?(l=U+s.shift(),T++):l=U,N=!1):(c=l,p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),l=U+s.shift(),P-T==5?(v=g+s.shift(),T++):v=g,N=!0),e.U.P.curveTo(o,c,p,U,g,l,v),T+=4;}else {if(\"o\"==(x+\"\").charAt(0))throw console.debug(\"Unknown operation: \"+x,r),x;s.push(x);}}}t.x=l,t.y=v,t.nStems=i,t.haveWidth=h,t.width=f,t.open=d;};var t=e,a={Typr:t};return r.Typr=t,r.default=a,Object.defineProperty(r,\"__esModule\",{value:!0}),r}({}).Typr}\n\n/*!\nCustom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate\n(https://github.com/101arrowz/fflate) for use in Troika text rendering. \nOriginal licenses apply: \n- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)\n- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)\n*/\nfunction woff2otfFactory(){return function(r){var e=Uint8Array,n=Uint16Array,t=Uint32Array,a=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),f=function(r,e){for(var a=new n(31),i=0;i<31;++i)a[i]=e+=1<<r[i-1];var o=new t(a[30]);for(i=1;i<30;++i)for(var f=a[i];f<a[i+1];++f)o[f]=f-a[i]<<5|i;return [a,o]},u=f(a,2),v=u[0],s=u[1];v[28]=258,s[258]=28;for(var l=f(i,0)[0],c=new n(32768),g=0;g<32768;++g){var h=(43690&g)>>>1|(21845&g)<<1;h=(61680&(h=(52428&h)>>>2|(13107&h)<<2))>>>4|(3855&h)<<4,c[g]=((65280&h)>>>8|(255&h)<<8)>>>1;}var w=function(r,e,t){for(var a=r.length,i=0,o=new n(e);i<a;++i)++o[r[i]-1];var f,u=new n(e);for(i=0;i<e;++i)u[i]=u[i-1]+o[i-1]<<1;if(t){f=new n(1<<e);var v=15-e;for(i=0;i<a;++i)if(r[i])for(var s=i<<4|r[i],l=e-r[i],g=u[r[i]-1]++<<l,h=g|(1<<l)-1;g<=h;++g)f[c[g]>>>v]=s;}else for(f=new n(a),i=0;i<a;++i)r[i]&&(f[i]=c[u[r[i]-1]++]>>>15-r[i]);return f},d=new e(288);for(g=0;g<144;++g)d[g]=8;for(g=144;g<256;++g)d[g]=9;for(g=256;g<280;++g)d[g]=7;for(g=280;g<288;++g)d[g]=8;var m=new e(32);for(g=0;g<32;++g)m[g]=5;var b=w(d,9,1),p=w(m,5,1),y=function(r){for(var e=r[0],n=1;n<r.length;++n)r[n]>e&&(e=r[n]);return e},L=function(r,e,n){var t=e/8|0;return (r[t]|r[t+1]<<8)>>(7&e)&n},U=function(r,e){var n=e/8|0;return (r[n]|r[n+1]<<8|r[n+2]<<16)>>(7&e)},k=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],T=function(r,e,n){var t=new Error(e||k[r]);if(t.code=r,Error.captureStackTrace&&Error.captureStackTrace(t,T),!n)throw t;return t},O=function(r,f,u){var s=r.length;if(!s||u&&!u.l&&s<5)return f||new e(0);var c=!f||u,g=!u||u.i;u||(u={}),f||(f=new e(3*s));var h,d=function(r){var n=f.length;if(r>n){var t=new e(Math.max(2*n,r));t.set(f),f=t;}},m=u.f||0,k=u.p||0,O=u.b||0,A=u.l,x=u.d,E=u.m,D=u.n,M=8*s;do{if(!A){u.f=m=L(r,k,1);var S=L(r,k+1,3);if(k+=3,!S){var V=r[(I=((h=k)/8|0)+(7&h&&1)+4)-4]|r[I-3]<<8,_=I+V;if(_>s){g&&T(0);break}c&&d(O+V),f.set(r.subarray(I,_),O),u.b=O+=V,u.p=k=8*_;continue}if(1==S)A=b,x=p,E=9,D=5;else if(2==S){var j=L(r,k,31)+257,z=L(r,k+10,15)+4,C=j+L(r,k+5,31)+1;k+=14;for(var F=new e(C),P=new e(19),q=0;q<z;++q)P[o[q]]=L(r,k+3*q,7);k+=3*z;var B=y(P),G=(1<<B)-1,H=w(P,B,1);for(q=0;q<C;){var I,J=H[L(r,k,G)];if(k+=15&J,(I=J>>>4)<16)F[q++]=I;else {var K=0,N=0;for(16==I?(N=3+L(r,k,3),k+=2,K=F[q-1]):17==I?(N=3+L(r,k,7),k+=3):18==I&&(N=11+L(r,k,127),k+=7);N--;)F[q++]=K;}}var Q=F.subarray(0,j),R=F.subarray(j);E=y(Q),D=y(R),A=w(Q,E,1),x=w(R,D,1);}else T(1);if(k>M){g&&T(0);break}}c&&d(O+131072);for(var W=(1<<E)-1,X=(1<<D)-1,Y=k;;Y=k){var Z=(K=A[U(r,k)&W])>>>4;if((k+=15&K)>M){g&&T(0);break}if(K||T(2),Z<256)f[O++]=Z;else {if(256==Z){Y=k,A=null;break}var $=Z-254;if(Z>264){var rr=a[q=Z-257];$=L(r,k,(1<<rr)-1)+v[q],k+=rr;}var er=x[U(r,k)&X],nr=er>>>4;er||T(3),k+=15&er;R=l[nr];if(nr>3){rr=i[nr];R+=U(r,k)&(1<<rr)-1,k+=rr;}if(k>M){g&&T(0);break}c&&d(O+131072);for(var tr=O+$;O<tr;O+=4)f[O]=f[O-R],f[O+1]=f[O+1-R],f[O+2]=f[O+2-R],f[O+3]=f[O+3-R];O=tr;}}u.l=A,u.p=Y,u.b=O,A&&(m=1,u.m=E,u.d=x,u.n=D);}while(!m);return O==f.length?f:function(r,a,i){(null==a||a<0)&&(a=0),(null==i||i>r.length)&&(i=r.length);var o=new(r instanceof n?n:r instanceof t?t:e)(i-a);return o.set(r.subarray(a,i)),o}(f,0,O)},A=new e(0);var x=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{x.decode(A,{stream:!0}),1;}catch(r){}return r.convert_streams=function(r){var e=new DataView(r),n=0;function t(){var r=e.getUint16(n);return n+=2,r}function a(){var r=e.getUint32(n);return n+=4,r}function i(r){m.setUint16(b,r),b+=2;}function o(r){m.setUint32(b,r),b+=4;}for(var f={signature:a(),flavor:a(),length:a(),numTables:t(),reserved:t(),totalSfntSize:a(),majorVersion:t(),minorVersion:t(),metaOffset:a(),metaLength:a(),metaOrigLength:a(),privOffset:a(),privLength:a()},u=0;Math.pow(2,u)<=f.numTables;)u++;u--;for(var v=16*Math.pow(2,u),s=16*f.numTables-v,l=12,c=[],g=0;g<f.numTables;g++)c.push({tag:a(),offset:a(),compLength:a(),origLength:a(),origChecksum:a()}),l+=16;var h,w=new Uint8Array(12+16*c.length+c.reduce((function(r,e){return r+e.origLength+4}),0)),d=w.buffer,m=new DataView(d),b=0;return o(f.flavor),i(f.numTables),i(v),i(u),i(s),c.forEach((function(r){o(r.tag),o(r.origChecksum),o(l),o(r.origLength),r.outOffset=l,(l+=r.origLength)%4!=0&&(l+=4-l%4);})),c.forEach((function(e){var n,t=r.slice(e.offset,e.offset+e.compLength);if(e.compLength!=e.origLength){var a=new Uint8Array(e.origLength);n=new Uint8Array(t,2),O(n,a);}else a=new Uint8Array(t);w.set(a,e.outOffset);var i=0;(l=e.outOffset+e.origLength)%4!=0&&(i=4-l%4),w.set(new Uint8Array(i).buffer,e.outOffset+e.origLength),h=l+i;})),d.slice(0,h)},Object.defineProperty(r,\"__esModule\",{value:!0}),r}({}).convert_streams}\n\n/**\n * A factory wrapper parsing a font file using Typr.\n * Also adds support for WOFF files (not WOFF2).\n */\n\nfunction parserFactory(Typr, woff2otf) {\n  const cmdArgLengths = {\n    M: 2,\n    L: 2,\n    Q: 4,\n    C: 6,\n    Z: 0\n  };\n\n  // {joinType: \"skip+step,...\"}\n  const joiningTypeRawData = {\"C\":\"18g,ca,368,1kz\",\"D\":\"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v\",\"R\":\"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6\",\"L\":\"x9u,jff,a,fd,jv\",\"T\":\"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n\"};\n\n  const JT_LEFT = 1, //indicates that a character joins with the subsequent character, but does not join with the preceding character.\n    JT_RIGHT = 2, //indicates that a character joins with the preceding character, but does not join with the subsequent character.\n    JT_DUAL = 4, //indicates that a character joins with the preceding character and joins with the subsequent character.\n    JT_TRANSPARENT = 8, //indicates that the character does not join with adjacent characters and that the character must be skipped over when the shaping engine is evaluating the joining positions in a sequence of characters. When a JT_TRANSPARENT character is encountered in a sequence, the JOINING_TYPE of the preceding character passes through. Diacritical marks are frequently assigned this value.\n    JT_JOIN_CAUSING = 16, //indicates that the character forces the use of joining forms with the preceding and subsequent characters. Kashidas and the Zero Width Joiner (U+200D) are both JOIN_CAUSING characters.\n    JT_NON_JOINING = 32; //indicates that a character does not join with the preceding or with the subsequent character.,\n\n  let joiningTypeMap;\n  function getCharJoiningType(ch) {\n    if (!joiningTypeMap) {\n      const m = {\n        R: JT_RIGHT,\n        L: JT_LEFT,\n        D: JT_DUAL,\n        C: JT_JOIN_CAUSING,\n        U: JT_NON_JOINING,\n        T: JT_TRANSPARENT\n      };\n      joiningTypeMap = new Map();\n      for (let type in joiningTypeRawData) {\n        let lastCode = 0;\n        joiningTypeRawData[type].split(',').forEach(range => {\n          let [skip, step] = range.split('+');\n          skip = parseInt(skip,36);\n          step = step ? parseInt(step, 36) : 0;\n          joiningTypeMap.set(lastCode += skip, m[type]);\n          for (let i = step; i--;) {\n            joiningTypeMap.set(++lastCode, m[type]);\n          }\n        });\n      }\n    }\n    return joiningTypeMap.get(ch) || JT_NON_JOINING\n  }\n\n  const ISOL = 1, INIT = 2, FINA = 3, MEDI = 4;\n  const formsToFeatures = [null, 'isol', 'init', 'fina', 'medi'];\n\n  function detectJoiningForms(str) {\n    // This implements the algorithm described here:\n    // https://github.com/n8willis/opentype-shaping-documents/blob/master/opentype-shaping-arabic-general.md\n    const joiningForms = new Uint8Array(str.length);\n    let prevJoiningType = JT_NON_JOINING;\n    let prevForm = ISOL;\n    let prevIndex = -1;\n    for (let i = 0; i < str.length; i++) {\n      const code = str.codePointAt(i);\n      let joiningType = getCharJoiningType(code) | 0;\n      let form = ISOL;\n      if (joiningType & JT_TRANSPARENT) {\n        continue\n      }\n      if (prevJoiningType & (JT_LEFT | JT_DUAL | JT_JOIN_CAUSING)) {\n        if (joiningType & (JT_RIGHT | JT_DUAL | JT_JOIN_CAUSING)) {\n          form = FINA;\n          // isol->init, fina->medi\n          if (prevForm === ISOL || prevForm === FINA) {\n            joiningForms[prevIndex]++;\n          }\n        }\n        else if (joiningType & (JT_LEFT | JT_NON_JOINING)) {\n          // medi->fina, init->isol\n          if (prevForm === INIT || prevForm === MEDI) {\n            joiningForms[prevIndex]--;\n          }\n        }\n      }\n      else if (prevJoiningType & (JT_RIGHT | JT_NON_JOINING)) {\n        // medi->fina, init->isol\n        if (prevForm === INIT || prevForm === MEDI) {\n          joiningForms[prevIndex]--;\n        }\n      }\n      prevForm = joiningForms[i] = form;\n      prevJoiningType = joiningType;\n      prevIndex = i;\n      if (code > 0xffff) i++;\n    }\n    // console.log(str.split('').map(ch => ch.codePointAt(0).toString(16)))\n    // console.log(str.split('').map(ch => getCharJoiningType(ch.codePointAt(0))))\n    // console.log(Array.from(joiningForms).map(f => formsToFeatures[f] || 'none'))\n    return joiningForms\n  }\n\n  function stringToGlyphs (font, str) {\n    const glyphIds = [];\n    for (let i = 0; i < str.length; i++) {\n      const cc = str.codePointAt(i);\n      if (cc > 0xffff) i++;\n      glyphIds.push(Typr.U.codeToGlyph(font, cc));\n    }\n\n    const gsub = font['GSUB'];\n    if (gsub) {\n      const {lookupList, featureList} = gsub;\n      let joiningForms;\n      const supportedFeatures = /^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws)$/;\n      const usedLookups = [];\n      featureList.forEach(feature => {\n        if (supportedFeatures.test(feature.tag)) {\n          for (let ti = 0; ti < feature.tab.length; ti++) {\n            if (usedLookups[feature.tab[ti]]) continue\n            usedLookups[feature.tab[ti]] = true;\n            const tab = lookupList[feature.tab[ti]];\n            const isJoiningFeature = /^(isol|init|fina|medi)$/.test(feature.tag);\n            if (isJoiningFeature && !joiningForms) { //lazy\n              joiningForms = detectJoiningForms(str);\n            }\n            for (let ci = 0; ci < glyphIds.length; ci++) {\n              if (!joiningForms || !isJoiningFeature || formsToFeatures[joiningForms[ci]] === feature.tag) {\n                Typr.U._applySubs(glyphIds, ci, tab, lookupList);\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return glyphIds\n  }\n\n  function firstNum(...args) {\n    for (let i = 0; i < args.length; i++) {\n      if (typeof args[i] === 'number') {\n        return args[i]\n      }\n    }\n  }\n\n  function wrapFontObj(typrFont) {\n    const glyphMap = Object.create(null);\n\n    const os2 = typrFont['OS/2'];\n    const hhea = typrFont.hhea;\n    const unitsPerEm = typrFont.head.unitsPerEm;\n    const ascender = firstNum(os2 && os2.sTypoAscender, hhea && hhea.ascender, unitsPerEm);\n\n    const fontObj = {\n      unitsPerEm,\n      ascender,\n      descender: firstNum(os2 && os2.sTypoDescender, hhea && hhea.descender, 0),\n      capHeight: firstNum(os2 && os2.sCapHeight, ascender),\n      xHeight: firstNum(os2 && os2.sxHeight, ascender),\n      lineGap: firstNum(os2 && os2.sTypoLineGap, hhea && hhea.lineGap),\n      forEachGlyph(text, fontSize, letterSpacing, callback) {\n        let glyphX = 0;\n        const fontScale = 1 / fontObj.unitsPerEm * fontSize;\n\n        const glyphIndices = stringToGlyphs(typrFont, text);\n        let charIndex = 0;\n        let prevGlyphIndex = -1;\n        glyphIndices.forEach((glyphIndex, i) => {\n          // Typr returns a glyph index per string codepoint, with -1s in place of those that\n          // were omitted due to ligature substitution. So we can track original index in the\n          // string via simple increment, and skip everything else when seeing a -1.\n          if (glyphIndex !== -1) {\n            let glyphObj = glyphMap[glyphIndex];\n            if (!glyphObj) {\n              const {cmds, crds} = Typr.U.glyphToPath(typrFont, glyphIndex);\n\n              // Build path string\n              let path = '';\n              let crdsIdx = 0;\n              for (let i = 0, len = cmds.length; i < len; i++) {\n                const numArgs = cmdArgLengths[cmds[i]];\n                path += cmds[i];\n                for (let j = 1; j <= numArgs; j++) {\n                  path += (j > 1 ? ',' : '') + crds[crdsIdx++];\n                }\n              }\n\n              // Find extents - Glyf gives this in metadata but not CFF, and Typr doesn't\n              // normalize the two, so it's simplest just to iterate ourselves.\n              let xMin, yMin, xMax, yMax;\n              if (crds.length) {\n                xMin = yMin = Infinity;\n                xMax = yMax = -Infinity;\n                for (let i = 0, len = crds.length; i < len; i += 2) {\n                  let x = crds[i];\n                  let y = crds[i + 1];\n                  if (x < xMin) xMin = x;\n                  if (y < yMin) yMin = y;\n                  if (x > xMax) xMax = x;\n                  if (y > yMax) yMax = y;\n                }\n              } else {\n                xMin = xMax = yMin = yMax = 0;\n              }\n\n              glyphObj = glyphMap[glyphIndex] = {\n                index: glyphIndex,\n                advanceWidth: typrFont.hmtx.aWidth[glyphIndex],\n                xMin,\n                yMin,\n                xMax,\n                yMax,\n                path,\n                pathCommandCount: cmds.length,\n                // forEachPathCommand(callback) {\n                //   let argsIndex = 0\n                //   const argsArray = []\n                //   for (let i = 0, len = cmds.length; i < len; i++) {\n                //     const numArgs = cmdArgLengths[cmds[i]]\n                //     argsArray.length = 1 + numArgs\n                //     argsArray[0] = cmds[i]\n                //     for (let j = 1; j <= numArgs; j++) {\n                //       argsArray[j] = crds[argsIndex++]\n                //     }\n                //     callback.apply(null, argsArray)\n                //   }\n                // }\n              };\n            }\n\n            // Kerning\n            if (prevGlyphIndex !== -1) {\n              glyphX += Typr.U.getPairAdjustment(typrFont, prevGlyphIndex, glyphIndex) * fontScale;\n            }\n\n            callback.call(null, glyphObj, glyphX, charIndex);\n\n            if (glyphObj.advanceWidth) {\n              glyphX += glyphObj.advanceWidth * fontScale;\n            }\n            if (letterSpacing) {\n              glyphX += letterSpacing * fontSize;\n            }\n\n            prevGlyphIndex = glyphIndex;\n          }\n          charIndex += (text.codePointAt(charIndex) > 0xffff ? 2 : 1);\n        });\n        return glyphX\n      }\n    };\n\n    return fontObj\n  }\n\n  return function parse(buffer) {\n    // Look to see if we have a WOFF file and convert it if so:\n    const peek = new Uint8Array(buffer, 0, 4);\n    const tag = Typr._bin.readASCII(peek, 0, 4);\n    if (tag === 'wOFF') {\n      buffer = woff2otf(buffer);\n    } else if (tag === 'wOF2') {\n      throw new Error('woff2 fonts not supported')\n    }\n    return wrapFontObj(Typr.parse(buffer)[0])\n  }\n}\n\n\nconst workerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Typr Font Parser',\n  dependencies: [typrFactory, woff2otfFactory, parserFactory],\n  init(typrFactory, woff2otfFactory, parserFactory) {\n    const Typr = typrFactory();\n    const woff2otf = woff2otfFactory();\n    return parserFactory(Typr, woff2otf)\n  }\n});\n\nconst CONFIG = {\n  defaultFontURL: 'https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff', //Roboto Regular\n  sdfGlyphSize: 64,\n  sdfMargin: 1 / 16,\n  sdfExponent: 9,\n  textureWidth: 2048\n};\nconst tempColor = /*#__PURE__*/new Color();\nlet hasRequested = false;\n\nfunction now$1() {\n  return (self.performance || Date).now()\n}\n\n/**\n * Customizes the text builder configuration. This must be called prior to the first font processing\n * request, and applies to all fonts.\n *\n * @param {String} config.defaultFontURL - The URL of the default font to use for text processing\n *                 requests, in case none is specified or the specifiede font fails to load or parse.\n *                 Defaults to \"Roboto Regular\" from Google Fonts.\n * @param {Number} config.sdfGlyphSize - The default size of each glyph's SDF (signed distance field)\n *                 texture used for rendering. Must be a power-of-two number, and applies to all fonts,\n *                 but note that this can also be overridden per call to `getTextRenderInfo()`.\n *                 Larger sizes can improve the quality of glyph rendering by increasing the sharpness\n *                 of corners and preventing loss of very thin lines, at the expense of memory. Defaults\n *                 to 64 which is generally a good balance of size and quality.\n * @param {Number} config.sdfExponent - The exponent used when encoding the SDF values. A higher exponent\n *                 shifts the encoded 8-bit values to achieve higher precision/accuracy at texels nearer\n *                 the glyph's path, with lower precision further away. Defaults to 9.\n * @param {Number} config.sdfMargin - How much space to reserve in the SDF as margin outside the glyph's\n *                 path, as a percentage of the SDF width. A larger margin increases the quality of\n *                 extruded glyph outlines, but decreases the precision available for the glyph itself.\n *                 Defaults to 1/16th of the glyph size.\n * @param {Number} config.textureWidth - The width of the SDF texture; must be a power of 2. Defaults to\n *                 2048 which is a safe maximum texture dimension according to the stats at\n *                 https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE and should allow for a\n *                 reasonably large number of glyphs (default glyph size of 64^2 and safe texture size of\n *                 2048^2, times 4 channels, allows for 4096 glyphs.) This can be increased if you need to\n *                 increase the glyph size and/or have an extraordinary number of glyphs.\n */\nfunction configureTextBuilder(config) {\n  if (hasRequested) {\n    console.warn('configureTextBuilder called after first font request; will be ignored.');\n  } else {\n    assign(CONFIG, config);\n  }\n}\n\n/**\n * Repository for all font SDF atlas textures and their glyph mappings. There is a separate atlas for\n * each sdfGlyphSize. Each atlas has a single Texture that holds all glyphs for all fonts.\n *\n *   {\n *     [sdfGlyphSize]: {\n *       glyphCount: number,\n *       sdfGlyphSize: number,\n *       sdfTexture: Texture,\n *       sdfCanvas: HTMLCanvasElement,\n *       contextLost: boolean,\n *       glyphsByFont: Map<fontURL, Map<glyphID, {path, atlasIndex, sdfViewBox}>>\n *     }\n *   }\n */\nconst atlases = Object.create(null);\n\n/**\n * @typedef {object} TroikaTextRenderInfo - Format of the result from `getTextRenderInfo`.\n * @property {object} parameters - The normalized input arguments to the render call.\n * @property {Texture} sdfTexture - The SDF atlas texture.\n * @property {number} sdfGlyphSize - The size of each glyph's SDF; see `configureTextBuilder`.\n * @property {number} sdfExponent - The exponent used in encoding the SDF's values; see `configureTextBuilder`.\n * @property {Float32Array} glyphBounds - List of [minX, minY, maxX, maxY] quad bounds for each glyph.\n * @property {Float32Array} glyphAtlasIndices - List holding each glyph's index in the SDF atlas.\n * @property {Uint8Array} [glyphColors] - List holding each glyph's [r, g, b] color, if `colorRanges` was supplied.\n * @property {Float32Array} [caretPositions] - A list of caret positions for all characters in the string; each is\n *           three elements: the starting X, the ending X, and the bottom Y for the caret.\n * @property {number} [caretHeight] - An appropriate height for all selection carets.\n * @property {number} ascender - The font's ascender metric.\n * @property {number} descender - The font's descender metric.\n * @property {number} capHeight - The font's cap height metric, based on the height of Latin capital letters.\n * @property {number} xHeight - The font's x height metric, based on the height of Latin lowercase letters.\n * @property {number} lineHeight - The final computed lineHeight measurement.\n * @property {number} topBaseline - The y position of the top line's baseline.\n * @property {Array<number>} blockBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\n *           this can include extra vertical space beyond the visible glyphs due to lineHeight, and is\n *           equivalent to the dimensions of a block-level text element in CSS.\n * @property {Array<number>} visibleBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\n *           unlike `blockBounds` this is tightly wrapped to the visible glyph paths.\n * @property {Array<object>} chunkedBounds - List of bounding rects for each consecutive set of N glyphs,\n *           in the format `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`.\n * @property {object} timings - Timing info for various parts of the rendering logic including SDF\n *           generation, typesetting, etc.\n * @frozen\n */\n\n/**\n * @callback getTextRenderInfo~callback\n * @param {TroikaTextRenderInfo} textRenderInfo\n */\n\n/**\n * Main entry point for requesting the data needed to render a text string with given font parameters.\n * This is an asynchronous call, performing most of the logic in a web worker thread.\n * @param {object} args\n * @param {getTextRenderInfo~callback} callback\n */\nfunction getTextRenderInfo(args, callback) {\n  hasRequested = true;\n  args = assign({}, args);\n  const totalStart = now$1();\n\n  // Apply default font here to avoid a 'null' atlas, and convert relative\n  // URLs to absolute so they can be resolved in the worker\n  args.font = toAbsoluteURL(args.font || CONFIG.defaultFontURL);\n\n  // Normalize text to a string\n  args.text = '' + args.text;\n\n  args.sdfGlyphSize = args.sdfGlyphSize || CONFIG.sdfGlyphSize;\n\n  // Normalize colors\n  if (args.colorRanges != null) {\n    let colors = {};\n    for (let key in args.colorRanges) {\n      if (args.colorRanges.hasOwnProperty(key)) {\n        let val = args.colorRanges[key];\n        if (typeof val !== 'number') {\n          val = tempColor.set(val).getHex();\n        }\n        colors[key] = val;\n      }\n    }\n    args.colorRanges = colors;\n  }\n\n  Object.freeze(args);\n\n  // Init the atlas if needed\n  const {textureWidth, sdfExponent} = CONFIG;\n  const {sdfGlyphSize} = args;\n  const glyphsPerRow = (textureWidth / sdfGlyphSize * 4);\n  let atlas = atlases[sdfGlyphSize];\n  if (!atlas) {\n    const canvas = document.createElement('canvas');\n    canvas.width = textureWidth;\n    canvas.height = sdfGlyphSize * 256 / glyphsPerRow; // start tall enough to fit 256 glyphs\n    atlas = atlases[sdfGlyphSize] = {\n      glyphCount: 0,\n      sdfGlyphSize,\n      sdfCanvas: canvas,\n      sdfTexture: new Texture(\n        canvas,\n        undefined,\n        undefined,\n        undefined,\n        LinearFilter,\n        LinearFilter\n      ),\n      contextLost: false,\n      glyphsByFont: new Map()\n    };\n    atlas.sdfTexture.generateMipmaps = false;\n    initContextLossHandling(atlas);\n  }\n\n  const {sdfTexture, sdfCanvas} = atlas;\n  let fontGlyphs = atlas.glyphsByFont.get(args.font);\n  if (!fontGlyphs) {\n    atlas.glyphsByFont.set(args.font, fontGlyphs = new Map());\n  }\n\n  // Issue request to the typesetting engine in the worker\n  typesetInWorker(args).then(result => {\n    const {glyphIds, glyphPositions, fontSize, unitsPerEm, timings} = result;\n    const neededSDFs = [];\n    const glyphBounds = new Float32Array(glyphIds.length * 4);\n    const fontSizeMult = fontSize / unitsPerEm;\n    let boundsIdx = 0;\n    let positionsIdx = 0;\n    const quadsStart = now$1();\n    glyphIds.forEach((glyphId, i) => {\n      let glyphInfo = fontGlyphs.get(glyphId);\n\n      // If this is a glyphId not seen before, add it to the atlas\n      if (!glyphInfo) {\n        const {path, pathBounds} = result.glyphData[glyphId];\n\n        // Margin around path edges in SDF, based on a percentage of the glyph's max dimension.\n        // Note we add an extra 0.5 px over the configured value because the outer 0.5 doesn't contain\n        // useful interpolated values and will be ignored anyway.\n        const fontUnitsMargin = Math.max(pathBounds[2] - pathBounds[0], pathBounds[3] - pathBounds[1])\n          / sdfGlyphSize * (CONFIG.sdfMargin * sdfGlyphSize + 0.5);\n\n        const atlasIndex = atlas.glyphCount++;\n        const sdfViewBox = [\n          pathBounds[0] - fontUnitsMargin,\n          pathBounds[1] - fontUnitsMargin,\n          pathBounds[2] + fontUnitsMargin,\n          pathBounds[3] + fontUnitsMargin,\n        ];\n        fontGlyphs.set(glyphId, (glyphInfo = { path, atlasIndex, sdfViewBox }));\n\n        // Collect those that need SDF generation\n        neededSDFs.push(glyphInfo);\n      }\n\n      // Calculate bounds for renderable quads\n      // TODO can we get this back off the main thread?\n      const {sdfViewBox} = glyphInfo;\n      const posX = glyphPositions[positionsIdx++];\n      const posY = glyphPositions[positionsIdx++];\n      glyphBounds[boundsIdx++] = posX + sdfViewBox[0] * fontSizeMult;\n      glyphBounds[boundsIdx++] = posY + sdfViewBox[1] * fontSizeMult;\n      glyphBounds[boundsIdx++] = posX + sdfViewBox[2] * fontSizeMult;\n      glyphBounds[boundsIdx++] = posY + sdfViewBox[3] * fontSizeMult;\n\n      // Convert glyphId to SDF index for the shader\n      glyphIds[i] = glyphInfo.atlasIndex;\n    });\n    timings.quads = (timings.quads || 0) + (now$1() - quadsStart);\n\n    const sdfStart = now$1();\n    timings.sdf = {};\n\n    // Grow the texture height by power of 2 if needed\n    const currentHeight = sdfCanvas.height;\n    const neededRows = Math.ceil(atlas.glyphCount / glyphsPerRow);\n    const neededHeight = Math.pow(2, Math.ceil(Math.log2(neededRows * sdfGlyphSize)));\n    if (neededHeight > currentHeight) {\n      // Since resizing the canvas clears its render buffer, it needs special handling to copy the old contents over\n      console.info(`Increasing SDF texture size ${currentHeight}->${neededHeight}`);\n      resizeWebGLCanvasWithoutClearing(sdfCanvas, textureWidth, neededHeight);\n      // As of Three r136 textures cannot be resized once they're allocated on the GPU, we must dispose to reallocate it\n      sdfTexture.dispose();\n    }\n\n    Promise.all(neededSDFs.map(glyphInfo =>\n      generateGlyphSDF(glyphInfo, atlas, args.gpuAccelerateSDF).then(({timing}) => {\n        timings.sdf[glyphInfo.atlasIndex] = timing;\n      })\n    )).then(() => {\n      if (neededSDFs.length && !atlas.contextLost) {\n        safariPre15Workaround(atlas);\n        sdfTexture.needsUpdate = true;\n      }\n      timings.sdfTotal = now$1() - sdfStart;\n      timings.total = now$1() - totalStart;\n      // console.log(`SDF - ${timings.sdfTotal}, Total - ${timings.total - timings.fontLoad}`)\n\n      // Invoke callback with the text layout arrays and updated texture\n      callback(Object.freeze({\n        parameters: args,\n        sdfTexture,\n        sdfGlyphSize,\n        sdfExponent,\n        glyphBounds,\n        glyphAtlasIndices: glyphIds,\n        glyphColors: result.glyphColors,\n        caretPositions: result.caretPositions,\n        caretHeight: result.caretHeight,\n        chunkedBounds: result.chunkedBounds,\n        ascender: result.ascender,\n        descender: result.descender,\n        lineHeight: result.lineHeight,\n        capHeight: result.capHeight,\n        xHeight: result.xHeight,\n        topBaseline: result.topBaseline,\n        blockBounds: result.blockBounds,\n        visibleBounds: result.visibleBounds,\n        timings: result.timings,\n      }));\n    });\n  });\n\n  // While the typesetting request is being handled, go ahead and make sure the atlas canvas context is\n  // \"warmed up\"; the first request will be the longest due to shader program compilation so this gets\n  // a head start on that process before SDFs actually start getting processed.\n  Promise.resolve().then(() => {\n    if (!atlas.contextLost) {\n      warmUpSDFCanvas(sdfCanvas);\n    }\n  });\n}\n\nfunction generateGlyphSDF({path, atlasIndex, sdfViewBox}, {sdfGlyphSize, sdfCanvas, contextLost}, useGPU) {\n  if (contextLost) {\n    // If the context is lost there's nothing we can do, just quit silently and let it\n    // get regenerated when the context is restored\n    return Promise.resolve({timing: -1})\n  }\n  const {textureWidth, sdfExponent} = CONFIG;\n  const maxDist = Math.max(sdfViewBox[2] - sdfViewBox[0], sdfViewBox[3] - sdfViewBox[1]);\n  const squareIndex = Math.floor(atlasIndex / 4);\n  const x = squareIndex % (textureWidth / sdfGlyphSize) * sdfGlyphSize;\n  const y = Math.floor(squareIndex / (textureWidth / sdfGlyphSize)) * sdfGlyphSize;\n  const channel = atlasIndex % 4;\n  return generateSDF(sdfGlyphSize, sdfGlyphSize, path, sdfViewBox, maxDist, sdfExponent, sdfCanvas, x, y, channel, useGPU)\n}\n\nfunction initContextLossHandling(atlas) {\n  const canvas = atlas.sdfCanvas;\n\n  /*\n  // Begin context loss simulation\n  if (!window.WebGLDebugUtils) {\n    let script = document.getElementById('WebGLDebugUtilsScript')\n    if (!script) {\n      script = document.createElement('script')\n      script.id = 'WebGLDebugUtils'\n      document.head.appendChild(script)\n      script.src = 'https://cdn.jsdelivr.net/gh/KhronosGroup/WebGLDeveloperTools@b42e702/src/debug/webgl-debug.js'\n    }\n    script.addEventListener('load', () => {\n      initContextLossHandling(atlas)\n    })\n    return\n  }\n  window.WebGLDebugUtils.makeLostContextSimulatingCanvas(canvas)\n  canvas.loseContextInNCalls(500)\n  canvas.addEventListener('webglcontextrestored', (event) => {\n    canvas.loseContextInNCalls(5000)\n  })\n  // End context loss simulation\n  */\n\n  canvas.addEventListener('webglcontextlost', (event) => {\n    console.log('Context Lost', event);\n    event.preventDefault();\n    atlas.contextLost = true;\n  });\n  canvas.addEventListener('webglcontextrestored', (event) => {\n    console.log('Context Restored', event);\n    atlas.contextLost = false;\n    // Regenerate all glyphs into the restored canvas:\n    const promises = [];\n    atlas.glyphsByFont.forEach(glyphMap => {\n      glyphMap.forEach(glyph => {\n        promises.push(generateGlyphSDF(glyph, atlas, true));\n      });\n    });\n    Promise.all(promises).then(() => {\n      safariPre15Workaround(atlas);\n      atlas.sdfTexture.needsUpdate = true;\n    });\n  });\n}\n\n/**\n * Preload a given font and optionally pre-generate glyph SDFs for one or more character sequences.\n * This can be useful to avoid long pauses when first showing text in a scene, by preloading the\n * needed fonts and glyphs up front along with other assets.\n *\n * @param {object} options\n * @param {string} options.font - URL of the font file to preload. If not given, the default font will\n *        be loaded.\n * @param {string|string[]} options.characters - One or more character sequences for which to pre-\n *        generate glyph SDFs. Note that this will honor ligature substitution, so you may need\n *        to specify ligature sequences in addition to their individual characters to get all\n *        possible glyphs, e.g. `[\"t\", \"h\", \"th\"]` to get the \"t\" and \"h\" glyphs plus the \"th\" ligature.\n * @param {number} options.sdfGlyphSize - The size at which to prerender the SDF textures for the\n *        specified `characters`.\n * @param {function} callback - A function that will be called when the preloading is complete.\n */\nfunction preloadFont({font, characters, sdfGlyphSize}, callback) {\n  let text = Array.isArray(characters) ? characters.join('\\n') : '' + characters;\n  getTextRenderInfo({ font, sdfGlyphSize, text }, callback);\n}\n\n\n// Local assign impl so we don't have to import troika-core\nfunction assign(toObj, fromObj) {\n  for (let key in fromObj) {\n    if (fromObj.hasOwnProperty(key)) {\n      toObj[key] = fromObj[key];\n    }\n  }\n  return toObj\n}\n\n// Utility for making URLs absolute\nlet linkEl;\nfunction toAbsoluteURL(path) {\n  if (!linkEl) {\n    linkEl = typeof document === 'undefined' ? {} : document.createElement('a');\n  }\n  linkEl.href = path;\n  return linkEl.href\n}\n\n/**\n * Safari < v15 seems unable to use the SDF webgl canvas as a texture. This applies a workaround\n * where it reads the pixels out of that canvas and uploads them as a data texture instead, at\n * a slight performance cost.\n */\nfunction safariPre15Workaround(atlas) {\n  // Use createImageBitmap support as a proxy for Safari<15, all other mainstream browsers\n  // have supported it for a long while so any false positives should be minimal.\n  if (typeof createImageBitmap !== 'function') {\n    console.info('Safari<15: applying SDF canvas workaround');\n    const {sdfCanvas, sdfTexture} = atlas;\n    const {width, height} = sdfCanvas;\n    const gl = atlas.sdfCanvas.getContext('webgl');\n    let pixels = sdfTexture.image.data;\n    if (!pixels || pixels.length !== width * height * 4) {\n      pixels = new Uint8Array(width * height * 4);\n      sdfTexture.image = {width, height, data: pixels};\n      sdfTexture.flipY = false;\n      sdfTexture.isDataTexture = true;\n    }\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n  }\n}\n\n\nconst typesetterWorkerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Typesetter',\n  dependencies: [\n    CONFIG,\n    workerModule,\n    createTypesetter,\n    bidiFactory\n  ],\n  init(config, fontParser, createTypesetter, bidiFactory) {\n    const {defaultFontURL} = config;\n    return createTypesetter(fontParser, bidiFactory(), { defaultFontURL })\n  }\n});\n\nconst typesetInWorker = /*#__PURE__*/defineWorkerModule({\n  name: 'Typesetter',\n  dependencies: [\n    typesetterWorkerModule,\n  ],\n  init(typesetter) {\n    return function(args) {\n      return new Promise(resolve => {\n        typesetter.typeset(args, resolve);\n      })\n    }\n  },\n  getTransferables(result) {\n    // Mark array buffers as transferable to avoid cloning during postMessage\n    const transferables = [\n      result.glyphPositions.buffer,\n      result.glyphIds.buffer\n    ];\n    if (result.caretPositions) {\n      transferables.push(result.caretPositions.buffer);\n    }\n    if (result.glyphColors) {\n      transferables.push(result.glyphColors.buffer);\n    }\n    return transferables\n  }\n});\n\nfunction dumpSDFTextures() {\n  Object.keys(atlases).forEach(size => {\n    const canvas = atlases[size].sdfCanvas;\n    const {width, height} = canvas;\n    console.log(\"%c.\", `\n      background: url(${canvas.toDataURL()});\n      background-size: ${width}px ${height}px;\n      color: transparent;\n      font-size: 0;\n      line-height: ${height}px;\n      padding-left: ${width}px;\n    `);\n  });\n}\n\nconst templateGeometries = {};\n\nfunction getTemplateGeometry(detail) {\n  let geom = templateGeometries[detail];\n  if (!geom) {\n    // Geometry is two planes back-to-back, which will always be rendered FrontSide only but\n    // appear as DoubleSide by default. FrontSide/BackSide are emulated using drawRange.\n    // We do it this way to avoid the performance hit of two draw calls for DoubleSide materials\n    // introduced by Three.js in r130 - see https://github.com/mrdoob/three.js/pull/21967\n    const front = new PlaneGeometry(1, 1, detail, detail);\n    const back = front.clone();\n    const frontAttrs = front.attributes;\n    const backAttrs = back.attributes;\n    const combined = new BufferGeometry();\n    const vertCount = frontAttrs.uv.count;\n    for (let i = 0; i < vertCount; i++) {\n      backAttrs.position.array[i * 3] *= -1; // flip position x\n      backAttrs.normal.array[i * 3 + 2] *= -1; // flip normal z\n    }\n    ['position', 'normal', 'uv'].forEach(name => {\n      combined.setAttribute(name, new Float32BufferAttribute(\n        [...frontAttrs[name].array, ...backAttrs[name].array],\n        frontAttrs[name].itemSize)\n      );\n    });\n    combined.setIndex([...front.index.array, ...back.index.array.map(n => n + vertCount)]);\n    combined.translate(0.5, 0.5, 0);\n    geom = templateGeometries[detail] = combined;\n  }\n  return geom\n}\n\nconst glyphBoundsAttrName = 'aTroikaGlyphBounds';\nconst glyphIndexAttrName = 'aTroikaGlyphIndex';\nconst glyphColorAttrName = 'aTroikaGlyphColor';\n\n/**\n@class GlyphsGeometry\n\nA specialized Geometry for rendering a set of text glyphs. Uses InstancedBufferGeometry to\nrender the glyphs using GPU instancing of a single quad, rather than constructing a whole\ngeometry with vertices, for much smaller attribute arraybuffers according to this math:\n\n  Where N = number of glyphs...\n\n  Instanced:\n  - position: 4 * 3\n  - index: 2 * 3\n  - normal: 4 * 3\n  - uv: 4 * 2\n  - glyph x/y bounds: N * 4\n  - glyph indices: N * 1\n  = 5N + 38\n\n  Non-instanced:\n  - position: N * 4 * 3\n  - index: N * 2 * 3\n  - normal: N * 4 * 3\n  - uv: N * 4 * 2\n  - glyph indices: N * 1\n  = 39N\n\nA downside of this is the rare-but-possible lack of the instanced arrays extension,\nwhich we could potentially work around with a fallback non-instanced implementation.\n\n*/\nclass GlyphsGeometry extends InstancedBufferGeometry {\n  constructor() {\n    super();\n\n    this.detail = 1;\n    this.curveRadius = 0;\n\n    // Define groups for rendering text outline as a separate pass; these will only\n    // be used when the `material` getter returns an array, i.e. outlineWidth > 0.\n    this.groups = [\n      {start: 0, count: Infinity, materialIndex: 0},\n      {start: 0, count: Infinity, materialIndex: 1}\n    ];\n\n    // Preallocate empty bounding objects\n    this.boundingSphere = new Sphere();\n    this.boundingBox = new Box3();\n  }\n\n  computeBoundingSphere () {\n    // No-op; we'll sync the boundingSphere proactively when needed.\n  }\n\n  computeBoundingBox() {\n    // No-op; we'll sync the boundingBox proactively when needed.\n  }\n\n  // Since our base geometry contains triangles for both front and back sides, we can emulate\n  // the \"side\" by restricting the draw range.\n  setSide(side) {\n    const verts = this.getIndex().count;\n    this.setDrawRange(side === BackSide ? verts / 2 : 0, side === DoubleSide ? verts : verts / 2);\n  }\n\n  set detail(detail) {\n    if (detail !== this._detail) {\n      this._detail = detail;\n      if (typeof detail !== 'number' || detail < 1) {\n        detail = 1;\n      }\n      let tpl = getTemplateGeometry(detail)\n      ;['position', 'normal', 'uv'].forEach(attr => {\n        this.attributes[attr] = tpl.attributes[attr].clone();\n      });\n      this.setIndex(tpl.getIndex().clone());\n    }\n  }\n  get detail() {\n    return this._detail\n  }\n\n  set curveRadius(r) {\n    if (r !== this._curveRadius) {\n      this._curveRadius = r;\n      this._updateBounds();\n    }\n  }\n  get curveRadius() {\n    return this._curveRadius\n  }\n\n  /**\n   * Update the geometry for a new set of glyphs.\n   * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs\n   *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1\n   * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within\n   *        the SDF atlas texture.\n   * @param {Array} blockBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs\n   * @param {Array} [chunkedBounds] - An array of objects describing bounds for each chunk of N\n   *        consecutive glyphs: `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`. This can be\n   *        used with `applyClipRect` to choose an optimized `instanceCount`.\n   * @param {Uint8Array} [glyphColors] - An array holding r,g,b values for each glyph.\n   */\n  updateGlyphs(glyphBounds, glyphAtlasIndices, blockBounds, chunkedBounds, glyphColors) {\n    // Update the instance attributes\n    updateBufferAttr(this, glyphBoundsAttrName, glyphBounds, 4);\n    updateBufferAttr(this, glyphIndexAttrName, glyphAtlasIndices, 1);\n    updateBufferAttr(this, glyphColorAttrName, glyphColors, 3);\n    this._blockBounds = blockBounds;\n    this._chunkedBounds = chunkedBounds;\n    this.instanceCount = glyphAtlasIndices.length;\n    this._updateBounds();\n  }\n\n  _updateBounds() {\n    const bounds = this._blockBounds;\n    if (bounds) {\n      const { curveRadius, boundingBox: bbox } = this;\n      if (curveRadius) {\n        const { PI, floor, min, max, sin, cos } = Math;\n        const halfPi = PI / 2;\n        const twoPi = PI * 2;\n        const absR = Math.abs(curveRadius);\n        const leftAngle = bounds[0] / absR;\n        const rightAngle = bounds[2] / absR;\n        const minX = floor((leftAngle + halfPi) / twoPi) !== floor((rightAngle + halfPi) / twoPi)\n          ? -absR : min(sin(leftAngle) * absR, sin(rightAngle) * absR);\n        const maxX = floor((leftAngle - halfPi) / twoPi) !== floor((rightAngle - halfPi) / twoPi)\n          ? absR : max(sin(leftAngle) * absR, sin(rightAngle) * absR);\n        const maxZ = floor((leftAngle + PI) / twoPi) !== floor((rightAngle + PI) / twoPi)\n          ? absR * 2 : max(absR - cos(leftAngle) * absR, absR - cos(rightAngle) * absR);\n        bbox.min.set(minX, bounds[1], curveRadius < 0 ? -maxZ : 0);\n        bbox.max.set(maxX, bounds[3], curveRadius < 0 ? 0 : maxZ);\n      } else {\n        bbox.min.set(bounds[0], bounds[1], 0);\n        bbox.max.set(bounds[2], bounds[3], 0);\n      }\n      bbox.getBoundingSphere(this.boundingSphere);\n    }\n  }\n\n  /**\n   * Given a clipping rect, and the chunkedBounds from the last updateGlyphs call, choose the lowest\n   * `instanceCount` that will show all glyphs within the clipped view. This is an optimization\n   * for long blocks of text that are clipped, to skip vertex shader evaluation for glyphs that would\n   * be clipped anyway.\n   *\n   * Note that since `drawElementsInstanced[ANGLE]` only accepts an instance count and not a starting\n   * offset, this optimization becomes less effective as the clipRect moves closer to the end of the\n   * text block. We could fix that by switching from instancing to a full geometry with a drawRange,\n   * but at the expense of much larger attribute buffers (see classdoc above.)\n   *\n   * @param {Vector4} clipRect\n   */\n  applyClipRect(clipRect) {\n    let count = this.getAttribute(glyphIndexAttrName).count;\n    let chunks = this._chunkedBounds;\n    if (chunks) {\n      for (let i = chunks.length; i--;) {\n        count = chunks[i].end;\n        let rect = chunks[i].rect;\n        // note: both rects are l-b-r-t\n        if (rect[1] < clipRect.w && rect[3] > clipRect.y && rect[0] < clipRect.z && rect[2] > clipRect.x) {\n          break\n        }\n      }\n    }\n    this.instanceCount = count;\n  }\n}\n\n\nfunction updateBufferAttr(geom, attrName, newArray, itemSize) {\n  const attr = geom.getAttribute(attrName);\n  if (newArray) {\n    // If length isn't changing, just update the attribute's array data\n    if (attr && attr.array.length === newArray.length) {\n      attr.array.set(newArray);\n      attr.needsUpdate = true;\n    } else {\n      geom.setAttribute(attrName, new InstancedBufferAttribute(newArray, itemSize));\n      // If the new attribute has a different size, we also have to (as of r117) manually clear the\n      // internal cached max instance count. See https://github.com/mrdoob/three.js/issues/19706\n      // It's unclear if this is a threejs bug or a truly unsupported scenario; discussion in\n      // that ticket is ambiguous as to whether replacing a BufferAttribute with one of a\n      // different size is supported, but https://github.com/mrdoob/three.js/pull/17418 strongly\n      // implies it should be supported. It's possible we need to\n      delete geom._maxInstanceCount; //for r117+, could be fragile\n      geom.dispose(); //for r118+, more robust feeling, but more heavy-handed than I'd like\n    }\n  } else if (attr) {\n    geom.deleteAttribute(attrName);\n  }\n}\n\n// language=GLSL\nconst VERTEX_DEFS = `\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform vec4 uTroikaTotalBounds;\nuniform vec4 uTroikaClipRect;\nuniform mat3 uTroikaOrient;\nuniform bool uTroikaUseGlyphColors;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaBlurRadius;\nuniform vec2 uTroikaPositionOffset;\nuniform float uTroikaCurveRadius;\nattribute vec4 aTroikaGlyphBounds;\nattribute float aTroikaGlyphIndex;\nattribute vec3 aTroikaGlyphColor;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec3 vTroikaGlyphColor;\nvarying vec2 vTroikaGlyphDimensions;\n`;\n\n// language=GLSL prefix=\"void main() {\" suffix=\"}\"\nconst VERTEX_TRANSFORM = `\nvec4 bounds = aTroikaGlyphBounds;\nbounds.xz += uTroikaPositionOffset.x;\nbounds.yw -= uTroikaPositionOffset.y;\n\nvec4 outlineBounds = vec4(\n  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,\n  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius\n);\nvec4 clippedBounds = vec4(\n  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\n  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\n);\n\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\n\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\n\nuv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);\n\nfloat rad = uTroikaCurveRadius;\nif (rad != 0.0) {\n  float angle = position.x / rad;\n  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);\n  normal.xz = vec2(sin(angle), cos(angle));\n}\n  \nposition = uTroikaOrient * position;\nnormal = uTroikaOrient * normal;\n\nvTroikaGlyphUV = clippedXY.xy;\nvTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);\n\n${''/* NOTE: it seems important to calculate the glyph's bounding texture UVs here in the\n  vertex shader, rather than in the fragment shader, as the latter gives strange artifacts\n  on some glyphs (those in the leftmost texture column) on some systems. The exact reason\n  isn't understood but doing this here, then mix()-ing in the fragment shader, seems to work. */}\nfloat txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\nvec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\nvec2 txStartUV = txUvPerSquare * vec2(\n  mod(floor(aTroikaGlyphIndex / 4.0), txCols),\n  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)\n);\nvTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);\nvTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);\n`;\n\n// language=GLSL\nconst FRAGMENT_DEFS = `\nuniform sampler2D uTroikaSDFTexture;\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform float uTroikaSDFExponent;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaFillOpacity;\nuniform float uTroikaOutlineOpacity;\nuniform float uTroikaBlurRadius;\nuniform vec3 uTroikaStrokeColor;\nuniform float uTroikaStrokeWidth;\nuniform float uTroikaStrokeOpacity;\nuniform bool uTroikaSDFDebug;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec2 vTroikaGlyphDimensions;\n\nfloat troikaSdfValueToSignedDistance(float alpha) {\n  // Inverse of exponential encoding in webgl-sdf-generator\n  ${''/* TODO - there's some slight inaccuracy here when dealing with interpolated alpha values; those\n    are linearly interpolated where the encoding is exponential. Look into improving this by rounding\n    to nearest 2 whole texels, decoding those exponential values, and linearly interpolating the result.\n  */}\n  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);\n  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;\n  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);\n  return signedDist;\n}\n\nfloat troikaGlyphUvToSdfValue(vec2 glyphUV) {\n  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);\n  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);\n  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1\n  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;\n}\n\nfloat troikaGlyphUvToDistance(vec2 uv) {\n  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));\n}\n\nfloat troikaGetAADist() {\n  ${''/*\n    When the standard derivatives extension is available, we choose an antialiasing alpha threshold based\n    on the potential change in the SDF's alpha from this fragment to its neighbor. This strategy maximizes \n    readability and edge crispness at all sizes and screen resolutions.\n  */}\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\n  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;\n  #else\n  return vTroikaGlyphDimensions.x / 64.0;\n  #endif\n}\n\nfloat troikaGetFragDistValue() {\n  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);\n  float distance = troikaGlyphUvToDistance(clampedGlyphUV);\n \n  // Extrapolate distance when outside bounds:\n  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : \n    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\n\n  ${''/* \n  // TODO more refined extrapolated distance by adjusting for angle of gradient at edge...\n  // This has potential but currently gives very jagged extensions, maybe due to precision issues?\n  float uvStep = 1.0 / uTroikaSDFGlyphSize;\n  vec2 neighbor1UV = clampedGlyphUV + (\n    vTroikaGlyphUV.x != clampedGlyphUV.x ? vec2(0.0, uvStep * sign(0.5 - vTroikaGlyphUV.y)) :\n    vTroikaGlyphUV.y != clampedGlyphUV.y ? vec2(uvStep * sign(0.5 - vTroikaGlyphUV.x), 0.0) :\n    vec2(0.0)\n  );\n  vec2 neighbor2UV = clampedGlyphUV + (\n    vTroikaGlyphUV.x != clampedGlyphUV.x ? vec2(0.0, uvStep * -sign(0.5 - vTroikaGlyphUV.y)) :\n    vTroikaGlyphUV.y != clampedGlyphUV.y ? vec2(uvStep * -sign(0.5 - vTroikaGlyphUV.x), 0.0) :\n    vec2(0.0)\n  );\n  float neighbor1Distance = troikaGlyphUvToDistance(neighbor1UV);\n  float neighbor2Distance = troikaGlyphUvToDistance(neighbor2UV);\n  float distToUnclamped = length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\n  float distToNeighbor = length((clampedGlyphUV - neighbor1UV) * vTroikaGlyphDimensions);\n  float gradientAngle1 = min(asin(abs(neighbor1Distance - distance) / distToNeighbor), PI / 2.0);\n  float gradientAngle2 = min(asin(abs(neighbor2Distance - distance) / distToNeighbor), PI / 2.0);\n  distance += (cos(gradientAngle1) + cos(gradientAngle2)) / 2.0 * distToUnclamped;\n  */}\n\n  return distance;\n}\n\nfloat troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\n  float alpha = step(-distanceOffset, -distance);\n  #else\n\n  float alpha = smoothstep(\n    distanceOffset + aaDist,\n    distanceOffset - aaDist,\n    distance\n  );\n  #endif\n\n  return alpha;\n}\n`;\n\n// language=GLSL prefix=\"void main() {\" suffix=\"}\"\nconst FRAGMENT_TRANSFORM = `\nfloat aaDist = troikaGetAADist();\nfloat fragDistance = troikaGetFragDistValue();\nfloat edgeAlpha = uTroikaSDFDebug ?\n  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :\n  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));\n\n#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)\nvec4 fillRGBA = gl_FragColor;\nfillRGBA.a *= uTroikaFillOpacity;\nvec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);\nif (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;\ngl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(\n  -uTroikaStrokeWidth - aaDist,\n  -uTroikaStrokeWidth + aaDist,\n  fragDistance\n));\ngl_FragColor.a *= edgeAlpha;\n#endif\n\nif (edgeAlpha == 0.0) {\n  discard;\n}\n`;\n\n\n/**\n * Create a material for rendering text, derived from a baseMaterial\n */\nfunction createTextDerivedMaterial(baseMaterial) {\n  const textMaterial = createDerivedMaterial(baseMaterial, {\n    chained: true,\n    extensions: {\n      derivatives: true\n    },\n    uniforms: {\n      uTroikaSDFTexture: {value: null},\n      uTroikaSDFTextureSize: {value: new Vector2()},\n      uTroikaSDFGlyphSize: {value: 0},\n      uTroikaSDFExponent: {value: 0},\n      uTroikaTotalBounds: {value: new Vector4(0,0,0,0)},\n      uTroikaClipRect: {value: new Vector4(0,0,0,0)},\n      uTroikaDistanceOffset: {value: 0},\n      uTroikaOutlineOpacity: {value: 0},\n      uTroikaFillOpacity: {value: 1},\n      uTroikaPositionOffset: {value: new Vector2()},\n      uTroikaCurveRadius: {value: 0},\n      uTroikaBlurRadius: {value: 0},\n      uTroikaStrokeWidth: {value: 0},\n      uTroikaStrokeColor: {value: new Color()},\n      uTroikaStrokeOpacity: {value: 1},\n      uTroikaOrient: {value: new Matrix3()},\n      uTroikaUseGlyphColors: {value: true},\n      uTroikaSDFDebug: {value: false}\n    },\n    vertexDefs: VERTEX_DEFS,\n    vertexTransform: VERTEX_TRANSFORM,\n    fragmentDefs: FRAGMENT_DEFS,\n    fragmentColorTransform: FRAGMENT_TRANSFORM,\n    customRewriter({vertexShader, fragmentShader}) {\n      let uDiffuseRE = /\\buniform\\s+vec3\\s+diffuse\\b/;\n      if (uDiffuseRE.test(fragmentShader)) {\n        // Replace all instances of `diffuse` with our varying\n        fragmentShader = fragmentShader\n          .replace(uDiffuseRE, 'varying vec3 vTroikaGlyphColor')\n          .replace(/\\bdiffuse\\b/g, 'vTroikaGlyphColor');\n        // Make sure the vertex shader declares the uniform so we can grab it as a fallback\n        if (!uDiffuseRE.test(vertexShader)) {\n          vertexShader = vertexShader.replace(\n            voidMainRegExp,\n            'uniform vec3 diffuse;\\n$&\\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\\n'\n          );\n        }\n      }\n      return { vertexShader, fragmentShader }\n    }\n  });\n\n  // Force transparency - TODO is this reasonable?\n  textMaterial.transparent = true;\n\n  Object.defineProperties(textMaterial, {\n    isTroikaTextMaterial: {value: true},\n\n    // WebGLShadowMap reverses the side of the shadow material by default, which fails\n    // for planes, so here we force the `shadowSide` to always match the main side.\n    shadowSide: {\n      get() {\n        return this.side\n      },\n      set() {\n        //no-op\n      }\n    }\n  });\n\n  return textMaterial\n}\n\nconst defaultMaterial = /*#__PURE__*/ new MeshBasicMaterial({\n  color: 0xffffff,\n  side: DoubleSide,\n  transparent: true\n});\nconst defaultStrokeColor = 0x808080;\n\nconst tempMat4 = /*#__PURE__*/ new Matrix4();\nconst tempVec3a = /*#__PURE__*/ new Vector3();\nconst tempVec3b = /*#__PURE__*/ new Vector3();\nconst tempArray = [];\nconst origin = /*#__PURE__*/ new Vector3();\nconst defaultOrient = '+x+y';\n\nfunction first(o) {\n  return Array.isArray(o) ? o[0] : o\n}\n\nlet getFlatRaycastMesh = () => {\n  const mesh = new Mesh(\n    new PlaneGeometry(1, 1),\n    defaultMaterial\n  );\n  getFlatRaycastMesh = () => mesh;\n  return mesh\n};\nlet getCurvedRaycastMesh = () => {\n  const mesh = new Mesh(\n    new PlaneGeometry(1, 1, 32, 1),\n    defaultMaterial\n  );\n  getCurvedRaycastMesh = () => mesh;\n  return mesh\n};\n\nconst syncStartEvent = { type: 'syncstart' };\nconst syncCompleteEvent = { type: 'synccomplete' };\n\nconst SYNCABLE_PROPS = [\n  'font',\n  'fontSize',\n  'letterSpacing',\n  'lineHeight',\n  'maxWidth',\n  'overflowWrap',\n  'text',\n  'direction',\n  'textAlign',\n  'textIndent',\n  'whiteSpace',\n  'anchorX',\n  'anchorY',\n  'colorRanges',\n  'sdfGlyphSize'\n];\n\nconst COPYABLE_PROPS = SYNCABLE_PROPS.concat(\n  'material',\n  'color',\n  'depthOffset',\n  'clipRect',\n  'curveRadius',\n  'orientation',\n  'glyphGeometryDetail'\n);\n\n/**\n * @class Text\n *\n * A ThreeJS Mesh that renders a string of text on a plane in 3D space using signed distance\n * fields (SDF).\n */\nclass Text extends Mesh {\n  constructor() {\n    const geometry = new GlyphsGeometry();\n    super(geometry, null);\n\n    // === Text layout properties: === //\n\n    /**\n     * @member {string} text\n     * The string of text to be rendered.\n     */\n    this.text = '';\n\n    /**\n     * @member {number|string} anchorX\n     * Defines the horizontal position in the text block that should line up with the local origin.\n     * Can be specified as a numeric x position in local units, a string percentage of the total\n     * text block width e.g. `'25%'`, or one of the following keyword strings: 'left', 'center',\n     * or 'right'.\n     */\n    this.anchorX = 0;\n\n    /**\n     * @member {number|string} anchorX\n     * Defines the vertical position in the text block that should line up with the local origin.\n     * Can be specified as a numeric y position in local units (note: down is negative y), a string\n     * percentage of the total text block height e.g. `'25%'`, or one of the following keyword strings:\n     * 'top', 'top-baseline', 'top-cap', 'top-ex', 'middle', 'bottom-baseline', or 'bottom'.\n     */\n    this.anchorY = 0;\n\n    /**\n     * @member {number} curveRadius\n     * Defines a cylindrical radius along which the text's plane will be curved. Positive numbers put\n     * the cylinder's centerline (oriented vertically) that distance in front of the text, for a concave\n     * curvature, while negative numbers put it behind the text for a convex curvature. The centerline\n     * will be aligned with the text's local origin; you can use `anchorX` to offset it.\n     *\n     * Since each glyph is by default rendered with a simple quad, each glyph remains a flat plane\n     * internally. You can use `glyphGeometryDetail` to add more vertices for curvature inside glyphs.\n     */\n    this.curveRadius = 0;\n\n    /**\n     * @member {string} direction\n     * Sets the base direction for the text. The default value of \"auto\" will choose a direction based\n     * on the text's content according to the bidi spec. A value of \"ltr\" or \"rtl\" will force the direction.\n     */\n    this.direction = 'auto';\n\n    /**\n     * @member {string} font\n     * URL of a custom font to be used. Font files can be in .ttf, .otf, or .woff (not .woff2) formats.\n     * Defaults to the Roboto font loaded from Google Fonts.\n     */\n    this.font = null; //will use default from TextBuilder\n\n    /**\n     * @member {number} fontSize\n     * The size at which to render the font in local units; corresponds to the em-box height\n     * of the chosen `font`.\n     */\n    this.fontSize = 0.1;\n\n    /**\n     * @member {number} letterSpacing\n     * Sets a uniform adjustment to spacing between letters after kerning is applied. Positive\n     * numbers increase spacing and negative numbers decrease it.\n     */\n    this.letterSpacing = 0;\n\n    /**\n     * @member {number|string} lineHeight\n     * Sets the height of each line of text, as a multiple of the `fontSize`. Defaults to 'normal'\n     * which chooses a reasonable height based on the chosen font's ascender/descender metrics.\n     */\n    this.lineHeight = 'normal';\n\n    /**\n     * @member {number} maxWidth\n     * The maximum width of the text block, above which text may start wrapping according to the\n     * `whiteSpace` and `overflowWrap` properties.\n     */\n    this.maxWidth = Infinity;\n\n    /**\n     * @member {string} overflowWrap\n     * Defines how text wraps if the `whiteSpace` property is `normal`. Can be either `'normal'`\n     * to break at whitespace characters, or `'break-word'` to allow breaking within words.\n     * Defaults to `'normal'`.\n     */\n    this.overflowWrap = 'normal';\n\n    /**\n     * @member {string} textAlign\n     * The horizontal alignment of each line of text within the overall text bounding box.\n     */\n    this.textAlign = 'left';\n\n    /**\n     * @member {number} textIndent\n     * Indentation for the first character of a line; see CSS `text-indent`.\n     */\n    this.textIndent = 0;\n\n    /**\n     * @member {string} whiteSpace\n     * Defines whether text should wrap when a line reaches the `maxWidth`. Can\n     * be either `'normal'` (the default), to allow wrapping according to the `overflowWrap` property,\n     * or `'nowrap'` to prevent wrapping. Note that `'normal'` here honors newline characters to\n     * manually break lines, making it behave more like `'pre-wrap'` does in CSS.\n     */\n    this.whiteSpace = 'normal';\n\n\n    // === Presentation properties: === //\n\n    /**\n     * @member {THREE.Material} material\n     * Defines a _base_ material to be used when rendering the text. This material will be\n     * automatically replaced with a material derived from it, that adds shader code to\n     * decrease the alpha for each fragment (pixel) outside the text glyphs, with antialiasing.\n     * By default it will derive from a simple white MeshBasicMaterial, but you can use any\n     * of the other mesh materials to gain other features like lighting, texture maps, etc.\n     *\n     * Also see the `color` shortcut property.\n     */\n    this.material = null;\n\n    /**\n     * @member {string|number|THREE.Color} color\n     * This is a shortcut for setting the `color` of the text's material. You can use this\n     * if you don't want to specify a whole custom `material`. Also, if you do use a custom\n     * `material`, this color will only be used for this particuar Text instance, even if\n     * that same material instance is shared across multiple Text objects.\n     */\n    this.color = null;\n\n    /**\n     * @member {object|null} colorRanges\n     * WARNING: This API is experimental and may change.\n     * This allows more fine-grained control of colors for individual or ranges of characters,\n     * taking precedence over the material's `color`. Its format is an Object whose keys each\n     * define a starting character index for a range, and whose values are the color for each\n     * range. The color value can be a numeric hex color value, a `THREE.Color` object, or\n     * any of the strings accepted by `THREE.Color`.\n     */\n    this.colorRanges = null;\n\n    /**\n     * @member {number|string} outlineWidth\n     * WARNING: This API is experimental and may change.\n     * The width of an outline/halo to be drawn around each text glyph using the `outlineColor` and `outlineOpacity`.\n     * Can be specified as either an absolute number in local units, or as a percentage string e.g.\n     * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`, which means\n     * no outline will be drawn unless an `outlineOffsetX/Y` or `outlineBlur` is set.\n     */\n    this.outlineWidth = 0;\n\n    /**\n     * @member {string|number|THREE.Color} outlineColor\n     * WARNING: This API is experimental and may change.\n     * The color of the text outline, if `outlineWidth`/`outlineBlur`/`outlineOffsetX/Y` are set.\n     * Defaults to black.\n     */\n    this.outlineColor = 0x000000;\n\n    /**\n     * @member {number} outlineOpacity\n     * WARNING: This API is experimental and may change.\n     * The opacity of the outline, if `outlineWidth`/`outlineBlur`/`outlineOffsetX/Y` are set.\n     * Defaults to `1`.\n     */\n    this.outlineOpacity = 1;\n\n    /**\n     * @member {number|string} outlineBlur\n     * WARNING: This API is experimental and may change.\n     * A blur radius applied to the outer edge of the text's outline. If the `outlineWidth` is\n     * zero, the blur will be applied at the glyph edge, like CSS's `text-shadow` blur radius.\n     * Can be specified as either an absolute number in local units, or as a percentage string e.g.\n     * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`.\n     */\n    this.outlineBlur = 0;\n\n    /**\n     * @member {number|string} outlineOffsetX\n     * WARNING: This API is experimental and may change.\n     * A horizontal offset for the text outline.\n     * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n     * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n     */\n    this.outlineOffsetX = 0;\n\n    /**\n     * @member {number|string} outlineOffsetY\n     * WARNING: This API is experimental and may change.\n     * A vertical offset for the text outline.\n     * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n     * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n     */\n    this.outlineOffsetY = 0;\n\n    /**\n     * @member {number|string} strokeWidth\n     * WARNING: This API is experimental and may change.\n     * The width of an inner stroke drawn inside each text glyph using the `strokeColor` and `strokeOpacity`.\n     * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n     * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n     */\n    this.strokeWidth = 0;\n\n    /**\n     * @member {string|number|THREE.Color} strokeColor\n     * WARNING: This API is experimental and may change.\n     * The color of the text stroke, if `strokeWidth` is greater than zero. Defaults to gray.\n     */\n    this.strokeColor = defaultStrokeColor;\n\n    /**\n     * @member {number} strokeOpacity\n     * WARNING: This API is experimental and may change.\n     * The opacity of the stroke, if `strokeWidth` is greater than zero. Defaults to `1`.\n     */\n    this.strokeOpacity = 1;\n\n    /**\n     * @member {number} fillOpacity\n     * WARNING: This API is experimental and may change.\n     * The opacity of the glyph's fill from 0 to 1. This behaves like the material's `opacity` but allows\n     * giving the fill a different opacity than the `strokeOpacity`. A fillOpacity of `0` makes the\n     * interior of the glyph invisible, leaving just the `strokeWidth`. Defaults to `1`.\n     */\n    this.fillOpacity = 1;\n\n    /**\n     * @member {number} depthOffset\n     * This is a shortcut for setting the material's `polygonOffset` and related properties,\n     * which can be useful in preventing z-fighting when this text is laid on top of another\n     * plane in the scene. Positive numbers are further from the camera, negatives closer.\n     */\n    this.depthOffset = 0;\n\n    /**\n     * @member {Array<number>} clipRect\n     * If specified, defines a `[minX, minY, maxX, maxY]` of a rectangle outside of which all\n     * pixels will be discarded. This can be used for example to clip overflowing text when\n     * `whiteSpace='nowrap'`.\n     */\n    this.clipRect = null;\n\n    /**\n     * @member {string} orientation\n     * Defines the axis plane on which the text should be laid out when the mesh has no extra\n     * rotation transform. It is specified as a string with two axes: the horizontal axis with\n     * positive pointing right, and the vertical axis with positive pointing up. By default this\n     * is '+x+y', meaning the text sits on the xy plane with the text's top toward positive y\n     * and facing positive z. A value of '+x-z' would place it on the xz plane with the text's\n     * top toward negative z and facing positive y.\n     */\n    this.orientation = defaultOrient;\n\n    /**\n     * @member {number} glyphGeometryDetail\n     * Controls number of vertical/horizontal segments that make up each glyph's rectangular\n     * plane. Defaults to 1. This can be increased to provide more geometrical detail for custom\n     * vertex shader effects, for example.\n     */\n    this.glyphGeometryDetail = 1;\n\n    /**\n     * @member {number|null} sdfGlyphSize\n     * The size of each glyph's SDF (signed distance field) used for rendering. This must be a\n     * power-of-two number. Defaults to 64 which is generally a good balance of size and quality\n     * for most fonts. Larger sizes can improve the quality of glyph rendering by increasing\n     * the sharpness of corners and preventing loss of very thin lines, at the expense of\n     * increased memory footprint and longer SDF generation time.\n     */\n    this.sdfGlyphSize = null;\n\n    /**\n     * @member {boolean} gpuAccelerateSDF\n     * When `true`, the SDF generation process will be GPU-accelerated with WebGL when possible,\n     * making it much faster especially for complex glyphs, and falling back to a JavaScript version\n     * executed in web workers when support isn't available. It should automatically detect support,\n     * but it's still somewhat experimental, so you can set it to `false` to force it to use the JS\n     * version if you encounter issues with it.\n     */\n    this.gpuAccelerateSDF = true;\n\n    this.debugSDF = false;\n  }\n\n  /**\n   * Updates the text rendering according to the current text-related configuration properties.\n   * This is an async process, so you can pass in a callback function to be executed when it\n   * finishes.\n   * @param {function} [callback]\n   */\n  sync(callback) {\n    if (this._needsSync) {\n      this._needsSync = false;\n\n      // If there's another sync still in progress, queue\n      if (this._isSyncing) {\n        (this._queuedSyncs || (this._queuedSyncs = [])).push(callback);\n      } else {\n        this._isSyncing = true;\n        this.dispatchEvent(syncStartEvent);\n\n        getTextRenderInfo({\n          text: this.text,\n          font: this.font,\n          fontSize: this.fontSize || 0.1,\n          letterSpacing: this.letterSpacing || 0,\n          lineHeight: this.lineHeight || 'normal',\n          maxWidth: this.maxWidth,\n          direction: this.direction || 'auto',\n          textAlign: this.textAlign,\n          textIndent: this.textIndent,\n          whiteSpace: this.whiteSpace,\n          overflowWrap: this.overflowWrap,\n          anchorX: this.anchorX,\n          anchorY: this.anchorY,\n          colorRanges: this.colorRanges,\n          includeCaretPositions: true, //TODO parameterize\n          sdfGlyphSize: this.sdfGlyphSize,\n          gpuAccelerateSDF: this.gpuAccelerateSDF,\n        }, textRenderInfo => {\n          this._isSyncing = false;\n\n          // Save result for later use in onBeforeRender\n          this._textRenderInfo = textRenderInfo;\n\n          // Update the geometry attributes\n          this.geometry.updateGlyphs(\n            textRenderInfo.glyphBounds,\n            textRenderInfo.glyphAtlasIndices,\n            textRenderInfo.blockBounds,\n            textRenderInfo.chunkedBounds,\n            textRenderInfo.glyphColors\n          );\n\n          // If we had extra sync requests queued up, kick it off\n          const queued = this._queuedSyncs;\n          if (queued) {\n            this._queuedSyncs = null;\n            this._needsSync = true;\n            this.sync(() => {\n              queued.forEach(fn => fn && fn());\n            });\n          }\n\n          this.dispatchEvent(syncCompleteEvent);\n          if (callback) {\n            callback();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Initiate a sync if needed - note it won't complete until next frame at the\n   * earliest so if possible it's a good idea to call sync() manually as soon as\n   * all the properties have been set.\n   * @override\n   */\n  onBeforeRender(renderer, scene, camera, geometry, material, group) {\n    this.sync();\n\n    // This may not always be a text material, e.g. if there's a scene.overrideMaterial present\n    if (material.isTroikaTextMaterial) {\n      this._prepareForRender(material);\n    }\n\n    // We need to force the material to FrontSide to avoid the double-draw-call performance hit\n    // introduced in Three.js r130: https://github.com/mrdoob/three.js/pull/21967 - The sidedness\n    // is instead applied via drawRange in the GlyphsGeometry.\n    material._hadOwnSide = material.hasOwnProperty('side');\n    this.geometry.setSide(material._actualSide = material.side);\n    material.side = FrontSide;\n  }\n\n  onAfterRender(renderer, scene, camera, geometry, material, group) {\n    // Restore original material side\n    if (material._hadOwnSide) {\n      material.side = material._actualSide;\n    } else {\n      delete material.side; // back to inheriting from base material\n    }\n  }\n\n  /**\n   * Shortcut to dispose the geometry specific to this instance.\n   * Note: we don't also dispose the derived material here because if anything else is\n   * sharing the same base material it will result in a pause next frame as the program\n   * is recompiled. Instead users can dispose the base material manually, like normal,\n   * and we'll also dispose the derived material at that time.\n   */\n  dispose() {\n    this.geometry.dispose();\n  }\n\n  /**\n   * @property {TroikaTextRenderInfo|null} textRenderInfo\n   * @readonly\n   * The current processed rendering data for this TextMesh, returned by the TextBuilder after\n   * a `sync()` call. This will be `null` initially, and may be stale for a short period until\n   * the asynchrous `sync()` process completes.\n   */\n  get textRenderInfo() {\n    return this._textRenderInfo || null\n  }\n\n  // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n  // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n  get material() {\n    let derivedMaterial = this._derivedMaterial;\n    const baseMaterial = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = defaultMaterial.clone());\n    if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n      derivedMaterial = this._derivedMaterial = createTextDerivedMaterial(baseMaterial);\n      // dispose the derived material when its base material is disposed:\n      baseMaterial.addEventListener('dispose', function onDispose() {\n        baseMaterial.removeEventListener('dispose', onDispose);\n        derivedMaterial.dispose();\n      });\n    }\n    // If text outline is configured, render it as a preliminary draw using Three's multi-material\n    // feature (see GlyphsGeometry which sets up `groups` for this purpose) Doing it with multi\n    // materials ensures the layers are always rendered consecutively in a consistent order.\n    // Each layer will trigger onBeforeRender with the appropriate material.\n    if (this.outlineWidth || this.outlineBlur || this.outlineOffsetX || this.outlineOffsetY) {\n      let outlineMaterial = derivedMaterial._outlineMtl;\n      if (!outlineMaterial) {\n        outlineMaterial = derivedMaterial._outlineMtl = Object.create(derivedMaterial, {\n          id: {value: derivedMaterial.id + 0.1}\n        });\n        outlineMaterial.isTextOutlineMaterial = true;\n        outlineMaterial.depthWrite = false;\n        outlineMaterial.map = null; //???\n        derivedMaterial.addEventListener('dispose', function onDispose() {\n          derivedMaterial.removeEventListener('dispose', onDispose);\n          outlineMaterial.dispose();\n        });\n      }\n      return [\n        outlineMaterial,\n        derivedMaterial\n      ]\n    } else {\n      return derivedMaterial\n    }\n  }\n  set material(baseMaterial) {\n    if (baseMaterial && baseMaterial.isTroikaTextMaterial) { //prevent double-derivation\n      this._derivedMaterial = baseMaterial;\n      this._baseMaterial = baseMaterial.baseMaterial;\n    } else {\n      this._baseMaterial = baseMaterial;\n    }\n  }\n\n  get glyphGeometryDetail() {\n    return this.geometry.detail\n  }\n  set glyphGeometryDetail(detail) {\n    this.geometry.detail = detail;\n  }\n\n  get curveRadius() {\n    return this.geometry.curveRadius\n  }\n  set curveRadius(r) {\n    this.geometry.curveRadius = r;\n  }\n\n  // Create and update material for shadows upon request:\n  get customDepthMaterial() {\n    return first(this.material).getDepthMaterial()\n  }\n  get customDistanceMaterial() {\n    return first(this.material).getDistanceMaterial()\n  }\n\n  _prepareForRender(material) {\n    const isOutline = material.isTextOutlineMaterial;\n    const uniforms = material.uniforms;\n    const textInfo = this.textRenderInfo;\n    if (textInfo) {\n      const {sdfTexture, blockBounds} = textInfo;\n      uniforms.uTroikaSDFTexture.value = sdfTexture;\n      uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width, sdfTexture.image.height);\n      uniforms.uTroikaSDFGlyphSize.value = textInfo.sdfGlyphSize;\n      uniforms.uTroikaSDFExponent.value = textInfo.sdfExponent;\n      uniforms.uTroikaTotalBounds.value.fromArray(blockBounds);\n      uniforms.uTroikaUseGlyphColors.value = !isOutline && !!textInfo.glyphColors;\n\n      let distanceOffset = 0;\n      let blurRadius = 0;\n      let strokeWidth = 0;\n      let fillOpacity;\n      let strokeOpacity;\n      let strokeColor;\n      let offsetX = 0;\n      let offsetY = 0;\n\n      if (isOutline) {\n        let {outlineWidth, outlineOffsetX, outlineOffsetY, outlineBlur, outlineOpacity} = this;\n        distanceOffset = this._parsePercent(outlineWidth) || 0;\n        blurRadius = Math.max(0, this._parsePercent(outlineBlur) || 0);\n        fillOpacity = outlineOpacity;\n        offsetX = this._parsePercent(outlineOffsetX) || 0;\n        offsetY = this._parsePercent(outlineOffsetY) || 0;\n      } else {\n        strokeWidth = Math.max(0, this._parsePercent(this.strokeWidth) || 0);\n        if (strokeWidth) {\n          strokeColor = this.strokeColor;\n          uniforms.uTroikaStrokeColor.value.set(strokeColor == null ? defaultStrokeColor : strokeColor);\n          strokeOpacity = this.strokeOpacity;\n          if (strokeOpacity == null) strokeOpacity = 1;\n        }\n        fillOpacity = this.fillOpacity;\n      }\n\n      uniforms.uTroikaDistanceOffset.value = distanceOffset;\n      uniforms.uTroikaPositionOffset.value.set(offsetX, offsetY);\n      uniforms.uTroikaBlurRadius.value = blurRadius;\n      uniforms.uTroikaStrokeWidth.value = strokeWidth;\n      uniforms.uTroikaStrokeOpacity.value = strokeOpacity;\n      uniforms.uTroikaFillOpacity.value = fillOpacity == null ? 1 : fillOpacity;\n      uniforms.uTroikaCurveRadius.value = this.curveRadius || 0;\n\n      let clipRect = this.clipRect;\n      if (clipRect && Array.isArray(clipRect) && clipRect.length === 4) {\n        uniforms.uTroikaClipRect.value.fromArray(clipRect);\n      } else {\n        // no clipping - choose a finite rect that shouldn't ever be reached by overflowing glyphs or outlines\n        const pad = (this.fontSize || 0.1) * 100;\n        uniforms.uTroikaClipRect.value.set(\n          blockBounds[0] - pad,\n          blockBounds[1] - pad,\n          blockBounds[2] + pad,\n          blockBounds[3] + pad\n        );\n      }\n      this.geometry.applyClipRect(uniforms.uTroikaClipRect.value);\n    }\n    uniforms.uTroikaSDFDebug.value = !!this.debugSDF;\n    material.polygonOffset = !!this.depthOffset;\n    material.polygonOffsetFactor = material.polygonOffsetUnits = this.depthOffset || 0;\n\n    // Shortcut for setting material color via `color` prop on the mesh; this is\n    // applied only to the derived material to avoid mutating a shared base material.\n    const color = isOutline ? (this.outlineColor || 0) : this.color;\n\n    if (color == null) {\n      delete material.color; //inherit from base\n    } else {\n      const colorObj = material.hasOwnProperty('color') ? material.color : (material.color = new Color());\n      if (color !== colorObj._input || typeof color === 'object') {\n        colorObj.set(colorObj._input = color);\n      }\n    }\n\n    // base orientation\n    let orient = this.orientation || defaultOrient;\n    if (orient !== material._orientation) {\n      let rotMat = uniforms.uTroikaOrient.value;\n      orient = orient.replace(/[^-+xyz]/g, '');\n      let match = orient !== defaultOrient && orient.match(/^([-+])([xyz])([-+])([xyz])$/);\n      if (match) {\n        let [, hSign, hAxis, vSign, vAxis] = match;\n        tempVec3a.set(0, 0, 0)[hAxis] = hSign === '-' ? 1 : -1;\n        tempVec3b.set(0, 0, 0)[vAxis] = vSign === '-' ? -1 : 1;\n        tempMat4.lookAt(origin, tempVec3a.cross(tempVec3b), tempVec3b);\n        rotMat.setFromMatrix4(tempMat4);\n      } else {\n        rotMat.identity();\n      }\n      material._orientation = orient;\n    }\n  }\n\n  _parsePercent(value) {\n    if (typeof value === 'string') {\n      let match = value.match(/^(-?[\\d.]+)%$/);\n      let pct = match ? parseFloat(match[1]) : NaN;\n      value = (isNaN(pct) ? 0 : pct / 100) * this.fontSize;\n    }\n    return value\n  }\n\n  /**\n   * Translate a point in local space to an x/y in the text plane.\n   */\n  localPositionToTextCoords(position, target = new Vector2()) {\n    target.copy(position); //simple non-curved case is 1:1\n    const r = this.curveRadius;\n    if (r) { //flatten the curve\n      target.x = Math.atan2(position.x, Math.abs(r) - Math.abs(position.z)) * Math.abs(r);\n    }\n    return target\n  }\n\n  /**\n   * Translate a point in world space to an x/y in the text plane.\n   */\n  worldPositionToTextCoords(position, target = new Vector2()) {\n    tempVec3a.copy(position);\n    return this.localPositionToTextCoords(this.worldToLocal(tempVec3a), target)\n  }\n\n  /**\n   * @override Custom raycasting to test against the whole text block's max rectangular bounds\n   * TODO is there any reason to make this more granular, like within individual line or glyph rects?\n   */\n  raycast(raycaster, intersects) {\n    const {textRenderInfo, curveRadius} = this;\n    if (textRenderInfo) {\n      const bounds = textRenderInfo.blockBounds;\n      const raycastMesh = curveRadius ? getCurvedRaycastMesh() : getFlatRaycastMesh();\n      const geom = raycastMesh.geometry;\n      const {position, uv} = geom.attributes;\n      for (let i = 0; i < uv.count; i++) {\n        let x = bounds[0] + (uv.getX(i) * (bounds[2] - bounds[0]));\n        const y = bounds[1] + (uv.getY(i) * (bounds[3] - bounds[1]));\n        let z = 0;\n        if (curveRadius) {\n          z = curveRadius - Math.cos(x / curveRadius) * curveRadius;\n          x = Math.sin(x / curveRadius) * curveRadius;\n        }\n        position.setXYZ(i, x, y, z);\n      }\n      geom.boundingSphere = this.geometry.boundingSphere;\n      geom.boundingBox = this.geometry.boundingBox;\n      raycastMesh.matrixWorld = this.matrixWorld;\n      raycastMesh.material.side = this.material.side;\n      tempArray.length = 0;\n      raycastMesh.raycast(raycaster, tempArray);\n      for (let i = 0; i < tempArray.length; i++) {\n        tempArray[i].object = this;\n        intersects.push(tempArray[i]);\n      }\n    }\n  }\n\n  copy(source) {\n    // Prevent copying the geometry reference so we don't end up sharing attributes between instances\n    const geom = this.geometry;\n    super.copy(source);\n    this.geometry = geom;\n\n    COPYABLE_PROPS.forEach(prop => {\n      this[prop] = source[prop];\n    });\n    return this\n  }\n\n  clone() {\n    return new this.constructor().copy(this)\n  }\n}\n\n\n// Create setters for properties that affect text layout:\nSYNCABLE_PROPS.forEach(prop => {\n  const privateKey = '_private_' + prop;\n  Object.defineProperty(Text.prototype, prop, {\n    get() {\n      return this[privateKey]\n    },\n    set(value) {\n      if (value !== this[privateKey]) {\n        this[privateKey] = value;\n        this._needsSync = true;\n      }\n    }\n  });\n});\n\n//=== Utility functions for dealing with carets and selection ranges ===//\n\n/**\n * @typedef {object} TextCaret\n * @property {number} x - x position of the caret\n * @property {number} y - y position of the caret's bottom\n * @property {number} height - height of the caret\n * @property {number} charIndex - the index in the original input string of this caret's target\n *   character; the caret will be for the position _before_ that character.\n */\n\n/**\n * Given a local x/y coordinate in the text block plane, find the nearest caret position.\n * @param {TroikaTextRenderInfo} textRenderInfo - a result object from TextBuilder#getTextRenderInfo\n * @param {number} x\n * @param {number} y\n * @return {TextCaret | null}\n */\nfunction getCaretAtPoint(textRenderInfo, x, y) {\n  let closestCaret = null;\n  const {caretHeight} = textRenderInfo;\n  const caretsByRow = groupCaretsByRow(textRenderInfo);\n\n  // Find nearest row by y first\n  let closestRowY = Infinity;\n  caretsByRow.forEach((carets, rowY) => {\n    if (Math.abs(y - (rowY + caretHeight / 2)) < Math.abs(y - (closestRowY + caretHeight / 2))) {\n      closestRowY = rowY;\n    }\n  });\n\n  // Then find closest caret by x within that row\n  caretsByRow.get(closestRowY).forEach(caret => {\n    if (!closestCaret || Math.abs(x - caret.x) < Math.abs(x - closestCaret.x)) {\n      closestCaret = caret;\n    }\n  });\n  return closestCaret\n}\n\n\nconst _rectsCache = new WeakMap();\n\n/**\n * Given start and end character indexes, return a list of rectangles covering all the\n * characters within that selection.\n * @param {TroikaTextRenderInfo} textRenderInfo\n * @param {number} start - index of the first char in the selection\n * @param {number} end - index of the first char after the selection\n * @return {Array<{left, top, right, bottom}> | null}\n */\nfunction getSelectionRects(textRenderInfo, start, end) {\n  let rects;\n  if (textRenderInfo) {\n    // Check cache - textRenderInfo is frozen so it's safe to cache based on it\n    let prevResult = _rectsCache.get(textRenderInfo);\n    if (prevResult && prevResult.start === start && prevResult.end === end) {\n      return prevResult.rects\n    }\n\n    const {caretPositions, caretHeight} = textRenderInfo;\n\n    // Normalize\n    if (end < start) {\n      const s = start;\n      start = end;\n      end = s;\n    }\n    start = Math.max(start, 0);\n    end = Math.min(end, caretPositions.length + 1);\n\n    // Build list of rects, expanding the current rect for all characters in a run and starting\n    // a new rect whenever reaching a new line or a new bidi direction\n    rects = [];\n    let currentRect = null;\n    for (let i = start; i < end; i++) {\n      const x1 = caretPositions[i * 3];\n      const x2 = caretPositions[i * 3 + 1];\n      const left = Math.min(x1, x2);\n      const right = Math.max(x1, x2);\n      const bottom = caretPositions[i * 3 + 2];\n      if (!currentRect || bottom !== currentRect.bottom || left > currentRect.right || right < currentRect.left) {\n        currentRect = {\n          left: Infinity,\n          right: -Infinity,\n          bottom: bottom,\n          top: bottom + caretHeight\n        };\n        rects.push(currentRect);\n      }\n      currentRect.left = Math.min(left, currentRect.left);\n      currentRect.right = Math.max(right, currentRect.right);\n    }\n\n    // Merge any overlapping rects, e.g. those formed by adjacent bidi runs\n    rects.sort((a, b) => b.bottom - a.bottom || a.left - b.left);\n    for (let i = rects.length - 1; i-- > 0;) {\n      const rectA = rects[i];\n      const rectB = rects[i + 1];\n      if (rectA.bottom === rectB.bottom && rectA.left <= rectB.right && rectA.right >= rectB.left) {\n        rectB.left = Math.min(rectB.left, rectA.left);\n        rectB.right = Math.max(rectB.right, rectA.right);\n        rects.splice(i, 1);\n      }\n    }\n\n    _rectsCache.set(textRenderInfo, {start, end, rects});\n  }\n  return rects\n}\n\nconst _caretsByRowCache = new WeakMap();\n\nfunction groupCaretsByRow(textRenderInfo) {\n  // textRenderInfo is frozen so it's safe to cache based on it\n  let caretsByRow = _caretsByRowCache.get(textRenderInfo);\n  if (!caretsByRow) {\n    const {caretPositions, caretHeight} = textRenderInfo;\n    caretsByRow = new Map();\n    for (let i = 0; i < caretPositions.length; i += 3) {\n      const rowY = caretPositions[i + 2];\n      let rowCarets = caretsByRow.get(rowY);\n      if (!rowCarets) {\n        caretsByRow.set(rowY, rowCarets = []);\n      }\n      rowCarets.push({\n        x: caretPositions[i],\n        y: rowY,\n        height: caretHeight,\n        charIndex: i / 3\n      });\n      // Add one more caret after the final char\n      if (i + 3 >= caretPositions.length) {\n        rowCarets.push({\n          x: caretPositions[i + 1],\n          y: rowY,\n          height: caretHeight,\n          charIndex: i / 3 + 1\n        });\n      }\n    }\n  }\n  _caretsByRowCache.set(textRenderInfo, caretsByRow);\n  return caretsByRow\n}\n\nexport { GlyphsGeometry, Text, configureTextBuilder, createTextDerivedMaterial, dumpSDFTextures, getCaretAtPoint, getSelectionRects, preloadFont, typesetterWorkerModule };\n"],"names":["workerBootstrap","modules","Object","create","registerModule","ref","callback","id","name","dependencies","init","getTransferables","map","dep","isWorkerModule","depResult","Error","value","rehydrate","apply","console","error","err","noLog","str","result","self","troikaDefine","r","url","URL","createObjectURL","Blob","replace","type","importScripts","revokeObjectURL","addEventListener","e","data","messageId","action","postMessage","success","message","isCallable","ref$1","args","then","handleResult","rej","tx","Array","isArray","length","undefined","callModule","transferables","stack","supportsWorkers","supported","window","document","Worker","terminate","log","_workerModuleId","_messageId","_allowInitAsString","workers","registeredModules","openRequests","defineWorkerModule","options","workerId","moduleFunc","len","arguments","_getInitResult","initResult","initPromise","Promise","all","deps","defineMainThreadModule","registrationPromise","callWorker","workerModuleData","unregister","delete","Set","add","stringifyFunction","fn","toString","test","resolve","reject","response","worker","bootstrap","onmessage","msgId","getWorker","voidMainRegExp","expandShaderIncludes","source","match","include","chunk","ShaderChunk","_lut","i","assign","target","prop","prototype","hasOwnProperty","call","epoch","Date","now","CONSTRUCTOR_CACHE","WeakMap","SHADER_UPGRADE_CACHE","Map","materialInstanceId","createDerivedMaterial","baseMaterial","optionsKey","optionsHash","JSON","stringify","optionsJsonReplacer","optionsHashesToIds","get","set","_idCtr","getKeyForOptions","ctorsByDerivation","privateBeforeCompileProp","onBeforeCompile","shaderInfo","renderer","this","cacheKey","customProgramCacheKey","vertexShader","fragmentShader","upgradedShaders","upgraded","material","key","vertexDefs","vertexMainIntro","vertexMainOutro","vertexTransform","fragmentDefs","fragmentMainIntro","fragmentMainOutro","fragmentColorTransform","customRewriter","timeUniform","res","postChunks","push","join","code","match1","index","fullStr","substr","channel","injectIntoShaderCode","upgradeShaders","uniforms","DerivedMaterial","derive","chained","clone","base","derived","descriptor","defineProperty","uuid","d0","Math","random","d1","d2","d3","toUpperCase","generateUUID","defines","extensions","_listeners","constructor","isDerivedMaterial","writable","configurable","copy","isShaderMaterial","UniformsUtils","newBase","getDepthMaterial","depthMaterial","_depthMaterial","MeshDepthMaterial","depthPacking","RGBADepthPacking","IS_DEPTH_MATERIAL","getDistanceMaterial","distanceMaterial","_distanceMaterial","MeshDistanceMaterial","IS_DISTANCE_MATERIAL","dispose","shaderCode","defs","intro","outro","DoubleSide","Mesh","performance","mainThreadGenerator","createSDFGenerator","warned","queue","timer","nextChunk","start","shift","setTimeout","generateSDF_GL","webgl","generateIntoCanvas","timing","threadCount","idleTimeout","threads","callNum","generateSDF_JS_Worker","width","height","path","viewBox","distance","exponent","canvas","x","y","thread","workerModule","_createSDFGenerator","generate","javascript","textureData","buffer","requests","idleTimer","clearTimeout","imageData","Uint8Array","webglUtils","renderImageData","forEach","terminateWorker","resizeWebGLCanvasWithoutClearing","parse","t","_bin","a","readASCII","n","readUshort","o","readUint","s","h","_readFont","readFixed","_data","_offset","f","d","u","l","offset","v","trim","_tabOffset","readF2dot14","readShort","readInt","_view","getInt32","readInt8","getInt8","getInt16","getUint16","readUshorts","getUint32","readUint64","String","fromCharCode","readUnicode","_tdec","TextDecoder","readUTF8","decode","readBytes","readASCIIArray","_dataView","DataView","byteOffset","byteLength","_lctf","scriptList","readScriptList","featureList","readFeatureList","lookupList","readLookupList","readLookupTable","tabs","ltype","flag","numOfOnes","readClassDef","getInterval","readCoverage","fmt","tab","coverageIndex","indexOf","readFeatureTable","tag","featureParams","readScriptTable","default","readLangSysTable","reqFeature","features","CFF","readIndex","readDict","readSubrs","CharStrings","ROS","FDArray","c","p","_readFDict","FDSelect","U","g","Encoding","readEncoding","charset","readCharset","Private","Subrs","Bias","tableSE","glyphByUnicode","glyphBySE","getCharString","val","size","readCharString","S","parseFloat","cmap","tables","parse0","parse4","parse6","parse12","debug","format","searchRange","entrySelector","rangeShift","endCount","startCount","idDelta","idRangeOffset","glyphIdArray","firstCode","groups","glyf","maxp","numGlyphs","_parseGlyf","loca","noc","xMin","yMin","xMax","yMax","endPts","instructions","flags","xs","ys","parts","m","b","ty","p1","p2","glyphIndex","instr","GPOS","subt","coverage","pos","readValueRecord","pairsets","P","gid2","val1","val2","F","_","classDef1","classDef2","matrix","C","I","w","GSUB","delta","newg","vals","readLigatureSet","cDef","scset","readSubClassSet","backCvg","inptCvg","ahedCvg","lookupRec","readSubstLookupRecords","readSubClassRule","input","substLookupRecords","readChainSubClassSet","readChainSubClassRule","subst","readLigature","chain","nglyph","head","fontRevision","unitsPerEm","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfHMetrics","hmtx","aWidth","lsBearing","kern","parseV1","glyph1","rval","readFormat0","glyph2","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","_lang","postScriptName","version0","version1","version2","version5","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefault","usBreak","usMaxContext","usLowerOpticalPointSize","usUpperOpticalPointSize","post","version","italicAngle","underlinePosition","underlineThickness","codeToGlyph","p0e4","p3e1","p1e0","p0e3","glyphToPath","cmds","crds","SVG","entries","toPath","nStems","haveWidth","defaultWidthX","open","_drawCFF","_drawGlyf","_simpleGlyph","_compoGlyph","moveTo","lineTo","qcurveTo","closePath","_getGlyphClass","getPairAdjustment","_applySubs","_glsCovered","glyphsToPath","curveTo","nominalWidthX","pop","O","T","abs","k","G","D","B","L","R","A","W","M","V","N","charAt","Typr","Uint16Array","Uint32Array","captureStackTrace","max","E","subarray","j","z","q","H","J","K","Q","X","Y","Z","$","rr","er","nr","tr","stream","convert_streams","setUint16","setUint32","signature","flavor","numTables","reserved","totalSfntSize","majorVersion","minorVersion","metaOffset","metaLength","metaOrigLength","privOffset","privLength","pow","compLength","origLength","origChecksum","reduce","outOffset","slice","woff2otf","cmdArgLengths","joiningTypeRawData","JT_LEFT","JT_RIGHT","JT_DUAL","JT_TRANSPARENT","JT_JOIN_CAUSING","JT_NON_JOINING","joiningTypeMap","getCharJoiningType","ch","lastCode","split","range","skip","step","parseInt","ISOL","INIT","FINA","MEDI","formsToFeatures","detectJoiningForms","joiningForms","prevJoiningType","prevForm","prevIndex","codePointAt","joiningType","form","firstNum","wrapFontObj","typrFont","glyphMap","os2","fontObj","capHeight","xHeight","forEachGlyph","text","fontSize","letterSpacing","glyphX","fontScale","glyphIndices","font","glyphIds","cc","gsub","supportedFeatures","usedLookups","feature","ti","isJoiningFeature","ci","stringToGlyphs","charIndex","prevGlyphIndex","glyphObj","crdsIdx","numArgs","Infinity","advanceWidth","pathCommandCount","peek","typrFactory","woff2otfFactory","parserFactory","CONFIG","defaultFontURL","sdfGlyphSize","sdfMargin","sdfExponent","textureWidth","tempColor","Color","hasRequested","now$1","configureTextBuilder","config","warn","atlases","getTextRenderInfo","totalStart","linkEl","createElement","href","toAbsoluteURL","colorRanges","colors","getHex","freeze","glyphsPerRow","atlas","glyphCount","sdfCanvas","sdfTexture","Texture","LinearFilter","contextLost","glyphsByFont","generateMipmaps","event","preventDefault","promises","glyph","generateGlyphSDF","safariPre15Workaround","needsUpdate","initContextLossHandling","fontGlyphs","typesetInWorker","glyphPositions","timings","neededSDFs","glyphBounds","Float32Array","fontSizeMult","boundsIdx","positionsIdx","quadsStart","glyphId","glyphInfo","pathBounds","glyphData","fontUnitsMargin","atlasIndex","sdfViewBox","posX","posY","quads","sdfStart","sdf","currentHeight","neededRows","ceil","neededHeight","log2","info","gpuAccelerateSDF","sdfTotal","total","parameters","glyphAtlasIndices","glyphColors","caretPositions","caretHeight","chunkedBounds","lineHeight","topBaseline","blockBounds","visibleBounds","_warm","isSupported","useGPU","maxDist","squareIndex","floor","useWebGL","generateSDF","preloadFont","characters","toObj","fromObj","createImageBitmap","gl","getContext","pixels","image","flipY","isDataTexture","readPixels","RGBA","UNSIGNED_BYTE","typesetterWorkerModule","fontParser","bidi","fonts","INF","DEFAULT_IGNORABLE_CHARS","lineBreakingWhiteSpace","BREAK_AFTER_CHARS","RegExp","loadFont","fontUrl","pending","tryLoad","onError","request","XMLHttpRequest","responseType","onload","status","statusText","onerror","send","doLoadFont","callbacks","cb","typeset","maxWidth","direction","textAlign","textIndent","whiteSpace","overflowWrap","anchorX","anchorY","includeCaretPositions","chunkedBoundsSize","metricsOnly","mainStart","fontLoad","typesetting","hasMaxWidth","isFinite","maxLineWidth","renderableGlyphCount","canWrap","typesetStart","halfLeading","min","caretBottomOffset","lineXOffset","currentLine","TextLine","lines","char","glyphWidth","curLineCount","count","nextLine","isWhitespace","canBreakAfter","isEmpty","glyphAt","splitAt","adjustX","isSoftWrapped","fly","line","anchorXOffset","anchorYOffset","parsePercent","bidiLevelsResult","getEmbeddingLevels","lineYOffset","currentColor","renderableGlyphIndex","prevCharIndex","colorCharIndex","lineIndex","lineGlyphCount","lineWidth","trailingWhitespaceCount","justifyAdjust","whitespaceCount","justifyOffset","flips","getReorderSegments","fi","end","left","right","startInLine","endInLine","setGlyphObj","rtl","levels","mirrored","getMirroredCharacter","caretLeft","caretRight","ligCount","fillLigatureCaretPositions","idx","glyphY","visX0","visY0","visX1","visY1","rect","chunkRect","pct","NaN","isNaN","ligStartIndex","ligStartX","ligEndX","ligY","guessedAdvanceX","startIndex","textLineProps","flyweight","newLine","splice","obj","measure","x0","y0","x1","y1","bidiFactory","createTypesetter","typesetter","dumpSDFTextures","keys","toDataURL","templateGeometries","glyphIndexAttrName","GlyphsGeometry","InstancedBufferGeometry","super","detail","curveRadius","materialIndex","boundingSphere","Sphere","boundingBox","Box3","computeBoundingSphere","computeBoundingBox","setSide","side","verts","getIndex","setDrawRange","BackSide","_detail","tpl","geom","front","PlaneGeometry","back","frontAttrs","attributes","backAttrs","combined","BufferGeometry","vertCount","uv","position","array","normal","setAttribute","Float32BufferAttribute","itemSize","setIndex","translate","getTemplateGeometry","attr","_curveRadius","_updateBounds","updateGlyphs","updateBufferAttr","_blockBounds","_chunkedBounds","instanceCount","bounds","bbox","PI","sin","cos","halfPi","twoPi","absR","leftAngle","rightAngle","minX","maxX","maxZ","getBoundingSphere","applyClipRect","clipRect","getAttribute","chunks","attrName","newArray","InstancedBufferAttribute","_maxInstanceCount","deleteAttribute","VERTEX_DEFS","VERTEX_TRANSFORM","FRAGMENT_DEFS","FRAGMENT_TRANSFORM","createTextDerivedMaterial","textMaterial","derivatives","uTroikaSDFTexture","uTroikaSDFTextureSize","Vector2","uTroikaSDFGlyphSize","uTroikaSDFExponent","uTroikaTotalBounds","Vector4","uTroikaClipRect","uTroikaDistanceOffset","uTroikaOutlineOpacity","uTroikaFillOpacity","uTroikaPositionOffset","uTroikaCurveRadius","uTroikaBlurRadius","uTroikaStrokeWidth","uTroikaStrokeColor","uTroikaStrokeOpacity","uTroikaOrient","Matrix3","uTroikaUseGlyphColors","uTroikaSDFDebug","uDiffuseRE","transparent","defineProperties","isTroikaTextMaterial","shadowSide","defaultMaterial","MeshBasicMaterial","color","defaultStrokeColor","tempMat4","Matrix4","tempVec3a","Vector3","tempVec3b","tempArray","origin","defaultOrient","first","getFlatRaycastMesh","mesh","getCurvedRaycastMesh","syncStartEvent","syncCompleteEvent","SYNCABLE_PROPS","COPYABLE_PROPS","concat","Text","outlineWidth","outlineColor","outlineOpacity","outlineBlur","outlineOffsetX","outlineOffsetY","strokeWidth","strokeColor","strokeOpacity","fillOpacity","depthOffset","orientation","glyphGeometryDetail","debugSDF","sync","_needsSync","_isSyncing","_queuedSyncs","dispatchEvent","textRenderInfo","_textRenderInfo","geometry","queued","onBeforeRender","scene","camera","group","_prepareForRender","_hadOwnSide","_actualSide","FrontSide","onAfterRender","derivedMaterial","_derivedMaterial","_baseMaterial","_defaultMaterial","onDispose","removeEventListener","outlineMaterial","_outlineMtl","isTextOutlineMaterial","depthWrite","customDepthMaterial","customDistanceMaterial","isOutline","textInfo","fromArray","distanceOffset","blurRadius","offsetX","offsetY","_parsePercent","pad","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","colorObj","_input","orient","_orientation","rotMat","hSign","hAxis","vSign","vAxis","lookAt","cross","setFromMatrix4","identity","localPositionToTextCoords","atan2","worldPositionToTextCoords","worldToLocal","raycast","raycaster","intersects","raycastMesh","getX","getY","setXYZ","matrixWorld","object","getCaretAtPoint","closestCaret","caretsByRow","_caretsByRowCache","rowY","rowCarets","groupCaretsByRow","closestRowY","carets","caret","privateKey","_rectsCache","getSelectionRects","rects","prevResult","currentRect","x2","bottom","top","sort","rectA","rectB"],"sourceRoot":""}